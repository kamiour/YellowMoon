!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(E,e){"use strict";function v(e){return null!=e&&e===e.window}var t=[],C=E.document,n=Object.getPrototypeOf,o=t.slice,m=t.concat,l=t.push,r=t.indexOf,i={},a=i.toString,g=i.hasOwnProperty,s=g.toString,d=s.call(Object),y={},b=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType},u={type:!0,src:!0,nonce:!0,noModule:!0};function x(e,t,i){var n,r,a=(i=i||C).createElement("script");if(a.text=e,t)for(n in u)(r=t[n]||t.getAttribute&&t.getAttribute(n))&&a.setAttribute(n,r);i.head.appendChild(a).parentNode.removeChild(a)}function w(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?i[a.call(e)]||"object":typeof e}var c="3.4.1",S=function(e,t){return new S.fn.init(e,t)},p=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;function h(e){var t=!!e&&"length"in e&&e.length,i=w(e);return!b(e)&&!v(e)&&("array"===i||0===t||"number"==typeof t&&0<t&&t-1 in e)}S.fn=S.prototype={jquery:c,constructor:S,length:0,toArray:function(){return o.call(this)},get:function(e){return null==e?o.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=S.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return S.each(this,e)},map:function(i){return this.pushStack(S.map(this,function(e,t){return i.call(e,t,e)}))},slice:function(){return this.pushStack(o.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,i=+e+(e<0?t:0);return this.pushStack(0<=i&&i<t?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:l,sort:t.sort,splice:t.splice},S.extend=S.fn.extend=function(){var e,t,i,n,r,a,s=arguments[0]||{},o=1,l=arguments.length,d=!1;for("boolean"==typeof s&&(d=s,s=arguments[o]||{},o++),"object"==typeof s||b(s)||(s={}),o===l&&(s=this,o--);o<l;o++)if(null!=(e=arguments[o]))for(t in e)n=e[t],"__proto__"!==t&&s!==n&&(d&&n&&(S.isPlainObject(n)||(r=Array.isArray(n)))?(i=s[t],a=r&&!Array.isArray(i)?[]:r||S.isPlainObject(i)?i:{},r=!1,s[t]=S.extend(d,a,n)):void 0!==n&&(s[t]=n));return s},S.extend({expando:"jQuery"+(c+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,i;return!(!e||"[object Object]"!==a.call(e))&&(!(t=n(e))||"function"==typeof(i=g.call(t,"constructor")&&t.constructor)&&s.call(i)===d)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t){x(e,{nonce:t&&t.nonce})},each:function(e,t){var i,n=0;if(h(e))for(i=e.length;n<i&&!1!==t.call(e[n],n,e[n]);n++);else for(n in e)if(!1===t.call(e[n],n,e[n]))break;return e},trim:function(e){return null==e?"":(e+"").replace(p,"")},makeArray:function(e,t){var i=t||[];return null!=e&&(h(Object(e))?S.merge(i,"string"==typeof e?[e]:e):l.call(i,e)),i},inArray:function(e,t,i){return null==t?-1:r.call(t,e,i)},merge:function(e,t){for(var i=+t.length,n=0,r=e.length;n<i;n++)e[r++]=t[n];return e.length=r,e},grep:function(e,t,i){for(var n=[],r=0,a=e.length,s=!i;r<a;r++)!t(e[r],r)!=s&&n.push(e[r]);return n},map:function(e,t,i){var n,r,a=0,s=[];if(h(e))for(n=e.length;a<n;a++)null!=(r=t(e[a],a,i))&&s.push(r);else for(a in e)null!=(r=t(e[a],a,i))&&s.push(r);return m.apply([],s)},guid:1,support:y}),"function"==typeof Symbol&&(S.fn[Symbol.iterator]=t[Symbol.iterator]),S.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){i["[object "+t+"]"]=t.toLowerCase()});var f=function(i){function c(e,t,i){var n="0x"+t-65536;return n!=n||i?t:n<0?String.fromCharCode(65536+n):String.fromCharCode(n>>10|55296,1023&n|56320)}function r(){T()}var e,h,x,a,s,f,p,v,w,l,d,T,E,o,C,m,u,g,y,S="sizzle"+1*new Date,b=i.document,k=0,n=0,M=le(),P=le(),D=le(),L=le(),$=function(e,t){return e===t&&(d=!0),0},z={}.hasOwnProperty,t=[],A=t.pop,I=t.push,N=t.push,O=t.slice,H=function(e,t){for(var i=0,n=e.length;i<n;i++)if(e[i]===t)return i;return-1},j="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",q="[\\x20\\t\\r\\n\\f]",B="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",R="\\["+q+"*("+B+")(?:"+q+"*([*^$|!~]?=)"+q+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+B+"))|)"+q+"*\\]",X=":("+B+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+R+")*)|.*)\\)|)",F=new RegExp(q+"+","g"),V=new RegExp("^"+q+"+|((?:^|[^\\\\])(?:\\\\.)*)"+q+"+$","g"),G=new RegExp("^"+q+"*,"+q+"*"),W=new RegExp("^"+q+"*([>+~]|"+q+")"+q+"*"),Y=new RegExp(q+"|>"),_=new RegExp(X),U=new RegExp("^"+B+"$"),K={ID:new RegExp("^#("+B+")"),CLASS:new RegExp("^\\.("+B+")"),TAG:new RegExp("^("+B+"|[*])"),ATTR:new RegExp("^"+R),PSEUDO:new RegExp("^"+X),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+q+"*(even|odd|(([+-]|)(\\d*)n|)"+q+"*(?:([+-]|)"+q+"*(\\d+)|))"+q+"*\\)|)","i"),bool:new RegExp("^(?:"+j+")$","i"),needsContext:new RegExp("^"+q+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+q+"*((?:-\\d)?\\d*)"+q+"*\\)|)(?=[^-]|$)","i")},Q=/HTML$/i,J=/^(?:input|select|textarea|button)$/i,Z=/^h\d$/i,ee=/^[^{]+\{\s*\[native \w/,te=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ie=/[+~]/,ne=new RegExp("\\\\([\\da-f]{1,6}"+q+"?|("+q+")|.)","ig"),re=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,ae=function(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},se=xe(function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{N.apply(t=O.call(b.childNodes),b.childNodes),t[b.childNodes.length].nodeType}catch(e){N={apply:t.length?function(e,t){I.apply(e,O.call(t))}:function(e,t){for(var i=e.length,n=0;e[i++]=t[n++];);e.length=i-1}}}function oe(t,e,i,n){var r,a,s,o,l,d,u,c=e&&e.ownerDocument,p=e?e.nodeType:9;if(i=i||[],"string"!=typeof t||!t||1!==p&&9!==p&&11!==p)return i;if(!n&&((e?e.ownerDocument||e:b)!==E&&T(e),e=e||E,C)){if(11!==p&&(l=te.exec(t)))if(r=l[1]){if(9===p){if(!(s=e.getElementById(r)))return i;if(s.id===r)return i.push(s),i}else if(c&&(s=c.getElementById(r))&&y(e,s)&&s.id===r)return i.push(s),i}else{if(l[2])return N.apply(i,e.getElementsByTagName(t)),i;if((r=l[3])&&h.getElementsByClassName&&e.getElementsByClassName)return N.apply(i,e.getElementsByClassName(r)),i}if(h.qsa&&!L[t+" "]&&(!m||!m.test(t))&&(1!==p||"object"!==e.nodeName.toLowerCase())){if(u=t,c=e,1===p&&Y.test(t)){for((o=e.getAttribute("id"))?o=o.replace(re,ae):e.setAttribute("id",o=S),a=(d=f(t)).length;a--;)d[a]="#"+o+" "+be(d[a]);u=d.join(","),c=ie.test(t)&&ge(e.parentNode)||e}try{return N.apply(i,c.querySelectorAll(u)),i}catch(e){L(t,!0)}finally{o===S&&e.removeAttribute("id")}}}return v(t.replace(V,"$1"),e,i,n)}function le(){var n=[];return function e(t,i){return n.push(t+" ")>x.cacheLength&&delete e[n.shift()],e[t+" "]=i}}function de(e){return e[S]=!0,e}function ue(e){var t=E.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function ce(e,t){for(var i=e.split("|"),n=i.length;n--;)x.attrHandle[i[n]]=t}function pe(e,t){var i=t&&e,n=i&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(n)return n;if(i)for(;i=i.nextSibling;)if(i===t)return-1;return e?1:-1}function he(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function fe(i){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===i}}function ve(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&se(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function me(s){return de(function(a){return a=+a,de(function(e,t){for(var i,n=s([],e.length,a),r=n.length;r--;)e[i=n[r]]&&(e[i]=!(t[i]=e[i]))})})}function ge(e){return e&&void 0!==e.getElementsByTagName&&e}for(e in h=oe.support={},s=oe.isXML=function(e){var t=e.namespaceURI,i=(e.ownerDocument||e).documentElement;return!Q.test(t||i&&i.nodeName||"HTML")},T=oe.setDocument=function(e){var t,i,n=e?e.ownerDocument||e:b;return n!==E&&9===n.nodeType&&n.documentElement&&(o=(E=n).documentElement,C=!s(E),b!==E&&(i=E.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",r,!1):i.attachEvent&&i.attachEvent("onunload",r)),h.attributes=ue(function(e){return e.className="i",!e.getAttribute("className")}),h.getElementsByTagName=ue(function(e){return e.appendChild(E.createComment("")),!e.getElementsByTagName("*").length}),h.getElementsByClassName=ee.test(E.getElementsByClassName),h.getById=ue(function(e){return o.appendChild(e).id=S,!E.getElementsByName||!E.getElementsByName(S).length}),h.getById?(x.filter.ID=function(e){var t=e.replace(ne,c);return function(e){return e.getAttribute("id")===t}},x.find.ID=function(e,t){if(void 0!==t.getElementById&&C){var i=t.getElementById(e);return i?[i]:[]}}):(x.filter.ID=function(e){var i=e.replace(ne,c);return function(e){var t=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return t&&t.value===i}},x.find.ID=function(e,t){if(void 0!==t.getElementById&&C){var i,n,r,a=t.getElementById(e);if(a){if((i=a.getAttributeNode("id"))&&i.value===e)return[a];for(r=t.getElementsByName(e),n=0;a=r[n++];)if((i=a.getAttributeNode("id"))&&i.value===e)return[a]}return[]}}),x.find.TAG=h.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):h.qsa?t.querySelectorAll(e):void 0}:function(e,t){var i,n=[],r=0,a=t.getElementsByTagName(e);if("*"!==e)return a;for(;i=a[r++];)1===i.nodeType&&n.push(i);return n},x.find.CLASS=h.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&C)return t.getElementsByClassName(e)},u=[],m=[],(h.qsa=ee.test(E.querySelectorAll))&&(ue(function(e){o.appendChild(e).innerHTML="<a id='"+S+"'></a><select id='"+S+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&m.push("[*^$]="+q+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||m.push("\\["+q+"*(?:value|"+j+")"),e.querySelectorAll("[id~="+S+"-]").length||m.push("~="),e.querySelectorAll(":checked").length||m.push(":checked"),e.querySelectorAll("a#"+S+"+*").length||m.push(".#.+[+~]")}),ue(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=E.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&m.push("name"+q+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&m.push(":enabled",":disabled"),o.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&m.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),m.push(",.*:")})),(h.matchesSelector=ee.test(g=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ue(function(e){h.disconnectedMatch=g.call(e,"*"),g.call(e,"[s!='']:x"),u.push("!=",X)}),m=m.length&&new RegExp(m.join("|")),u=u.length&&new RegExp(u.join("|")),t=ee.test(o.compareDocumentPosition),y=t||ee.test(o.contains)?function(e,t){var i=9===e.nodeType?e.documentElement:e,n=t&&t.parentNode;return e===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):e.compareDocumentPosition&&16&e.compareDocumentPosition(n)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},$=t?function(e,t){if(e===t)return d=!0,0;var i=!e.compareDocumentPosition-!t.compareDocumentPosition;return i||(1&(i=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!h.sortDetached&&t.compareDocumentPosition(e)===i?e===E||e.ownerDocument===b&&y(b,e)?-1:t===E||t.ownerDocument===b&&y(b,t)?1:l?H(l,e)-H(l,t):0:4&i?-1:1)}:function(e,t){if(e===t)return d=!0,0;var i,n=0,r=e.parentNode,a=t.parentNode,s=[e],o=[t];if(!r||!a)return e===E?-1:t===E?1:r?-1:a?1:l?H(l,e)-H(l,t):0;if(r===a)return pe(e,t);for(i=e;i=i.parentNode;)s.unshift(i);for(i=t;i=i.parentNode;)o.unshift(i);for(;s[n]===o[n];)n++;return n?pe(s[n],o[n]):s[n]===b?-1:o[n]===b?1:0}),E},oe.matches=function(e,t){return oe(e,null,null,t)},oe.matchesSelector=function(e,t){if((e.ownerDocument||e)!==E&&T(e),h.matchesSelector&&C&&!L[t+" "]&&(!u||!u.test(t))&&(!m||!m.test(t)))try{var i=g.call(e,t);if(i||h.disconnectedMatch||e.document&&11!==e.document.nodeType)return i}catch(e){L(t,!0)}return 0<oe(t,E,null,[e]).length},oe.contains=function(e,t){return(e.ownerDocument||e)!==E&&T(e),y(e,t)},oe.attr=function(e,t){(e.ownerDocument||e)!==E&&T(e);var i=x.attrHandle[t.toLowerCase()],n=i&&z.call(x.attrHandle,t.toLowerCase())?i(e,t,!C):void 0;return void 0!==n?n:h.attributes||!C?e.getAttribute(t):(n=e.getAttributeNode(t))&&n.specified?n.value:null},oe.escape=function(e){return(e+"").replace(re,ae)},oe.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},oe.uniqueSort=function(e){var t,i=[],n=0,r=0;if(d=!h.detectDuplicates,l=!h.sortStable&&e.slice(0),e.sort($),d){for(;t=e[r++];)t===e[r]&&(n=i.push(r));for(;n--;)e.splice(i[n],1)}return l=null,e},a=oe.getText=function(e){var t,i="",n=0,r=e.nodeType;if(r){if(1===r||9===r||11===r){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)i+=a(e)}else if(3===r||4===r)return e.nodeValue}else for(;t=e[n++];)i+=a(t);return i},(x=oe.selectors={cacheLength:50,createPseudo:de,match:K,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(ne,c),e[3]=(e[3]||e[4]||e[5]||"").replace(ne,c),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||oe.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&oe.error(e[0]),e},PSEUDO:function(e){var t,i=!e[6]&&e[2];return K.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":i&&_.test(i)&&(t=f(i,!0))&&(t=i.indexOf(")",i.length-t)-i.length)&&(e[0]=e[0].slice(0,t),e[2]=i.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(ne,c).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=M[e+" "];return t||(t=new RegExp("(^|"+q+")"+e+"("+q+"|$)"))&&M(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(i,n,r){return function(e){var t=oe.attr(e,i);return null==t?"!="===n:!n||(t+="","="===n?t===r:"!="===n?t!==r:"^="===n?r&&0===t.indexOf(r):"*="===n?r&&-1<t.indexOf(r):"$="===n?r&&t.slice(-r.length)===r:"~="===n?-1<(" "+t.replace(F," ")+" ").indexOf(r):"|="===n&&(t===r||t.slice(0,r.length+1)===r+"-"))}},CHILD:function(f,e,t,v,m){var g="nth"!==f.slice(0,3),y="last"!==f.slice(-4),b="of-type"===e;return 1===v&&0===m?function(e){return!!e.parentNode}:function(e,t,i){var n,r,a,s,o,l,d=g!=y?"nextSibling":"previousSibling",u=e.parentNode,c=b&&e.nodeName.toLowerCase(),p=!i&&!b,h=!1;if(u){if(g){for(;d;){for(s=e;s=s[d];)if(b?s.nodeName.toLowerCase()===c:1===s.nodeType)return!1;l=d="only"===f&&!l&&"nextSibling"}return!0}if(l=[y?u.firstChild:u.lastChild],y&&p){for(h=(o=(n=(r=(a=(s=u)[S]||(s[S]={}))[s.uniqueID]||(a[s.uniqueID]={}))[f]||[])[0]===k&&n[1])&&n[2],s=o&&u.childNodes[o];s=++o&&s&&s[d]||(h=o=0)||l.pop();)if(1===s.nodeType&&++h&&s===e){r[f]=[k,o,h];break}}else if(p&&(h=o=(n=(r=(a=(s=e)[S]||(s[S]={}))[s.uniqueID]||(a[s.uniqueID]={}))[f]||[])[0]===k&&n[1]),!1===h)for(;(s=++o&&s&&s[d]||(h=o=0)||l.pop())&&((b?s.nodeName.toLowerCase()!==c:1!==s.nodeType)||!++h||(p&&((r=(a=s[S]||(s[S]={}))[s.uniqueID]||(a[s.uniqueID]={}))[f]=[k,h]),s!==e)););return(h-=m)===v||h%v==0&&0<=h/v}}},PSEUDO:function(e,a){var t,s=x.pseudos[e]||x.setFilters[e.toLowerCase()]||oe.error("unsupported pseudo: "+e);return s[S]?s(a):1<s.length?(t=[e,e,"",a],x.setFilters.hasOwnProperty(e.toLowerCase())?de(function(e,t){for(var i,n=s(e,a),r=n.length;r--;)e[i=H(e,n[r])]=!(t[i]=n[r])}):function(e){return s(e,0,t)}):s}},pseudos:{not:de(function(e){var n=[],r=[],o=p(e.replace(V,"$1"));return o[S]?de(function(e,t,i,n){for(var r,a=o(e,null,n,[]),s=e.length;s--;)(r=a[s])&&(e[s]=!(t[s]=r))}):function(e,t,i){return n[0]=e,o(n,null,i,r),n[0]=null,!r.pop()}}),has:de(function(t){return function(e){return 0<oe(t,e).length}}),contains:de(function(t){return t=t.replace(ne,c),function(e){return-1<(e.textContent||a(e)).indexOf(t)}}),lang:de(function(i){return U.test(i||"")||oe.error("unsupported lang: "+i),i=i.replace(ne,c).toLowerCase(),function(e){var t;do{if(t=C?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===i||0===t.indexOf(i+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=i.location&&i.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===o},focus:function(e){return e===E.activeElement&&(!E.hasFocus||E.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:ve(!1),disabled:ve(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!x.pseudos.empty(e)},header:function(e){return Z.test(e.nodeName)},input:function(e){return J.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:me(function(){return[0]}),last:me(function(e,t){return[t-1]}),eq:me(function(e,t,i){return[i<0?i+t:i]}),even:me(function(e,t){for(var i=0;i<t;i+=2)e.push(i);return e}),odd:me(function(e,t){for(var i=1;i<t;i+=2)e.push(i);return e}),lt:me(function(e,t,i){for(var n=i<0?i+t:t<i?t:i;0<=--n;)e.push(n);return e}),gt:me(function(e,t,i){for(var n=i<0?i+t:i;++n<t;)e.push(n);return e})}}).pseudos.nth=x.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})x.pseudos[e]=he(e);for(e in{submit:!0,reset:!0})x.pseudos[e]=fe(e);function ye(){}function be(e){for(var t=0,i=e.length,n="";t<i;t++)n+=e[t].value;return n}function xe(o,e,t){var l=e.dir,d=e.next,u=d||l,c=t&&"parentNode"===u,p=n++;return e.first?function(e,t,i){for(;e=e[l];)if(1===e.nodeType||c)return o(e,t,i);return!1}:function(e,t,i){var n,r,a,s=[k,p];if(i){for(;e=e[l];)if((1===e.nodeType||c)&&o(e,t,i))return!0}else for(;e=e[l];)if(1===e.nodeType||c)if(r=(a=e[S]||(e[S]={}))[e.uniqueID]||(a[e.uniqueID]={}),d&&d===e.nodeName.toLowerCase())e=e[l]||e;else{if((n=r[u])&&n[0]===k&&n[1]===p)return s[2]=n[2];if((r[u]=s)[2]=o(e,t,i))return!0}return!1}}function we(r){return 1<r.length?function(e,t,i){for(var n=r.length;n--;)if(!r[n](e,t,i))return!1;return!0}:r[0]}function Te(e,t,i,n,r){for(var a,s=[],o=0,l=e.length,d=null!=t;o<l;o++)(a=e[o])&&(i&&!i(a,n,r)||(s.push(a),d&&t.push(o)));return s}function Ee(h,f,v,m,g,e){return m&&!m[S]&&(m=Ee(m)),g&&!g[S]&&(g=Ee(g,e)),de(function(e,t,i,n){var r,a,s,o=[],l=[],d=t.length,u=e||function(e,t,i){for(var n=0,r=t.length;n<r;n++)oe(e,t[n],i);return i}(f||"*",i.nodeType?[i]:i,[]),c=!h||!e&&f?u:Te(u,o,h,i,n),p=v?g||(e?h:d||m)?[]:t:c;if(v&&v(c,p,i,n),m)for(r=Te(p,l),m(r,[],i,n),a=r.length;a--;)(s=r[a])&&(p[l[a]]=!(c[l[a]]=s));if(e){if(g||h){if(g){for(r=[],a=p.length;a--;)(s=p[a])&&r.push(c[a]=s);g(null,p=[],r,n)}for(a=p.length;a--;)(s=p[a])&&-1<(r=g?H(e,s):o[a])&&(e[r]=!(t[r]=s))}}else p=Te(p===t?p.splice(d,p.length):p),g?g(null,t,p,n):N.apply(t,p)})}function Ce(e){for(var r,t,i,n=e.length,a=x.relative[e[0].type],s=a||x.relative[" "],o=a?1:0,l=xe(function(e){return e===r},s,!0),d=xe(function(e){return-1<H(r,e)},s,!0),u=[function(e,t,i){var n=!a&&(i||t!==w)||((r=t).nodeType?l(e,t,i):d(e,t,i));return r=null,n}];o<n;o++)if(t=x.relative[e[o].type])u=[xe(we(u),t)];else{if((t=x.filter[e[o].type].apply(null,e[o].matches))[S]){for(i=++o;i<n&&!x.relative[e[i].type];i++);return Ee(1<o&&we(u),1<o&&be(e.slice(0,o-1).concat({value:" "===e[o-2].type?"*":""})).replace(V,"$1"),t,o<i&&Ce(e.slice(o,i)),i<n&&Ce(e=e.slice(i)),i<n&&be(e))}u.push(t)}return we(u)}return ye.prototype=x.filters=x.pseudos,x.setFilters=new ye,f=oe.tokenize=function(e,t){var i,n,r,a,s,o,l,d=P[e+" "];if(d)return t?0:d.slice(0);for(s=e,o=[],l=x.preFilter;s;){for(a in i&&!(n=G.exec(s))||(n&&(s=s.slice(n[0].length)||s),o.push(r=[])),i=!1,(n=W.exec(s))&&(i=n.shift(),r.push({value:i,type:n[0].replace(V," ")}),s=s.slice(i.length)),x.filter)!(n=K[a].exec(s))||l[a]&&!(n=l[a](n))||(i=n.shift(),r.push({value:i,type:a,matches:n}),s=s.slice(i.length));if(!i)break}return t?s.length:s?oe.error(e):P(e,o).slice(0)},p=oe.compile=function(e,t){var i,n=[],r=[],a=D[e+" "];if(!a){for(i=(t=t||f(e)).length;i--;)(a=Ce(t[i]))[S]?n.push(a):r.push(a);(a=D(e,function(m,g){function e(e,t,i,n,r){var a,s,o,l=0,d="0",u=e&&[],c=[],p=w,h=e||b&&x.find.TAG("*",r),f=k+=null==p?1:Math.random()||.1,v=h.length;for(r&&(w=t===E||t||r);d!==v&&null!=(a=h[d]);d++){if(b&&a){for(s=0,t||a.ownerDocument===E||(T(a),i=!C);o=m[s++];)if(o(a,t||E,i)){n.push(a);break}r&&(k=f)}y&&((a=!o&&a)&&l--,e&&u.push(a))}if(l+=d,y&&d!==l){for(s=0;o=g[s++];)o(u,c,t,i);if(e){if(0<l)for(;d--;)u[d]||c[d]||(c[d]=A.call(n));c=Te(c)}N.apply(n,c),r&&!e&&0<c.length&&1<l+g.length&&oe.uniqueSort(n)}return r&&(k=f,w=p),u}var y=0<g.length,b=0<m.length;return y?de(e):e}(r,n))).selector=e}return a},v=oe.select=function(e,t,i,n){var r,a,s,o,l,d="function"==typeof e&&e,u=!n&&f(e=d.selector||e);if(i=i||[],1===u.length){if(2<(a=u[0]=u[0].slice(0)).length&&"ID"===(s=a[0]).type&&9===t.nodeType&&C&&x.relative[a[1].type]){if(!(t=(x.find.ID(s.matches[0].replace(ne,c),t)||[])[0]))return i;d&&(t=t.parentNode),e=e.slice(a.shift().value.length)}for(r=K.needsContext.test(e)?0:a.length;r--&&(s=a[r],!x.relative[o=s.type]);)if((l=x.find[o])&&(n=l(s.matches[0].replace(ne,c),ie.test(a[0].type)&&ge(t.parentNode)||t))){if(a.splice(r,1),!(e=n.length&&be(a)))return N.apply(i,n),i;break}}return(d||p(e,u))(n,t,!C,i,!t||ie.test(e)&&ge(t.parentNode)||t),i},h.sortStable=S.split("").sort($).join("")===S,h.detectDuplicates=!!d,T(),h.sortDetached=ue(function(e){return 1&e.compareDocumentPosition(E.createElement("fieldset"))}),ue(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||ce("type|href|height|width",function(e,t,i){if(!i)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),h.attributes&&ue(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||ce("value",function(e,t,i){if(!i&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),ue(function(e){return null==e.getAttribute("disabled")})||ce(j,function(e,t,i){var n;if(!i)return!0===e[t]?t.toLowerCase():(n=e.getAttributeNode(t))&&n.specified?n.value:null}),oe}(E);S.find=f,S.expr=f.selectors,S.expr[":"]=S.expr.pseudos,S.uniqueSort=S.unique=f.uniqueSort,S.text=f.getText,S.isXMLDoc=f.isXML,S.contains=f.contains,S.escapeSelector=f.escape;function T(e,t,i){for(var n=[],r=void 0!==i;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(r&&S(e).is(i))break;n.push(e)}return n}function k(e,t){for(var i=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&i.push(e);return i}var M=S.expr.match.needsContext;function P(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var D=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function L(e,i,n){return b(i)?S.grep(e,function(e,t){return!!i.call(e,t,e)!==n}):i.nodeType?S.grep(e,function(e){return e===i!==n}):"string"!=typeof i?S.grep(e,function(e){return-1<r.call(i,e)!==n}):S.filter(i,e,n)}S.filter=function(e,t,i){var n=t[0];return i&&(e=":not("+e+")"),1===t.length&&1===n.nodeType?S.find.matchesSelector(n,e)?[n]:[]:S.find.matches(e,S.grep(t,function(e){return 1===e.nodeType}))},S.fn.extend({find:function(e){var t,i,n=this.length,r=this;if("string"!=typeof e)return this.pushStack(S(e).filter(function(){for(t=0;t<n;t++)if(S.contains(r[t],this))return!0}));for(i=this.pushStack([]),t=0;t<n;t++)S.find(e,r[t],i);return 1<n?S.uniqueSort(i):i},filter:function(e){return this.pushStack(L(this,e||[],!1))},not:function(e){return this.pushStack(L(this,e||[],!0))},is:function(e){return!!L(this,"string"==typeof e&&M.test(e)?S(e):e||[],!1).length}});var $,z=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(S.fn.init=function(e,t,i){var n,r;if(!e)return this;if(i=i||$,"string"!=typeof e)return e.nodeType?(this[0]=e,this.length=1,this):b(e)?void 0!==i.ready?i.ready(e):e(S):S.makeArray(e,this);if(!(n="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:z.exec(e))||!n[1]&&t)return!t||t.jquery?(t||i).find(e):this.constructor(t).find(e);if(n[1]){if(t=t instanceof S?t[0]:t,S.merge(this,S.parseHTML(n[1],t&&t.nodeType?t.ownerDocument||t:C,!0)),D.test(n[1])&&S.isPlainObject(t))for(n in t)b(this[n])?this[n](t[n]):this.attr(n,t[n]);return this}return(r=C.getElementById(n[2]))&&(this[0]=r,this.length=1),this}).prototype=S.fn,$=S(C);var A=/^(?:parents|prev(?:Until|All))/,I={children:!0,contents:!0,next:!0,prev:!0};function N(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}S.fn.extend({has:function(e){var t=S(e,this),i=t.length;return this.filter(function(){for(var e=0;e<i;e++)if(S.contains(this,t[e]))return!0})},closest:function(e,t){var i,n=0,r=this.length,a=[],s="string"!=typeof e&&S(e);if(!M.test(e))for(;n<r;n++)for(i=this[n];i&&i!==t;i=i.parentNode)if(i.nodeType<11&&(s?-1<s.index(i):1===i.nodeType&&S.find.matchesSelector(i,e))){a.push(i);break}return this.pushStack(1<a.length?S.uniqueSort(a):a)},index:function(e){return e?"string"==typeof e?r.call(S(e),this[0]):r.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(S.uniqueSort(S.merge(this.get(),S(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),S.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return T(e,"parentNode")},parentsUntil:function(e,t,i){return T(e,"parentNode",i)},next:function(e){return N(e,"nextSibling")},prev:function(e){return N(e,"previousSibling")},nextAll:function(e){return T(e,"nextSibling")},prevAll:function(e){return T(e,"previousSibling")},nextUntil:function(e,t,i){return T(e,"nextSibling",i)},prevUntil:function(e,t,i){return T(e,"previousSibling",i)},siblings:function(e){return k((e.parentNode||{}).firstChild,e)},children:function(e){return k(e.firstChild)},contents:function(e){return void 0!==e.contentDocument?e.contentDocument:(P(e,"template")&&(e=e.content||e),S.merge([],e.childNodes))}},function(n,r){S.fn[n]=function(e,t){var i=S.map(this,r,e);return"Until"!==n.slice(-5)&&(t=e),t&&"string"==typeof t&&(i=S.filter(t,i)),1<this.length&&(I[n]||S.uniqueSort(i),A.test(n)&&i.reverse()),this.pushStack(i)}});var O=/[^\x20\t\r\n\f]+/g;function H(e){return e}function j(e){throw e}function q(e,t,i,n){var r;try{e&&b(r=e.promise)?r.call(e).done(t).fail(i):e&&b(r=e.then)?r.call(e,t,i):t.apply(void 0,[e].slice(n))}catch(e){i.apply(void 0,[e])}}S.Callbacks=function(n){n="string"==typeof n?function(e){var i={};return S.each(e.match(O)||[],function(e,t){i[t]=!0}),i}(n):S.extend({},n);function i(){for(a=a||n.once,t=r=!0;o.length;l=-1)for(e=o.shift();++l<s.length;)!1===s[l].apply(e[0],e[1])&&n.stopOnFalse&&(l=s.length,e=!1);n.memory||(e=!1),r=!1,a&&(s=e?[]:"")}var r,e,t,a,s=[],o=[],l=-1,d={add:function(){return s&&(e&&!r&&(l=s.length-1,o.push(e)),function i(e){S.each(e,function(e,t){b(t)?n.unique&&d.has(t)||s.push(t):t&&t.length&&"string"!==w(t)&&i(t)})}(arguments),e&&!r&&i()),this},remove:function(){return S.each(arguments,function(e,t){for(var i;-1<(i=S.inArray(t,s,i));)s.splice(i,1),i<=l&&l--}),this},has:function(e){return e?-1<S.inArray(e,s):0<s.length},empty:function(){return s=s&&[],this},disable:function(){return a=o=[],s=e="",this},disabled:function(){return!s},lock:function(){return a=o=[],e||r||(s=e=""),this},locked:function(){return!!a},fireWith:function(e,t){return a||(t=[e,(t=t||[]).slice?t.slice():t],o.push(t),r||i()),this},fire:function(){return d.fireWith(this,arguments),this},fired:function(){return!!t}};return d},S.extend({Deferred:function(e){var a=[["notify","progress",S.Callbacks("memory"),S.Callbacks("memory"),2],["resolve","done",S.Callbacks("once memory"),S.Callbacks("once memory"),0,"resolved"],["reject","fail",S.Callbacks("once memory"),S.Callbacks("once memory"),1,"rejected"]],r="pending",s={state:function(){return r},always:function(){return o.done(arguments).fail(arguments),this},catch:function(e){return s.then(null,e)},pipe:function(){var r=arguments;return S.Deferred(function(n){S.each(a,function(e,t){var i=b(r[t[4]])&&r[t[4]];o[t[1]](function(){var e=i&&i.apply(this,arguments);e&&b(e.promise)?e.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[t[0]+"With"](this,i?[e]:arguments)})}),r=null}).promise()},then:function(t,i,n){var l=0;function d(r,a,s,o){return function(){function e(){var e,t;if(!(r<l)){if((e=s.apply(i,n))===a.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"==typeof e||"function"==typeof e)&&e.then,b(t)?o?t.call(e,d(l,a,H,o),d(l,a,j,o)):(l++,t.call(e,d(l,a,H,o),d(l,a,j,o),d(l,a,H,a.notifyWith))):(s!==H&&(i=void 0,n=[e]),(o||a.resolveWith)(i,n))}}var i=this,n=arguments,t=o?e:function(){try{e()}catch(e){S.Deferred.exceptionHook&&S.Deferred.exceptionHook(e,t.stackTrace),l<=r+1&&(s!==j&&(i=void 0,n=[e]),a.rejectWith(i,n))}};r?t():(S.Deferred.getStackHook&&(t.stackTrace=S.Deferred.getStackHook()),E.setTimeout(t))}}return S.Deferred(function(e){a[0][3].add(d(0,e,b(n)?n:H,e.notifyWith)),a[1][3].add(d(0,e,b(t)?t:H)),a[2][3].add(d(0,e,b(i)?i:j))}).promise()},promise:function(e){return null!=e?S.extend(e,s):s}},o={};return S.each(a,function(e,t){var i=t[2],n=t[5];s[t[1]]=i.add,n&&i.add(function(){r=n},a[3-e][2].disable,a[3-e][3].disable,a[0][2].lock,a[0][3].lock),i.add(t[3].fire),o[t[0]]=function(){return o[t[0]+"With"](this===o?void 0:this,arguments),this},o[t[0]+"With"]=i.fireWith}),s.promise(o),e&&e.call(o,o),o},when:function(e){function t(t){return function(e){r[t]=this,a[t]=1<arguments.length?o.call(arguments):e,--i||s.resolveWith(r,a)}}var i=arguments.length,n=i,r=Array(n),a=o.call(arguments),s=S.Deferred();if(i<=1&&(q(e,s.done(t(n)).resolve,s.reject,!i),"pending"===s.state()||b(a[n]&&a[n].then)))return s.then();for(;n--;)q(a[n],t(n),s.reject);return s.promise()}});var B=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;S.Deferred.exceptionHook=function(e,t){E.console&&E.console.warn&&e&&B.test(e.name)&&E.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},S.readyException=function(e){E.setTimeout(function(){throw e})};var R=S.Deferred();function X(){C.removeEventListener("DOMContentLoaded",X),E.removeEventListener("load",X),S.ready()}S.fn.ready=function(e){return R.then(e).catch(function(e){S.readyException(e)}),this},S.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--S.readyWait:S.isReady)||(S.isReady=!0)!==e&&0<--S.readyWait||R.resolveWith(C,[S])}}),S.ready.then=R.then,"complete"===C.readyState||"loading"!==C.readyState&&!C.documentElement.doScroll?E.setTimeout(S.ready):(C.addEventListener("DOMContentLoaded",X),E.addEventListener("load",X));var F=function(e,t,i,n,r,a,s){var o=0,l=e.length,d=null==i;if("object"===w(i))for(o in r=!0,i)F(e,t,o,i[o],!0,a,s);else if(void 0!==n&&(r=!0,b(n)||(s=!0),d&&(t=s?(t.call(e,n),null):(d=t,function(e,t,i){return d.call(S(e),i)})),t))for(;o<l;o++)t(e[o],i,s?n:n.call(e[o],o,t(e[o],i)));return r?e:d?t.call(e):l?t(e[0],i):a},V=/^-ms-/,G=/-([a-z])/g;function W(e,t){return t.toUpperCase()}function Y(e){return e.replace(V,"ms-").replace(G,W)}function _(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType}function U(){this.expando=S.expando+U.uid++}U.uid=1,U.prototype={cache:function(e){var t=e[this.expando];return t||(t={},_(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,i){var n,r=this.cache(e);if("string"==typeof t)r[Y(t)]=i;else for(n in t)r[Y(n)]=t[n];return r},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][Y(t)]},access:function(e,t,i){return void 0===t||t&&"string"==typeof t&&void 0===i?this.get(e,t):(this.set(e,t,i),void 0!==i?i:t)},remove:function(e,t){var i,n=e[this.expando];if(void 0!==n){if(void 0!==t){i=(t=Array.isArray(t)?t.map(Y):(t=Y(t))in n?[t]:t.match(O)||[]).length;for(;i--;)delete n[t[i]]}void 0!==t&&!S.isEmptyObject(n)||(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!S.isEmptyObject(t)}};var K=new U,Q=new U,J=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Z=/[A-Z]/g;function ee(e,t,i){var n;if(void 0===i&&1===e.nodeType)if(n="data-"+t.replace(Z,"-$&").toLowerCase(),"string"==typeof(i=e.getAttribute(n))){try{i=function(e){return"true"===e||"false"!==e&&("null"===e?null:e===+e+""?+e:J.test(e)?JSON.parse(e):e)}(i)}catch(e){}Q.set(e,t,i)}else i=void 0;return i}S.extend({hasData:function(e){return Q.hasData(e)||K.hasData(e)},data:function(e,t,i){return Q.access(e,t,i)},removeData:function(e,t){Q.remove(e,t)},_data:function(e,t,i){return K.access(e,t,i)},_removeData:function(e,t){K.remove(e,t)}}),S.fn.extend({data:function(i,e){var t,n,r,a=this[0],s=a&&a.attributes;if(void 0!==i)return"object"==typeof i?this.each(function(){Q.set(this,i)}):F(this,function(e){var t;if(a&&void 0===e)return void 0!==(t=Q.get(a,i))?t:void 0!==(t=ee(a,i))?t:void 0;this.each(function(){Q.set(this,i,e)})},null,e,1<arguments.length,null,!0);if(this.length&&(r=Q.get(a),1===a.nodeType&&!K.get(a,"hasDataAttrs"))){for(t=s.length;t--;)s[t]&&0===(n=s[t].name).indexOf("data-")&&(n=Y(n.slice(5)),ee(a,n,r[n]));K.set(a,"hasDataAttrs",!0)}return r},removeData:function(e){return this.each(function(){Q.remove(this,e)})}}),S.extend({queue:function(e,t,i){var n;if(e)return t=(t||"fx")+"queue",n=K.get(e,t),i&&(!n||Array.isArray(i)?n=K.access(e,t,S.makeArray(i)):n.push(i)),n||[]},dequeue:function(e,t){t=t||"fx";var i=S.queue(e,t),n=i.length,r=i.shift(),a=S._queueHooks(e,t);"inprogress"===r&&(r=i.shift(),n--),r&&("fx"===t&&i.unshift("inprogress"),delete a.stop,r.call(e,function(){S.dequeue(e,t)},a)),!n&&a&&a.empty.fire()},_queueHooks:function(e,t){var i=t+"queueHooks";return K.get(e,i)||K.access(e,i,{empty:S.Callbacks("once memory").add(function(){K.remove(e,[t+"queue",i])})})}}),S.fn.extend({queue:function(t,i){var e=2;return"string"!=typeof t&&(i=t,t="fx",e--),arguments.length<e?S.queue(this[0],t):void 0===i?this:this.each(function(){var e=S.queue(this,t,i);S._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&S.dequeue(this,t)})},dequeue:function(e){return this.each(function(){S.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){function i(){--r||a.resolveWith(s,[s])}var n,r=1,a=S.Deferred(),s=this,o=this.length;for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";o--;)(n=K.get(s[o],e+"queueHooks"))&&n.empty&&(r++,n.empty.add(i));return i(),a.promise(t)}});var te=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,ie=new RegExp("^(?:([+-])=|)("+te+")([a-z%]*)$","i"),ne=["Top","Right","Bottom","Left"],re=C.documentElement,ae=function(e){return S.contains(e.ownerDocument,e)},se={composed:!0};re.getRootNode&&(ae=function(e){return S.contains(e.ownerDocument,e)||e.getRootNode(se)===e.ownerDocument});function oe(e,t,i,n){var r,a,s={};for(a in t)s[a]=e.style[a],e.style[a]=t[a];for(a in r=i.apply(e,n||[]),t)e.style[a]=s[a];return r}var le=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&ae(e)&&"none"===S.css(e,"display")};function de(e,t,i,n){var r,a,s=20,o=n?function(){return n.cur()}:function(){return S.css(e,t,"")},l=o(),d=i&&i[3]||(S.cssNumber[t]?"":"px"),u=e.nodeType&&(S.cssNumber[t]||"px"!==d&&+l)&&ie.exec(S.css(e,t));if(u&&u[3]!==d){for(l/=2,d=d||u[3],u=+l||1;s--;)S.style(e,t,u+d),(1-a)*(1-(a=o()/l||.5))<=0&&(s=0),u/=a;u*=2,S.style(e,t,u+d),i=i||[]}return i&&(u=+u||+l||0,r=i[1]?u+(i[1]+1)*i[2]:+i[2],n&&(n.unit=d,n.start=u,n.end=r)),r}var ue={};function ce(e,t){for(var i,n,r,a,s,o,l,d=[],u=0,c=e.length;u<c;u++)(n=e[u]).style&&(i=n.style.display,t?("none"===i&&(d[u]=K.get(n,"display")||null,d[u]||(n.style.display="")),""===n.style.display&&le(n)&&(d[u]=(l=s=a=void 0,s=(r=n).ownerDocument,o=r.nodeName,(l=ue[o])||(a=s.body.appendChild(s.createElement(o)),l=S.css(a,"display"),a.parentNode.removeChild(a),"none"===l&&(l="block"),ue[o]=l)))):"none"!==i&&(d[u]="none",K.set(n,"display",i)));for(u=0;u<c;u++)null!=d[u]&&(e[u].style.display=d[u]);return e}S.fn.extend({show:function(){return ce(this,!0)},hide:function(){return ce(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){le(this)?S(this).show():S(this).hide()})}});var pe=/^(?:checkbox|radio)$/i,he=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,fe=/^$|^module$|\/(?:java|ecma)script/i,ve={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function me(e,t){var i;return i=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&P(e,t)?S.merge([e],i):i}function ge(e,t){for(var i=0,n=e.length;i<n;i++)K.set(e[i],"globalEval",!t||K.get(t[i],"globalEval"))}ve.optgroup=ve.option,ve.tbody=ve.tfoot=ve.colgroup=ve.caption=ve.thead,ve.th=ve.td;var ye,be,xe=/<|&#?\w+;/;function we(e,t,i,n,r){for(var a,s,o,l,d,u,c=t.createDocumentFragment(),p=[],h=0,f=e.length;h<f;h++)if((a=e[h])||0===a)if("object"===w(a))S.merge(p,a.nodeType?[a]:a);else if(xe.test(a)){for(s=s||c.appendChild(t.createElement("div")),o=(he.exec(a)||["",""])[1].toLowerCase(),l=ve[o]||ve._default,s.innerHTML=l[1]+S.htmlPrefilter(a)+l[2],u=l[0];u--;)s=s.lastChild;S.merge(p,s.childNodes),(s=c.firstChild).textContent=""}else p.push(t.createTextNode(a));for(c.textContent="",h=0;a=p[h++];)if(n&&-1<S.inArray(a,n))r&&r.push(a);else if(d=ae(a),s=me(c.appendChild(a),"script"),d&&ge(s),i)for(u=0;a=s[u++];)fe.test(a.type||"")&&i.push(a);return c}ye=C.createDocumentFragment().appendChild(C.createElement("div")),(be=C.createElement("input")).setAttribute("type","radio"),be.setAttribute("checked","checked"),be.setAttribute("name","t"),ye.appendChild(be),y.checkClone=ye.cloneNode(!0).cloneNode(!0).lastChild.checked,ye.innerHTML="<textarea>x</textarea>",y.noCloneChecked=!!ye.cloneNode(!0).lastChild.defaultValue;var Te=/^key/,Ee=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Ce=/^([^.]*)(?:\.(.+)|)/;function Se(){return!0}function ke(){return!1}function Me(e,t){return e===function(){try{return C.activeElement}catch(e){}}()==("focus"===t)}function Pe(e,t,i,n,r,a){var s,o;if("object"==typeof t){for(o in"string"!=typeof i&&(n=n||i,i=void 0),t)Pe(e,o,i,n,t[o],a);return e}if(null==n&&null==r?(r=i,n=i=void 0):null==r&&("string"==typeof i?(r=n,n=void 0):(r=n,n=i,i=void 0)),!1===r)r=ke;else if(!r)return e;return 1===a&&(s=r,(r=function(e){return S().off(e),s.apply(this,arguments)}).guid=s.guid||(s.guid=S.guid++)),e.each(function(){S.event.add(this,t,r,n,i)})}function De(e,r,a){a?(K.set(e,r,!1),S.event.add(e,r,{namespace:!1,handler:function(e){var t,i,n=K.get(this,r);if(1&e.isTrigger&&this[r]){if(n.length)(S.event.special[r]||{}).delegateType&&e.stopPropagation();else if(n=o.call(arguments),K.set(this,r,n),t=a(this,r),this[r](),n!==(i=K.get(this,r))||t?K.set(this,r,!1):i={},n!==i)return e.stopImmediatePropagation(),e.preventDefault(),i.value}else n.length&&(K.set(this,r,{value:S.event.trigger(S.extend(n[0],S.Event.prototype),n.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===K.get(e,r)&&S.event.add(e,r,Se)}S.event={global:{},add:function(t,e,i,n,r){var a,s,o,l,d,u,c,p,h,f,v,m=K.get(t);if(m)for(i.handler&&(i=(a=i).handler,r=a.selector),r&&S.find.matchesSelector(re,r),i.guid||(i.guid=S.guid++),(l=m.events)||(l=m.events={}),(s=m.handle)||(s=m.handle=function(e){return void 0!==S&&S.event.triggered!==e.type?S.event.dispatch.apply(t,arguments):void 0}),d=(e=(e||"").match(O)||[""]).length;d--;)h=v=(o=Ce.exec(e[d])||[])[1],f=(o[2]||"").split(".").sort(),h&&(c=S.event.special[h]||{},h=(r?c.delegateType:c.bindType)||h,c=S.event.special[h]||{},u=S.extend({type:h,origType:v,data:n,handler:i,guid:i.guid,selector:r,needsContext:r&&S.expr.match.needsContext.test(r),namespace:f.join(".")},a),(p=l[h])||((p=l[h]=[]).delegateCount=0,c.setup&&!1!==c.setup.call(t,n,f,s)||t.addEventListener&&t.addEventListener(h,s)),c.add&&(c.add.call(t,u),u.handler.guid||(u.handler.guid=i.guid)),r?p.splice(p.delegateCount++,0,u):p.push(u),S.event.global[h]=!0)},remove:function(e,t,i,n,r){var a,s,o,l,d,u,c,p,h,f,v,m=K.hasData(e)&&K.get(e);if(m&&(l=m.events)){for(d=(t=(t||"").match(O)||[""]).length;d--;)if(h=v=(o=Ce.exec(t[d])||[])[1],f=(o[2]||"").split(".").sort(),h){for(c=S.event.special[h]||{},p=l[h=(n?c.delegateType:c.bindType)||h]||[],o=o[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),s=a=p.length;a--;)u=p[a],!r&&v!==u.origType||i&&i.guid!==u.guid||o&&!o.test(u.namespace)||n&&n!==u.selector&&("**"!==n||!u.selector)||(p.splice(a,1),u.selector&&p.delegateCount--,c.remove&&c.remove.call(e,u));s&&!p.length&&(c.teardown&&!1!==c.teardown.call(e,f,m.handle)||S.removeEvent(e,h,m.handle),delete l[h])}else for(h in l)S.event.remove(e,h+t[d],i,n,!0);S.isEmptyObject(l)&&K.remove(e,"handle events")}},dispatch:function(e){var t,i,n,r,a,s,o=S.event.fix(e),l=new Array(arguments.length),d=(K.get(this,"events")||{})[o.type]||[],u=S.event.special[o.type]||{};for(l[0]=o,t=1;t<arguments.length;t++)l[t]=arguments[t];if(o.delegateTarget=this,!u.preDispatch||!1!==u.preDispatch.call(this,o)){for(s=S.event.handlers.call(this,o,d),t=0;(r=s[t++])&&!o.isPropagationStopped();)for(o.currentTarget=r.elem,i=0;(a=r.handlers[i++])&&!o.isImmediatePropagationStopped();)o.rnamespace&&!1!==a.namespace&&!o.rnamespace.test(a.namespace)||(o.handleObj=a,o.data=a.data,void 0!==(n=((S.event.special[a.origType]||{}).handle||a.handler).apply(r.elem,l))&&!1===(o.result=n)&&(o.preventDefault(),o.stopPropagation()));return u.postDispatch&&u.postDispatch.call(this,o),o.result}},handlers:function(e,t){var i,n,r,a,s,o=[],l=t.delegateCount,d=e.target;if(l&&d.nodeType&&!("click"===e.type&&1<=e.button))for(;d!==this;d=d.parentNode||this)if(1===d.nodeType&&("click"!==e.type||!0!==d.disabled)){for(a=[],s={},i=0;i<l;i++)void 0===s[r=(n=t[i]).selector+" "]&&(s[r]=n.needsContext?-1<S(r,this).index(d):S.find(r,this,null,[d]).length),s[r]&&a.push(n);a.length&&o.push({elem:d,handlers:a})}return d=this,l<t.length&&o.push({elem:d,handlers:t.slice(l)}),o},addProp:function(t,e){Object.defineProperty(S.Event.prototype,t,{enumerable:!0,configurable:!0,get:b(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[S.expando]?e:new S.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return pe.test(t.type)&&t.click&&P(t,"input")&&De(t,"click",Se),!1},trigger:function(e){var t=this||e;return pe.test(t.type)&&t.click&&P(t,"input")&&De(t,"click"),!0},_default:function(e){var t=e.target;return pe.test(t.type)&&t.click&&P(t,"input")&&K.get(t,"click")||P(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},S.removeEvent=function(e,t,i){e.removeEventListener&&e.removeEventListener(t,i)},S.Event=function(e,t){if(!(this instanceof S.Event))return new S.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Se:ke,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&S.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[S.expando]=!0},S.Event.prototype={constructor:S.Event,isDefaultPrevented:ke,isPropagationStopped:ke,isImmediatePropagationStopped:ke,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Se,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Se,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Se,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},S.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&Te.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&Ee.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},S.event.addProp),S.each({focus:"focusin",blur:"focusout"},function(e,t){S.event.special[e]={setup:function(){return De(this,e,Me),!1},trigger:function(){return De(this,e),!0},delegateType:t}}),S.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,r){S.event.special[e]={delegateType:r,bindType:r,handle:function(e){var t,i=e.relatedTarget,n=e.handleObj;return i&&(i===this||S.contains(this,i))||(e.type=n.origType,t=n.handler.apply(this,arguments),e.type=r),t}}}),S.fn.extend({on:function(e,t,i,n){return Pe(this,e,t,i,n)},one:function(e,t,i,n){return Pe(this,e,t,i,n,1)},off:function(e,t,i){var n,r;if(e&&e.preventDefault&&e.handleObj)return n=e.handleObj,S(e.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"!=typeof e)return!1!==t&&"function"!=typeof t||(i=t,t=void 0),!1===i&&(i=ke),this.each(function(){S.event.remove(this,e,i,t)});for(r in e)this.off(r,t,e[r]);return this}});var Le=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,$e=/<script|<style|<link/i,ze=/checked\s*(?:[^=]|=\s*.checked.)/i,Ae=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Ie(e,t){return P(e,"table")&&P(11!==t.nodeType?t:t.firstChild,"tr")&&S(e).children("tbody")[0]||e}function Ne(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function Oe(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function He(e,t){var i,n,r,a,s,o,l,d;if(1===t.nodeType){if(K.hasData(e)&&(a=K.access(e),s=K.set(t,a),d=a.events))for(r in delete s.handle,s.events={},d)for(i=0,n=d[r].length;i<n;i++)S.event.add(t,r,d[r][i]);Q.hasData(e)&&(o=Q.access(e),l=S.extend({},o),Q.set(t,l))}}function je(i,n,r,a){n=m.apply([],n);var e,t,s,o,l,d,u=0,c=i.length,p=c-1,h=n[0],f=b(h);if(f||1<c&&"string"==typeof h&&!y.checkClone&&ze.test(h))return i.each(function(e){var t=i.eq(e);f&&(n[0]=h.call(this,e,t.html())),je(t,n,r,a)});if(c&&(t=(e=we(n,i[0].ownerDocument,!1,i,a)).firstChild,1===e.childNodes.length&&(e=t),t||a)){for(o=(s=S.map(me(e,"script"),Ne)).length;u<c;u++)l=e,u!==p&&(l=S.clone(l,!0,!0),o&&S.merge(s,me(l,"script"))),r.call(i[u],l,u);if(o)for(d=s[s.length-1].ownerDocument,S.map(s,Oe),u=0;u<o;u++)l=s[u],fe.test(l.type||"")&&!K.access(l,"globalEval")&&S.contains(d,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?S._evalUrl&&!l.noModule&&S._evalUrl(l.src,{nonce:l.nonce||l.getAttribute("nonce")}):x(l.textContent.replace(Ae,""),l,d))}return i}function qe(e,t,i){for(var n,r=t?S.filter(t,e):e,a=0;null!=(n=r[a]);a++)i||1!==n.nodeType||S.cleanData(me(n)),n.parentNode&&(i&&ae(n)&&ge(me(n,"script")),n.parentNode.removeChild(n));return e}S.extend({htmlPrefilter:function(e){return e.replace(Le,"<$1></$2>")},clone:function(e,t,i){var n,r,a,s,o,l,d,u=e.cloneNode(!0),c=ae(e);if(!(y.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||S.isXMLDoc(e)))for(s=me(u),n=0,r=(a=me(e)).length;n<r;n++)o=a[n],l=s[n],void 0,"input"===(d=l.nodeName.toLowerCase())&&pe.test(o.type)?l.checked=o.checked:"input"!==d&&"textarea"!==d||(l.defaultValue=o.defaultValue);if(t)if(i)for(a=a||me(e),s=s||me(u),n=0,r=a.length;n<r;n++)He(a[n],s[n]);else He(e,u);return 0<(s=me(u,"script")).length&&ge(s,!c&&me(e,"script")),u},cleanData:function(e){for(var t,i,n,r=S.event.special,a=0;void 0!==(i=e[a]);a++)if(_(i)){if(t=i[K.expando]){if(t.events)for(n in t.events)r[n]?S.event.remove(i,n):S.removeEvent(i,n,t.handle);i[K.expando]=void 0}i[Q.expando]&&(i[Q.expando]=void 0)}}}),S.fn.extend({detach:function(e){return qe(this,e,!0)},remove:function(e){return qe(this,e)},text:function(e){return F(this,function(e){return void 0===e?S.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return je(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Ie(this,e).appendChild(e)})},prepend:function(){return je(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Ie(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return je(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return je(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(S.cleanData(me(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return S.clone(this,e,t)})},html:function(e){return F(this,function(e){var t=this[0]||{},i=0,n=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!$e.test(e)&&!ve[(he.exec(e)||["",""])[1].toLowerCase()]){e=S.htmlPrefilter(e);try{for(;i<n;i++)1===(t=this[i]||{}).nodeType&&(S.cleanData(me(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var i=[];return je(this,arguments,function(e){var t=this.parentNode;S.inArray(this,i)<0&&(S.cleanData(me(this)),t&&t.replaceChild(e,this))},i)}}),S.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,s){S.fn[e]=function(e){for(var t,i=[],n=S(e),r=n.length-1,a=0;a<=r;a++)t=a===r?this:this.clone(!0),S(n[a])[s](t),l.apply(i,t.get());return this.pushStack(i)}});var Be,Re,Xe,Fe,Ve,Ge,We,Ye=new RegExp("^("+te+")(?!px)[a-z%]+$","i"),_e=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=E),t.getComputedStyle(e)},Ue=new RegExp(ne.join("|"),"i");function Ke(){if(We){Ge.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",We.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",re.appendChild(Ge).appendChild(We);var e=E.getComputedStyle(We);Be="1%"!==e.top,Ve=12===Qe(e.marginLeft),We.style.right="60%",Fe=36===Qe(e.right),Re=36===Qe(e.width),We.style.position="absolute",Xe=12===Qe(We.offsetWidth/3),re.removeChild(Ge),We=null}}function Qe(e){return Math.round(parseFloat(e))}function Je(e,t,i){var n,r,a,s,o=e.style;return(i=i||_e(e))&&(""!==(s=i.getPropertyValue(t)||i[t])||ae(e)||(s=S.style(e,t)),!y.pixelBoxStyles()&&Ye.test(s)&&Ue.test(t)&&(n=o.width,r=o.minWidth,a=o.maxWidth,o.minWidth=o.maxWidth=o.width=s,s=i.width,o.width=n,o.minWidth=r,o.maxWidth=a)),void 0!==s?s+"":s}function Ze(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}Ge=C.createElement("div"),(We=C.createElement("div")).style&&(We.style.backgroundClip="content-box",We.cloneNode(!0).style.backgroundClip="",y.clearCloneStyle="content-box"===We.style.backgroundClip,S.extend(y,{boxSizingReliable:function(){return Ke(),Re},pixelBoxStyles:function(){return Ke(),Fe},pixelPosition:function(){return Ke(),Be},reliableMarginLeft:function(){return Ke(),Ve},scrollboxSize:function(){return Ke(),Xe}}));var et=["Webkit","Moz","ms"],tt=C.createElement("div").style,it={};function nt(e){var t=S.cssProps[e]||it[e];return t||(e in tt?e:it[e]=function(e){for(var t=e[0].toUpperCase()+e.slice(1),i=et.length;i--;)if((e=et[i]+t)in tt)return e}(e)||e)}var rt=/^(none|table(?!-c[ea]).+)/,at=/^--/,st={position:"absolute",visibility:"hidden",display:"block"},ot={letterSpacing:"0",fontWeight:"400"};function lt(e,t,i){var n=ie.exec(t);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):t}function dt(e,t,i,n,r,a){var s="width"===t?1:0,o=0,l=0;if(i===(n?"border":"content"))return 0;for(;s<4;s+=2)"margin"===i&&(l+=S.css(e,i+ne[s],!0,r)),n?("content"===i&&(l-=S.css(e,"padding"+ne[s],!0,r)),"margin"!==i&&(l-=S.css(e,"border"+ne[s]+"Width",!0,r))):(l+=S.css(e,"padding"+ne[s],!0,r),"padding"!==i?l+=S.css(e,"border"+ne[s]+"Width",!0,r):o+=S.css(e,"border"+ne[s]+"Width",!0,r));return!n&&0<=a&&(l+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-a-l-o-.5))||0),l}function ut(e,t,i){var n=_e(e),r=(!y.boxSizingReliable()||i)&&"border-box"===S.css(e,"boxSizing",!1,n),a=r,s=Je(e,t,n),o="offset"+t[0].toUpperCase()+t.slice(1);if(Ye.test(s)){if(!i)return s;s="auto"}return(!y.boxSizingReliable()&&r||"auto"===s||!parseFloat(s)&&"inline"===S.css(e,"display",!1,n))&&e.getClientRects().length&&(r="border-box"===S.css(e,"boxSizing",!1,n),(a=o in e)&&(s=e[o])),(s=parseFloat(s)||0)+dt(e,t,i||(r?"border":"content"),a,n,s)+"px"}function ct(e,t,i,n,r){return new ct.prototype.init(e,t,i,n,r)}S.extend({cssHooks:{opacity:{get:function(e,t){if(t){var i=Je(e,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,i,n){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var r,a,s,o=Y(t),l=at.test(t),d=e.style;if(l||(t=nt(o)),s=S.cssHooks[t]||S.cssHooks[o],void 0===i)return s&&"get"in s&&void 0!==(r=s.get(e,!1,n))?r:d[t];"string"===(a=typeof i)&&(r=ie.exec(i))&&r[1]&&(i=de(e,t,r),a="number"),null!=i&&i==i&&("number"!==a||l||(i+=r&&r[3]||(S.cssNumber[o]?"":"px")),y.clearCloneStyle||""!==i||0!==t.indexOf("background")||(d[t]="inherit"),s&&"set"in s&&void 0===(i=s.set(e,i,n))||(l?d.setProperty(t,i):d[t]=i))}},css:function(e,t,i,n){var r,a,s,o=Y(t);return at.test(t)||(t=nt(o)),(s=S.cssHooks[t]||S.cssHooks[o])&&"get"in s&&(r=s.get(e,!0,i)),void 0===r&&(r=Je(e,t,n)),"normal"===r&&t in ot&&(r=ot[t]),""===i||i?(a=parseFloat(r),!0===i||isFinite(a)?a||0:r):r}}),S.each(["height","width"],function(e,l){S.cssHooks[l]={get:function(e,t,i){if(t)return!rt.test(S.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?ut(e,l,i):oe(e,st,function(){return ut(e,l,i)})},set:function(e,t,i){var n,r=_e(e),a=!y.scrollboxSize()&&"absolute"===r.position,s=(a||i)&&"border-box"===S.css(e,"boxSizing",!1,r),o=i?dt(e,l,i,s,r):0;return s&&a&&(o-=Math.ceil(e["offset"+l[0].toUpperCase()+l.slice(1)]-parseFloat(r[l])-dt(e,l,"border",!1,r)-.5)),o&&(n=ie.exec(t))&&"px"!==(n[3]||"px")&&(e.style[l]=t,t=S.css(e,l)),lt(0,t,o)}}}),S.cssHooks.marginLeft=Ze(y.reliableMarginLeft,function(e,t){if(t)return(parseFloat(Je(e,"marginLeft"))||e.getBoundingClientRect().left-oe(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),S.each({margin:"",padding:"",border:"Width"},function(r,a){S.cssHooks[r+a]={expand:function(e){for(var t=0,i={},n="string"==typeof e?e.split(" "):[e];t<4;t++)i[r+ne[t]+a]=n[t]||n[t-2]||n[0];return i}},"margin"!==r&&(S.cssHooks[r+a].set=lt)}),S.fn.extend({css:function(e,t){return F(this,function(e,t,i){var n,r,a={},s=0;if(Array.isArray(t)){for(n=_e(e),r=t.length;s<r;s++)a[t[s]]=S.css(e,t[s],!1,n);return a}return void 0!==i?S.style(e,t,i):S.css(e,t)},e,t,1<arguments.length)}}),((S.Tween=ct).prototype={constructor:ct,init:function(e,t,i,n,r,a){this.elem=e,this.prop=i,this.easing=r||S.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=n,this.unit=a||(S.cssNumber[i]?"":"px")},cur:function(){var e=ct.propHooks[this.prop];return e&&e.get?e.get(this):ct.propHooks._default.get(this)},run:function(e){var t,i=ct.propHooks[this.prop];return this.options.duration?this.pos=t=S.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):ct.propHooks._default.set(this),this}}).init.prototype=ct.prototype,(ct.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=S.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){S.fx.step[e.prop]?S.fx.step[e.prop](e):1!==e.elem.nodeType||!S.cssHooks[e.prop]&&null==e.elem.style[nt(e.prop)]?e.elem[e.prop]=e.now:S.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=ct.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},S.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},S.fx=ct.prototype.init,S.fx.step={};var pt,ht,ft,vt,mt=/^(?:toggle|show|hide)$/,gt=/queueHooks$/;function yt(){ht&&(!1===C.hidden&&E.requestAnimationFrame?E.requestAnimationFrame(yt):E.setTimeout(yt,S.fx.interval),S.fx.tick())}function bt(){return E.setTimeout(function(){pt=void 0}),pt=Date.now()}function xt(e,t){var i,n=0,r={height:e};for(t=t?1:0;n<4;n+=2-t)r["margin"+(i=ne[n])]=r["padding"+i]=e;return t&&(r.opacity=r.width=e),r}function wt(e,t,i){for(var n,r=(Tt.tweeners[t]||[]).concat(Tt.tweeners["*"]),a=0,s=r.length;a<s;a++)if(n=r[a].call(i,t,e))return n}function Tt(a,e,t){var i,s,n=0,r=Tt.prefilters.length,o=S.Deferred().always(function(){delete l.elem}),l=function(){if(s)return!1;for(var e=pt||bt(),t=Math.max(0,d.startTime+d.duration-e),i=1-(t/d.duration||0),n=0,r=d.tweens.length;n<r;n++)d.tweens[n].run(i);return o.notifyWith(a,[d,i,t]),i<1&&r?t:(r||o.notifyWith(a,[d,1,0]),o.resolveWith(a,[d]),!1)},d=o.promise({elem:a,props:S.extend({},e),opts:S.extend(!0,{specialEasing:{},easing:S.easing._default},t),originalProperties:e,originalOptions:t,startTime:pt||bt(),duration:t.duration,tweens:[],createTween:function(e,t){var i=S.Tween(a,d.opts,e,t,d.opts.specialEasing[e]||d.opts.easing);return d.tweens.push(i),i},stop:function(e){var t=0,i=e?d.tweens.length:0;if(s)return this;for(s=!0;t<i;t++)d.tweens[t].run(1);return e?(o.notifyWith(a,[d,1,0]),o.resolveWith(a,[d,e])):o.rejectWith(a,[d,e]),this}}),u=d.props;for(!function(e,t){var i,n,r,a,s;for(i in e)if(r=t[n=Y(i)],a=e[i],Array.isArray(a)&&(r=a[1],a=e[i]=a[0]),i!==n&&(e[n]=a,delete e[i]),(s=S.cssHooks[n])&&"expand"in s)for(i in a=s.expand(a),delete e[n],a)i in e||(e[i]=a[i],t[i]=r);else t[n]=r}(u,d.opts.specialEasing);n<r;n++)if(i=Tt.prefilters[n].call(d,a,u,d.opts))return b(i.stop)&&(S._queueHooks(d.elem,d.opts.queue).stop=i.stop.bind(i)),i;return S.map(u,wt,d),b(d.opts.start)&&d.opts.start.call(a,d),d.progress(d.opts.progress).done(d.opts.done,d.opts.complete).fail(d.opts.fail).always(d.opts.always),S.fx.timer(S.extend(l,{elem:a,anim:d,queue:d.opts.queue})),d}S.Animation=S.extend(Tt,{tweeners:{"*":[function(e,t){var i=this.createTween(e,t);return de(i.elem,e,ie.exec(t),i),i}]},tweener:function(e,t){for(var i,n=0,r=(e=b(e)?(t=e,["*"]):e.match(O)).length;n<r;n++)i=e[n],Tt.tweeners[i]=Tt.tweeners[i]||[],Tt.tweeners[i].unshift(t)},prefilters:[function(e,t,i){var n,r,a,s,o,l,d,u,c="width"in t||"height"in t,p=this,h={},f=e.style,v=e.nodeType&&le(e),m=K.get(e,"fxshow");for(n in i.queue||(null==(s=S._queueHooks(e,"fx")).unqueued&&(s.unqueued=0,o=s.empty.fire,s.empty.fire=function(){s.unqueued||o()}),s.unqueued++,p.always(function(){p.always(function(){s.unqueued--,S.queue(e,"fx").length||s.empty.fire()})})),t)if(r=t[n],mt.test(r)){if(delete t[n],a=a||"toggle"===r,r===(v?"hide":"show")){if("show"!==r||!m||void 0===m[n])continue;v=!0}h[n]=m&&m[n]||S.style(e,n)}if((l=!S.isEmptyObject(t))||!S.isEmptyObject(h))for(n in c&&1===e.nodeType&&(i.overflow=[f.overflow,f.overflowX,f.overflowY],null==(d=m&&m.display)&&(d=K.get(e,"display")),"none"===(u=S.css(e,"display"))&&(d?u=d:(ce([e],!0),d=e.style.display||d,u=S.css(e,"display"),ce([e]))),("inline"===u||"inline-block"===u&&null!=d)&&"none"===S.css(e,"float")&&(l||(p.done(function(){f.display=d}),null==d&&(u=f.display,d="none"===u?"":u)),f.display="inline-block")),i.overflow&&(f.overflow="hidden",p.always(function(){f.overflow=i.overflow[0],f.overflowX=i.overflow[1],f.overflowY=i.overflow[2]})),l=!1,h)l||(m?"hidden"in m&&(v=m.hidden):m=K.access(e,"fxshow",{display:d}),a&&(m.hidden=!v),v&&ce([e],!0),p.done(function(){for(n in v||ce([e]),K.remove(e,"fxshow"),h)S.style(e,n,h[n])})),l=wt(v?m[n]:0,n,p),n in m||(m[n]=l.start,v&&(l.end=l.start,l.start=0))}],prefilter:function(e,t){t?Tt.prefilters.unshift(e):Tt.prefilters.push(e)}}),S.speed=function(e,t,i){var n=e&&"object"==typeof e?S.extend({},e):{complete:i||!i&&t||b(e)&&e,duration:e,easing:i&&t||t&&!b(t)&&t};return S.fx.off?n.duration=0:"number"!=typeof n.duration&&(n.duration in S.fx.speeds?n.duration=S.fx.speeds[n.duration]:n.duration=S.fx.speeds._default),null!=n.queue&&!0!==n.queue||(n.queue="fx"),n.old=n.complete,n.complete=function(){b(n.old)&&n.old.call(this),n.queue&&S.dequeue(this,n.queue)},n},S.fn.extend({fadeTo:function(e,t,i,n){return this.filter(le).css("opacity",0).show().end().animate({opacity:t},e,i,n)},animate:function(t,e,i,n){function r(){var e=Tt(this,S.extend({},t),s);(a||K.get(this,"finish"))&&e.stop(!0)}var a=S.isEmptyObject(t),s=S.speed(e,i,n);return r.finish=r,a||!1===s.queue?this.each(r):this.queue(s.queue,r)},stop:function(r,e,a){function s(e){var t=e.stop;delete e.stop,t(a)}return"string"!=typeof r&&(a=e,e=r,r=void 0),e&&!1!==r&&this.queue(r||"fx",[]),this.each(function(){var e=!0,t=null!=r&&r+"queueHooks",i=S.timers,n=K.get(this);if(t)n[t]&&n[t].stop&&s(n[t]);else for(t in n)n[t]&&n[t].stop&&gt.test(t)&&s(n[t]);for(t=i.length;t--;)i[t].elem!==this||null!=r&&i[t].queue!==r||(i[t].anim.stop(a),e=!1,i.splice(t,1));!e&&a||S.dequeue(this,r)})},finish:function(s){return!1!==s&&(s=s||"fx"),this.each(function(){var e,t=K.get(this),i=t[s+"queue"],n=t[s+"queueHooks"],r=S.timers,a=i?i.length:0;for(t.finish=!0,S.queue(this,s,[]),n&&n.stop&&n.stop.call(this,!0),e=r.length;e--;)r[e].elem===this&&r[e].queue===s&&(r[e].anim.stop(!0),r.splice(e,1));for(e=0;e<a;e++)i[e]&&i[e].finish&&i[e].finish.call(this);delete t.finish})}}),S.each(["toggle","show","hide"],function(e,n){var r=S.fn[n];S.fn[n]=function(e,t,i){return null==e||"boolean"==typeof e?r.apply(this,arguments):this.animate(xt(n,!0),e,t,i)}}),S.each({slideDown:xt("show"),slideUp:xt("hide"),slideToggle:xt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,n){S.fn[e]=function(e,t,i){return this.animate(n,e,t,i)}}),S.timers=[],S.fx.tick=function(){var e,t=0,i=S.timers;for(pt=Date.now();t<i.length;t++)(e=i[t])()||i[t]!==e||i.splice(t--,1);i.length||S.fx.stop(),pt=void 0},S.fx.timer=function(e){S.timers.push(e),S.fx.start()},S.fx.interval=13,S.fx.start=function(){ht||(ht=!0,yt())},S.fx.stop=function(){ht=null},S.fx.speeds={slow:600,fast:200,_default:400},S.fn.delay=function(n,e){return n=S.fx&&S.fx.speeds[n]||n,e=e||"fx",this.queue(e,function(e,t){var i=E.setTimeout(e,n);t.stop=function(){E.clearTimeout(i)}})},ft=C.createElement("input"),vt=C.createElement("select").appendChild(C.createElement("option")),ft.type="checkbox",y.checkOn=""!==ft.value,y.optSelected=vt.selected,(ft=C.createElement("input")).value="t",ft.type="radio",y.radioValue="t"===ft.value;var Et,Ct=S.expr.attrHandle;S.fn.extend({attr:function(e,t){return F(this,S.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){S.removeAttr(this,e)})}}),S.extend({attr:function(e,t,i){var n,r,a=e.nodeType;if(3!==a&&8!==a&&2!==a)return void 0===e.getAttribute?S.prop(e,t,i):(1===a&&S.isXMLDoc(e)||(r=S.attrHooks[t.toLowerCase()]||(S.expr.match.bool.test(t)?Et:void 0)),void 0!==i?null===i?void S.removeAttr(e,t):r&&"set"in r&&void 0!==(n=r.set(e,i,t))?n:(e.setAttribute(t,i+""),i):r&&"get"in r&&null!==(n=r.get(e,t))?n:null==(n=S.find.attr(e,t))?void 0:n)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&"radio"===t&&P(e,"input")){var i=e.value;return e.setAttribute("type",t),i&&(e.value=i),t}}}},removeAttr:function(e,t){var i,n=0,r=t&&t.match(O);if(r&&1===e.nodeType)for(;i=r[n++];)e.removeAttribute(i)}}),Et={set:function(e,t,i){return!1===t?S.removeAttr(e,i):e.setAttribute(i,i),i}},S.each(S.expr.match.bool.source.match(/\w+/g),function(e,t){var s=Ct[t]||S.find.attr;Ct[t]=function(e,t,i){var n,r,a=t.toLowerCase();return i||(r=Ct[a],Ct[a]=n,n=null!=s(e,t,i)?a:null,Ct[a]=r),n}});var St=/^(?:input|select|textarea|button)$/i,kt=/^(?:a|area)$/i;function Mt(e){return(e.match(O)||[]).join(" ")}function Pt(e){return e.getAttribute&&e.getAttribute("class")||""}function Dt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(O)||[]}S.fn.extend({prop:function(e,t){return F(this,S.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[S.propFix[e]||e]})}}),S.extend({prop:function(e,t,i){var n,r,a=e.nodeType;if(3!==a&&8!==a&&2!==a)return 1===a&&S.isXMLDoc(e)||(t=S.propFix[t]||t,r=S.propHooks[t]),void 0!==i?r&&"set"in r&&void 0!==(n=r.set(e,i,t))?n:e[t]=i:r&&"get"in r&&null!==(n=r.get(e,t))?n:e[t]},propHooks:{tabIndex:{get:function(e){var t=S.find.attr(e,"tabindex");return t?parseInt(t,10):St.test(e.nodeName)||kt.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),y.optSelected||(S.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),S.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){S.propFix[this.toLowerCase()]=this}),S.fn.extend({addClass:function(t){var e,i,n,r,a,s,o,l=0;if(b(t))return this.each(function(e){S(this).addClass(t.call(this,e,Pt(this)))});if((e=Dt(t)).length)for(;i=this[l++];)if(r=Pt(i),n=1===i.nodeType&&" "+Mt(r)+" "){for(s=0;a=e[s++];)n.indexOf(" "+a+" ")<0&&(n+=a+" ");r!==(o=Mt(n))&&i.setAttribute("class",o)}return this},removeClass:function(t){var e,i,n,r,a,s,o,l=0;if(b(t))return this.each(function(e){S(this).removeClass(t.call(this,e,Pt(this)))});if(!arguments.length)return this.attr("class","");if((e=Dt(t)).length)for(;i=this[l++];)if(r=Pt(i),n=1===i.nodeType&&" "+Mt(r)+" "){for(s=0;a=e[s++];)for(;-1<n.indexOf(" "+a+" ");)n=n.replace(" "+a+" "," ");r!==(o=Mt(n))&&i.setAttribute("class",o)}return this},toggleClass:function(r,t){var a=typeof r,s="string"==a||Array.isArray(r);return"boolean"==typeof t&&s?t?this.addClass(r):this.removeClass(r):b(r)?this.each(function(e){S(this).toggleClass(r.call(this,e,Pt(this),t),t)}):this.each(function(){var e,t,i,n;if(s)for(t=0,i=S(this),n=Dt(r);e=n[t++];)i.hasClass(e)?i.removeClass(e):i.addClass(e);else void 0!==r&&"boolean"!=a||((e=Pt(this))&&K.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||!1===r?"":K.get(this,"__className__")||""))})},hasClass:function(e){var t,i,n=0;for(t=" "+e+" ";i=this[n++];)if(1===i.nodeType&&-1<(" "+Mt(Pt(i))+" ").indexOf(t))return!0;return!1}});var Lt=/\r/g;S.fn.extend({val:function(i){var n,e,r,t=this[0];return arguments.length?(r=b(i),this.each(function(e){var t;1===this.nodeType&&(null==(t=r?i.call(this,e,S(this).val()):i)?t="":"number"==typeof t?t+="":Array.isArray(t)&&(t=S.map(t,function(e){return null==e?"":e+""})),(n=S.valHooks[this.type]||S.valHooks[this.nodeName.toLowerCase()])&&"set"in n&&void 0!==n.set(this,t,"value")||(this.value=t))})):t?(n=S.valHooks[t.type]||S.valHooks[t.nodeName.toLowerCase()])&&"get"in n&&void 0!==(e=n.get(t,"value"))?e:"string"==typeof(e=t.value)?e.replace(Lt,""):null==e?"":e:void 0}}),S.extend({valHooks:{option:{get:function(e){var t=S.find.attr(e,"value");return null!=t?t:Mt(S.text(e))}},select:{get:function(e){var t,i,n,r=e.options,a=e.selectedIndex,s="select-one"===e.type,o=s?null:[],l=s?a+1:r.length;for(n=a<0?l:s?a:0;n<l;n++)if(((i=r[n]).selected||n===a)&&!i.disabled&&(!i.parentNode.disabled||!P(i.parentNode,"optgroup"))){if(t=S(i).val(),s)return t;o.push(t)}return o},set:function(e,t){for(var i,n,r=e.options,a=S.makeArray(t),s=r.length;s--;)((n=r[s]).selected=-1<S.inArray(S.valHooks.option.get(n),a))&&(i=!0);return i||(e.selectedIndex=-1),a}}}}),S.each(["radio","checkbox"],function(){S.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<S.inArray(S(e).val(),t)}},y.checkOn||(S.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),y.focusin="onfocusin"in E;function $t(e){e.stopPropagation()}var zt=/^(?:focusinfocus|focusoutblur)$/;S.extend(S.event,{trigger:function(e,t,i,n){var r,a,s,o,l,d,u,c,p=[i||C],h=g.call(e,"type")?e.type:e,f=g.call(e,"namespace")?e.namespace.split("."):[];if(a=c=s=i=i||C,3!==i.nodeType&&8!==i.nodeType&&!zt.test(h+S.event.triggered)&&(-1<h.indexOf(".")&&(h=(f=h.split(".")).shift(),f.sort()),l=h.indexOf(":")<0&&"on"+h,(e=e[S.expando]?e:new S.Event(h,"object"==typeof e&&e)).isTrigger=n?2:3,e.namespace=f.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=i),t=null==t?[e]:S.makeArray(t,[e]),u=S.event.special[h]||{},n||!u.trigger||!1!==u.trigger.apply(i,t))){if(!n&&!u.noBubble&&!v(i)){for(o=u.delegateType||h,zt.test(o+h)||(a=a.parentNode);a;a=a.parentNode)p.push(a),s=a;s===(i.ownerDocument||C)&&p.push(s.defaultView||s.parentWindow||E)}for(r=0;(a=p[r++])&&!e.isPropagationStopped();)c=a,e.type=1<r?o:u.bindType||h,(d=(K.get(a,"events")||{})[e.type]&&K.get(a,"handle"))&&d.apply(a,t),(d=l&&a[l])&&d.apply&&_(a)&&(e.result=d.apply(a,t),!1===e.result&&e.preventDefault());return e.type=h,n||e.isDefaultPrevented()||u._default&&!1!==u._default.apply(p.pop(),t)||!_(i)||l&&b(i[h])&&!v(i)&&((s=i[l])&&(i[l]=null),S.event.triggered=h,e.isPropagationStopped()&&c.addEventListener(h,$t),i[h](),e.isPropagationStopped()&&c.removeEventListener(h,$t),S.event.triggered=void 0,s&&(i[l]=s)),e.result}},simulate:function(e,t,i){var n=S.extend(new S.Event,i,{type:e,isSimulated:!0});S.event.trigger(n,null,t)}}),S.fn.extend({trigger:function(e,t){return this.each(function(){S.event.trigger(e,t,this)})},triggerHandler:function(e,t){var i=this[0];if(i)return S.event.trigger(e,t,i,!0)}}),y.focusin||S.each({focus:"focusin",blur:"focusout"},function(i,n){function r(e){S.event.simulate(n,e.target,S.event.fix(e))}S.event.special[n]={setup:function(){var e=this.ownerDocument||this,t=K.access(e,n);t||e.addEventListener(i,r,!0),K.access(e,n,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this,t=K.access(e,n)-1;t?K.access(e,n,t):(e.removeEventListener(i,r,!0),K.remove(e,n))}}});var At=E.location,It=Date.now(),Nt=/\?/;S.parseXML=function(e){var t;if(!e||"string"!=typeof e)return null;try{t=(new E.DOMParser).parseFromString(e,"text/xml")}catch(e){t=void 0}return t&&!t.getElementsByTagName("parsererror").length||S.error("Invalid XML: "+e),t};var Ot=/\[\]$/,Ht=/\r?\n/g,jt=/^(?:submit|button|image|reset|file)$/i,qt=/^(?:input|select|textarea|keygen)/i;function Bt(i,e,n,r){var t;if(Array.isArray(e))S.each(e,function(e,t){n||Ot.test(i)?r(i,t):Bt(i+"["+("object"==typeof t&&null!=t?e:"")+"]",t,n,r)});else if(n||"object"!==w(e))r(i,e);else for(t in e)Bt(i+"["+t+"]",e[t],n,r)}S.param=function(e,t){function i(e,t){var i=b(t)?t():t;r[r.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==i?"":i)}var n,r=[];if(null==e)return"";if(Array.isArray(e)||e.jquery&&!S.isPlainObject(e))S.each(e,function(){i(this.name,this.value)});else for(n in e)Bt(n,e[n],t,i);return r.join("&")},S.fn.extend({serialize:function(){return S.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=S.prop(this,"elements");return e?S.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!S(this).is(":disabled")&&qt.test(this.nodeName)&&!jt.test(e)&&(this.checked||!pe.test(e))}).map(function(e,t){var i=S(this).val();return null==i?null:Array.isArray(i)?S.map(i,function(e){return{name:t.name,value:e.replace(Ht,"\r\n")}}):{name:t.name,value:i.replace(Ht,"\r\n")}}).get()}});var Rt=/%20/g,Xt=/#.*$/,Ft=/([?&])_=[^&]*/,Vt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Gt=/^(?:GET|HEAD)$/,Wt=/^\/\//,Yt={},_t={},Ut="*/".concat("*"),Kt=C.createElement("a");function Qt(a){return function(e,t){"string"!=typeof e&&(t=e,e="*");var i,n=0,r=e.toLowerCase().match(O)||[];if(b(t))for(;i=r[n++];)"+"===i[0]?(i=i.slice(1)||"*",(a[i]=a[i]||[]).unshift(t)):(a[i]=a[i]||[]).push(t)}}function Jt(t,r,a,s){var o={},l=t===_t;function d(e){var n;return o[e]=!0,S.each(t[e]||[],function(e,t){var i=t(r,a,s);return"string"!=typeof i||l||o[i]?l?!(n=i):void 0:(r.dataTypes.unshift(i),d(i),!1)}),n}return d(r.dataTypes[0])||!o["*"]&&d("*")}function Zt(e,t){var i,n,r=S.ajaxSettings.flatOptions||{};for(i in t)void 0!==t[i]&&((r[i]?e:n=n||{})[i]=t[i]);return n&&S.extend(!0,e,n),e}Kt.href=At.href,S.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:At.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(At.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Ut,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":S.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Zt(Zt(e,S.ajaxSettings),t):Zt(S.ajaxSettings,e)},ajaxPrefilter:Qt(Yt),ajaxTransport:Qt(_t),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var u,c,p,i,h,n,f,v,r,a,m=S.ajaxSetup({},t),g=m.context||m,y=m.context&&(g.nodeType||g.jquery)?S(g):S.event,b=S.Deferred(),x=S.Callbacks("once memory"),w=m.statusCode||{},s={},o={},l="canceled",T={readyState:0,getResponseHeader:function(e){var t;if(f){if(!i)for(i={};t=Vt.exec(p);)i[t[1].toLowerCase()+" "]=(i[t[1].toLowerCase()+" "]||[]).concat(t[2]);t=i[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return f?p:null},setRequestHeader:function(e,t){return null==f&&(e=o[e.toLowerCase()]=o[e.toLowerCase()]||e,s[e]=t),this},overrideMimeType:function(e){return null==f&&(m.mimeType=e),this},statusCode:function(e){var t;if(e)if(f)T.always(e[T.status]);else for(t in e)w[t]=[w[t],e[t]];return this},abort:function(e){var t=e||l;return u&&u.abort(t),d(0,t),this}};if(b.promise(T),m.url=((e||m.url||At.href)+"").replace(Wt,At.protocol+"//"),m.type=t.method||t.type||m.method||m.type,m.dataTypes=(m.dataType||"*").toLowerCase().match(O)||[""],null==m.crossDomain){n=C.createElement("a");try{n.href=m.url,n.href=n.href,m.crossDomain=Kt.protocol+"//"+Kt.host!=n.protocol+"//"+n.host}catch(e){m.crossDomain=!0}}if(m.data&&m.processData&&"string"!=typeof m.data&&(m.data=S.param(m.data,m.traditional)),Jt(Yt,m,t,T),f)return T;for(r in(v=S.event&&m.global)&&0==S.active++&&S.event.trigger("ajaxStart"),m.type=m.type.toUpperCase(),m.hasContent=!Gt.test(m.type),c=m.url.replace(Xt,""),m.hasContent?m.data&&m.processData&&0===(m.contentType||"").indexOf("application/x-www-form-urlencoded")&&(m.data=m.data.replace(Rt,"+")):(a=m.url.slice(c.length),m.data&&(m.processData||"string"==typeof m.data)&&(c+=(Nt.test(c)?"&":"?")+m.data,delete m.data),!1===m.cache&&(c=c.replace(Ft,"$1"),a=(Nt.test(c)?"&":"?")+"_="+It+++a),m.url=c+a),m.ifModified&&(S.lastModified[c]&&T.setRequestHeader("If-Modified-Since",S.lastModified[c]),S.etag[c]&&T.setRequestHeader("If-None-Match",S.etag[c])),(m.data&&m.hasContent&&!1!==m.contentType||t.contentType)&&T.setRequestHeader("Content-Type",m.contentType),T.setRequestHeader("Accept",m.dataTypes[0]&&m.accepts[m.dataTypes[0]]?m.accepts[m.dataTypes[0]]+("*"!==m.dataTypes[0]?", "+Ut+"; q=0.01":""):m.accepts["*"]),m.headers)T.setRequestHeader(r,m.headers[r]);if(m.beforeSend&&(!1===m.beforeSend.call(g,T,m)||f))return T.abort();if(l="abort",x.add(m.complete),T.done(m.success),T.fail(m.error),u=Jt(_t,m,t,T)){if(T.readyState=1,v&&y.trigger("ajaxSend",[T,m]),f)return T;m.async&&0<m.timeout&&(h=E.setTimeout(function(){T.abort("timeout")},m.timeout));try{f=!1,u.send(s,d)}catch(e){if(f)throw e;d(-1,e)}}else d(-1,"No Transport");function d(e,t,i,n){var r,a,s,o,l,d=t;f||(f=!0,h&&E.clearTimeout(h),u=void 0,p=n||"",T.readyState=0<e?4:0,r=200<=e&&e<300||304===e,i&&(o=function(e,t,i){for(var n,r,a,s,o=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=e.mimeType||t.getResponseHeader("Content-Type"));if(n)for(r in o)if(o[r]&&o[r].test(n)){l.unshift(r);break}if(l[0]in i)a=l[0];else{for(r in i){if(!l[0]||e.converters[r+" "+l[0]]){a=r;break}s=s||r}a=a||s}if(a)return a!==l[0]&&l.unshift(a),i[a]}(m,T,i)),o=function(e,t,i,n){var r,a,s,o,l,d={},u=e.dataTypes.slice();if(u[1])for(s in e.converters)d[s.toLowerCase()]=e.converters[s];for(a=u.shift();a;)if(e.responseFields[a]&&(i[e.responseFields[a]]=t),!l&&n&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=a,a=u.shift())if("*"===a)a=l;else if("*"!==l&&l!==a){if(!(s=d[l+" "+a]||d["* "+a]))for(r in d)if((o=r.split(" "))[1]===a&&(s=d[l+" "+o[0]]||d["* "+o[0]])){!0===s?s=d[r]:!0!==d[r]&&(a=o[0],u.unshift(o[1]));break}if(!0!==s)if(s&&e.throws)t=s(t);else try{t=s(t)}catch(e){return{state:"parsererror",error:s?e:"No conversion from "+l+" to "+a}}}return{state:"success",data:t}}(m,o,T,r),r?(m.ifModified&&((l=T.getResponseHeader("Last-Modified"))&&(S.lastModified[c]=l),(l=T.getResponseHeader("etag"))&&(S.etag[c]=l)),204===e||"HEAD"===m.type?d="nocontent":304===e?d="notmodified":(d=o.state,a=o.data,r=!(s=o.error))):(s=d,!e&&d||(d="error",e<0&&(e=0))),T.status=e,T.statusText=(t||d)+"",r?b.resolveWith(g,[a,d,T]):b.rejectWith(g,[T,d,s]),T.statusCode(w),w=void 0,v&&y.trigger(r?"ajaxSuccess":"ajaxError",[T,m,r?a:s]),x.fireWith(g,[T,d]),v&&(y.trigger("ajaxComplete",[T,m]),--S.active||S.event.trigger("ajaxStop")))}return T},getJSON:function(e,t,i){return S.get(e,t,i,"json")},getScript:function(e,t){return S.get(e,void 0,t,"script")}}),S.each(["get","post"],function(e,r){S[r]=function(e,t,i,n){return b(t)&&(n=n||i,i=t,t=void 0),S.ajax(S.extend({url:e,type:r,dataType:n,data:t,success:i},S.isPlainObject(e)&&e))}}),S._evalUrl=function(e,t){return S.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){S.globalEval(e,t)}})},S.fn.extend({wrapAll:function(e){var t;return this[0]&&(b(e)&&(e=e.call(this[0])),t=S(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(i){return b(i)?this.each(function(e){S(this).wrapInner(i.call(this,e))}):this.each(function(){var e=S(this),t=e.contents();t.length?t.wrapAll(i):e.append(i)})},wrap:function(t){var i=b(t);return this.each(function(e){S(this).wrapAll(i?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){S(this).replaceWith(this.childNodes)}),this}}),S.expr.pseudos.hidden=function(e){return!S.expr.pseudos.visible(e)},S.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},S.ajaxSettings.xhr=function(){try{return new E.XMLHttpRequest}catch(e){}};var ei={0:200,1223:204},ti=S.ajaxSettings.xhr();y.cors=!!ti&&"withCredentials"in ti,y.ajax=ti=!!ti,S.ajaxTransport(function(r){var a,s;if(y.cors||ti&&!r.crossDomain)return{send:function(e,t){var i,n=r.xhr();if(n.open(r.type,r.url,r.async,r.username,r.password),r.xhrFields)for(i in r.xhrFields)n[i]=r.xhrFields[i];for(i in r.mimeType&&n.overrideMimeType&&n.overrideMimeType(r.mimeType),r.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)n.setRequestHeader(i,e[i]);a=function(e){return function(){a&&(a=s=n.onload=n.onerror=n.onabort=n.ontimeout=n.onreadystatechange=null,"abort"===e?n.abort():"error"===e?"number"!=typeof n.status?t(0,"error"):t(n.status,n.statusText):t(ei[n.status]||n.status,n.statusText,"text"!==(n.responseType||"text")||"string"!=typeof n.responseText?{binary:n.response}:{text:n.responseText},n.getAllResponseHeaders()))}},n.onload=a(),s=n.onerror=n.ontimeout=a("error"),void 0!==n.onabort?n.onabort=s:n.onreadystatechange=function(){4===n.readyState&&E.setTimeout(function(){a&&s()})},a=a("abort");try{n.send(r.hasContent&&r.data||null)}catch(e){if(a)throw e}},abort:function(){a&&a()}}}),S.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),S.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return S.globalEval(e),e}}}),S.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),S.ajaxTransport("script",function(i){var n,r;if(i.crossDomain||i.scriptAttrs)return{send:function(e,t){n=S("<script>").attr(i.scriptAttrs||{}).prop({charset:i.scriptCharset,src:i.url}).on("load error",r=function(e){n.remove(),r=null,e&&t("error"===e.type?404:200,e.type)}),C.head.appendChild(n[0])},abort:function(){r&&r()}}});var ii,ni=[],ri=/(=)\?(?=&|$)|\?\?/;S.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=ni.pop()||S.expando+"_"+It++;return this[e]=!0,e}}),S.ajaxPrefilter("json jsonp",function(e,t,i){var n,r,a,s=!1!==e.jsonp&&(ri.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&ri.test(e.data)&&"data");if(s||"jsonp"===e.dataTypes[0])return n=e.jsonpCallback=b(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,s?e[s]=e[s].replace(ri,"$1"+n):!1!==e.jsonp&&(e.url+=(Nt.test(e.url)?"&":"?")+e.jsonp+"="+n),e.converters["script json"]=function(){return a||S.error(n+" was not called"),a[0]},e.dataTypes[0]="json",r=E[n],E[n]=function(){a=arguments},i.always(function(){void 0===r?S(E).removeProp(n):E[n]=r,e[n]&&(e.jsonpCallback=t.jsonpCallback,ni.push(n)),a&&b(r)&&r(a[0]),a=r=void 0}),"script"}),y.createHTMLDocument=((ii=C.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===ii.childNodes.length),S.parseHTML=function(e,t,i){return"string"!=typeof e?[]:("boolean"==typeof t&&(i=t,t=!1),t||(y.createHTMLDocument?((n=(t=C.implementation.createHTMLDocument("")).createElement("base")).href=C.location.href,t.head.appendChild(n)):t=C),a=!i&&[],(r=D.exec(e))?[t.createElement(r[1])]:(r=we([e],t,a),a&&a.length&&S(a).remove(),S.merge([],r.childNodes)));var n,r,a},S.fn.load=function(e,t,i){var n,r,a,s=this,o=e.indexOf(" ");return-1<o&&(n=Mt(e.slice(o)),e=e.slice(0,o)),b(t)?(i=t,t=void 0):t&&"object"==typeof t&&(r="POST"),0<s.length&&S.ajax({url:e,type:r||"GET",dataType:"html",data:t}).done(function(e){a=arguments,s.html(n?S("<div>").append(S.parseHTML(e)).find(n):e)}).always(i&&function(e,t){s.each(function(){i.apply(this,a||[e.responseText,t,e])})}),this},S.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){S.fn[t]=function(e){return this.on(t,e)}}),S.expr.pseudos.animated=function(t){return S.grep(S.timers,function(e){return t===e.elem}).length},S.offset={setOffset:function(e,t,i){var n,r,a,s,o,l,d=S.css(e,"position"),u=S(e),c={};"static"===d&&(e.style.position="relative"),o=u.offset(),a=S.css(e,"top"),l=S.css(e,"left"),r=("absolute"===d||"fixed"===d)&&-1<(a+l).indexOf("auto")?(s=(n=u.position()).top,n.left):(s=parseFloat(a)||0,parseFloat(l)||0),b(t)&&(t=t.call(e,i,S.extend({},o))),null!=t.top&&(c.top=t.top-o.top+s),null!=t.left&&(c.left=t.left-o.left+r),"using"in t?t.using.call(e,c):u.css(c)}},S.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){S.offset.setOffset(this,t,e)});var e,i,n=this[0];return n?n.getClientRects().length?(e=n.getBoundingClientRect(),i=n.ownerDocument.defaultView,{top:e.top+i.pageYOffset,left:e.left+i.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,i,n=this[0],r={top:0,left:0};if("fixed"===S.css(n,"position"))t=n.getBoundingClientRect();else{for(t=this.offset(),i=n.ownerDocument,e=n.offsetParent||i.documentElement;e&&(e===i.body||e===i.documentElement)&&"static"===S.css(e,"position");)e=e.parentNode;e&&e!==n&&1===e.nodeType&&((r=S(e).offset()).top+=S.css(e,"borderTopWidth",!0),r.left+=S.css(e,"borderLeftWidth",!0))}return{top:t.top-r.top-S.css(n,"marginTop",!0),left:t.left-r.left-S.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===S.css(e,"position");)e=e.offsetParent;return e||re})}}),S.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,r){var a="pageYOffset"===r;S.fn[t]=function(e){return F(this,function(e,t,i){var n;if(v(e)?n=e:9===e.nodeType&&(n=e.defaultView),void 0===i)return n?n[r]:e[t];n?n.scrollTo(a?n.pageXOffset:i,a?i:n.pageYOffset):e[t]=i},t,e,arguments.length)}}),S.each(["top","left"],function(e,i){S.cssHooks[i]=Ze(y.pixelPosition,function(e,t){if(t)return t=Je(e,i),Ye.test(t)?S(e).position()[i]+"px":t})}),S.each({Height:"height",Width:"width"},function(s,o){S.each({padding:"inner"+s,content:o,"":"outer"+s},function(n,a){S.fn[a]=function(e,t){var i=arguments.length&&(n||"boolean"!=typeof e),r=n||(!0===e||!0===t?"margin":"border");return F(this,function(e,t,i){var n;return v(e)?0===a.indexOf("outer")?e["inner"+s]:e.document.documentElement["client"+s]:9===e.nodeType?(n=e.documentElement,Math.max(e.body["scroll"+s],n["scroll"+s],e.body["offset"+s],n["offset"+s],n["client"+s])):void 0===i?S.css(e,t,r):S.style(e,t,i,r)},o,i?e:void 0,i)}})}),S.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,i){S.fn[i]=function(e,t){return 0<arguments.length?this.on(i,null,e,t):this.trigger(i)}}),S.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),S.fn.extend({bind:function(e,t,i){return this.on(e,null,t,i)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,i,n){return this.on(t,e,i,n)},undelegate:function(e,t,i){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",i)}}),S.proxy=function(e,t){var i,n,r;if("string"==typeof t&&(i=e[t],t=e,e=i),b(e))return n=o.call(arguments,2),(r=function(){return e.apply(t||this,n.concat(o.call(arguments)))}).guid=e.guid=e.guid||S.guid++,r},S.holdReady=function(e){e?S.readyWait++:S.ready(!0)},S.isArray=Array.isArray,S.parseJSON=JSON.parse,S.nodeName=P,S.isFunction=b,S.isWindow=v,S.camelCase=Y,S.type=w,S.now=Date.now,S.isNumeric=function(e){var t=S.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},"function"==typeof define&&define.amd&&define("jquery",[],function(){return S});var ai=E.jQuery,si=E.$;return S.noConflict=function(e){return E.$===S&&(E.$=si),e&&E.jQuery===S&&(E.jQuery=ai),S},e||(E.jQuery=E.$=S),S}),$(document).ready(function(){var e=new Swiper(".swiper1-bottom",{spaceBetween:10,slidesPerView:4,loop:!1,freeMode:!0,loopedSlides:5,watchSlidesVisibility:!0,watchSlidesProgress:!0}),t=(new Swiper(".swiper1-top",{navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"},autoHeight:!1,autoplay:{delay:4e3},roundLengths:!0,slidesPerView:1,spaceBetween:10,loop:!1,loopedSlides:5,thumbs:{swiper:e}}),new Swiper(".swiper3-controls",{spaceBetween:0,slidesPerView:5,loop:!1,freeMode:!0,watchSlidesVisibility:!0,watchSlidesProgress:!0}));new Swiper(".swiper3-main",{navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"},autoHeight:!1,autoplay:{delay:3500},roundLengths:!0,slidesPerView:1,spaceBetween:10,loop:!1,thumbs:{swiper:t}}),new Swiper(".swiper2",{navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"},autoplay:{delay:3500},autoHeight:!1,roundLengths:!0,slidesPerView:1,spaceBetween:10,centeredSlides:!1,breakpointsInverse:!0,breakpoints:{480:{slidesPerView:2,spaceBetween:15},960:{slidesPerView:3,spaceBetween:24}}});$(function(){$(".dropdown-toggle").click(function(){$(this).next(".dropdown").toggle()}),$(document).click(function(e){var t=e.target;$(t).is(".dropdown-toggle")||$(t).parents().is(".dropdown-toggle")||$(".dropdown").hide()})}),$(".section-portfolio .button-expand").on("click",function(){$(".section-portfolio .col.display-toggle").hasClass("hidden")?($(".section-portfolio .col.display-toggle").removeClass("hidden"),setTimeout(function(){$(".section-portfolio .col.display-toggle").removeClass("visuallyhidden")},20)):($(".section-portfolio .col.display-toggle").addClass("visuallyhidden"),$(".section-portfolio .col.display-toggle").one("transitionend",function(e){$(".section-portfolio .col.display-toggle").addClass("hidden")})),$(".section-portfolio .icon-rotate").toggleClass("rotate")}),$(".section-portfolio .button-expand").on("click",function(e){e.preventDefault(),$(".section-portfolio .section-description.display-toggle").toggleClass("invisible")}),$(".profile-menu").on("click",function(e){e.preventDefault(),$(".profile-menu ul").toggleClass("is-open")});var i,n=document.getElementsByClassName("nav-item");function r(e){return function(){$(".nav-item").removeClass("isactive"),$(n[e]).addClass("isactive"),$("html, body").animate({scrollTop:$($(this).attr("href")).offset().top},500,"linear")}}for(i=0;i<n.length;i++)$(n[i]).on("click",r(i));$(".hero .button-scroll").on("click",function(e){e.preventDefault(),$("html, body").animate({scrollTop:$($(this).attr("href")).offset().top},500,"linear")})}),function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).Swiper=t()}(this,function(){"use strict";var v="undefined"==typeof document?{body:{},addEventListener:function(){},removeEventListener:function(){},activeElement:{blur:function(){},nodeName:""},querySelector:function(){return null},querySelectorAll:function(){return[]},getElementById:function(){return null},createEvent:function(){return{initEvent:function(){}}},createElement:function(){return{children:[],childNodes:[],style:{},setAttribute:function(){},getElementsByTagName:function(){return[]}}},location:{hash:""}}:document,Z="undefined"==typeof window?{document:v,navigator:{userAgent:""},location:{},history:{},CustomEvent:function(){return this},addEventListener:function(){},removeEventListener:function(){},getComputedStyle:function(){return{getPropertyValue:function(){return""}}},Image:function(){},Date:function(){},screen:{},setTimeout:function(){},clearTimeout:function(){}}:window,l=function(e){for(var t=0;t<e.length;t+=1)this[t]=e[t];return this.length=e.length,this};function $(e,t){var i=[],n=0;if(e&&!t&&e instanceof l)return e;if(e)if("string"==typeof e){var r,a,s=e.trim();if(0<=s.indexOf("<")&&0<=s.indexOf(">")){var o="div";for(0===s.indexOf("<li")&&(o="ul"),0===s.indexOf("<tr")&&(o="tbody"),0!==s.indexOf("<td")&&0!==s.indexOf("<th")||(o="tr"),0===s.indexOf("<tbody")&&(o="table"),0===s.indexOf("<option")&&(o="select"),(a=v.createElement(o)).innerHTML=s,n=0;n<a.childNodes.length;n+=1)i.push(a.childNodes[n])}else for(r=t||"#"!==e[0]||e.match(/[ .<>:~]/)?(t||v).querySelectorAll(e.trim()):[v.getElementById(e.trim().split("#")[1])],n=0;n<r.length;n+=1)r[n]&&i.push(r[n])}else if(e.nodeType||e===Z||e===v)i.push(e);else if(0<e.length&&e[0].nodeType)for(n=0;n<e.length;n+=1)i.push(e[n]);return new l(i)}function a(e){for(var t=[],i=0;i<e.length;i+=1)-1===t.indexOf(e[i])&&t.push(e[i]);return t}$.fn=l.prototype,$.Class=l,$.Dom7=l;var t={addClass:function(e){if(void 0===e)return this;for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var n=0;n<this.length;n+=1)void 0!==this[n]&&void 0!==this[n].classList&&this[n].classList.add(t[i]);return this},removeClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var n=0;n<this.length;n+=1)void 0!==this[n]&&void 0!==this[n].classList&&this[n].classList.remove(t[i]);return this},hasClass:function(e){return!!this[0]&&this[0].classList.contains(e)},toggleClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var n=0;n<this.length;n+=1)void 0!==this[n]&&void 0!==this[n].classList&&this[n].classList.toggle(t[i]);return this},attr:function(e,t){var i=arguments;if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var n=0;n<this.length;n+=1)if(2===i.length)this[n].setAttribute(e,t);else for(var r in e)this[n][r]=e[r],this[n].setAttribute(r,e[r]);return this},removeAttr:function(e){for(var t=0;t<this.length;t+=1)this[t].removeAttribute(e);return this},data:function(e,t){var i;if(void 0!==t){for(var n=0;n<this.length;n+=1)(i=this[n]).dom7ElementDataStorage||(i.dom7ElementDataStorage={}),i.dom7ElementDataStorage[e]=t;return this}if(i=this[0])return i.dom7ElementDataStorage&&e in i.dom7ElementDataStorage?i.dom7ElementDataStorage[e]:i.getAttribute("data-"+e)||void 0},transform:function(e){for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransform=e,i.transform=e}return this},transition:function(e){"string"!=typeof e&&(e+="ms");for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransitionDuration=e,i.transitionDuration=e}return this},on:function(){for(var e,t=[],i=arguments.length;i--;)t[i]=arguments[i];var n=t[0],a=t[1],s=t[2],r=t[3];function o(e){var t=e.target;if(t){var i=e.target.dom7EventData||[];if(i.indexOf(e)<0&&i.unshift(e),$(t).is(a))s.apply(t,i);else for(var n=$(t).parents(),r=0;r<n.length;r+=1)$(n[r]).is(a)&&s.apply(n[r],i)}}function l(e){var t=e&&e.target&&e.target.dom7EventData||[];t.indexOf(e)<0&&t.unshift(e),s.apply(this,t)}"function"==typeof t[1]&&(n=(e=t)[0],s=e[1],r=e[2],a=void 0),r=r||!1;for(var d,u=n.split(" "),c=0;c<this.length;c+=1){var p=this[c];if(a)for(d=0;d<u.length;d+=1){var h=u[d];p.dom7LiveListeners||(p.dom7LiveListeners={}),p.dom7LiveListeners[h]||(p.dom7LiveListeners[h]=[]),p.dom7LiveListeners[h].push({listener:s,proxyListener:o}),p.addEventListener(h,o,r)}else for(d=0;d<u.length;d+=1){var f=u[d];p.dom7Listeners||(p.dom7Listeners={}),p.dom7Listeners[f]||(p.dom7Listeners[f]=[]),p.dom7Listeners[f].push({listener:s,proxyListener:l}),p.addEventListener(f,l,r)}}return this},off:function(){for(var e,t=[],i=arguments.length;i--;)t[i]=arguments[i];var n=t[0],r=t[1],a=t[2],s=t[3];"function"==typeof t[1]&&(n=(e=t)[0],a=e[1],s=e[2],r=void 0),s=s||!1;for(var o=n.split(" "),l=0;l<o.length;l+=1)for(var d=o[l],u=0;u<this.length;u+=1){var c=this[u],p=void 0;if(!r&&c.dom7Listeners?p=c.dom7Listeners[d]:r&&c.dom7LiveListeners&&(p=c.dom7LiveListeners[d]),p&&p.length)for(var h=p.length-1;0<=h;h-=1){var f=p[h];a&&f.listener===a?(c.removeEventListener(d,f.proxyListener,s),p.splice(h,1)):a&&f.listener&&f.listener.dom7proxy&&f.listener.dom7proxy===a?(c.removeEventListener(d,f.proxyListener,s),p.splice(h,1)):a||(c.removeEventListener(d,f.proxyListener,s),p.splice(h,1))}}return this},trigger:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var i=e[0].split(" "),n=e[1],r=0;r<i.length;r+=1)for(var a=i[r],s=0;s<this.length;s+=1){var o=this[s],l=void 0;try{l=new Z.CustomEvent(a,{detail:n,bubbles:!0,cancelable:!0})}catch(e){(l=v.createEvent("Event")).initEvent(a,!0,!0),l.detail=n}o.dom7EventData=e.filter(function(e,t){return 0<t}),o.dispatchEvent(l),o.dom7EventData=[],delete o.dom7EventData}return this},transitionEnd:function(t){var i,n=["webkitTransitionEnd","transitionend"],r=this;function a(e){if(e.target===this)for(t.call(this,e),i=0;i<n.length;i+=1)r.off(n[i],a)}if(t)for(i=0;i<n.length;i+=1)r.on(n[i],a);return this},outerWidth:function(e){if(0<this.length){if(e){var t=this.styles();return this[0].offsetWidth+parseFloat(t.getPropertyValue("margin-right"))+parseFloat(t.getPropertyValue("margin-left"))}return this[0].offsetWidth}return null},outerHeight:function(e){if(0<this.length){if(e){var t=this.styles();return this[0].offsetHeight+parseFloat(t.getPropertyValue("margin-top"))+parseFloat(t.getPropertyValue("margin-bottom"))}return this[0].offsetHeight}return null},offset:function(){if(0<this.length){var e=this[0],t=e.getBoundingClientRect(),i=v.body,n=e.clientTop||i.clientTop||0,r=e.clientLeft||i.clientLeft||0,a=e===Z?Z.scrollY:e.scrollTop,s=e===Z?Z.scrollX:e.scrollLeft;return{top:t.top+a-n,left:t.left+s-r}}return null},css:function(e,t){var i;if(1===arguments.length){if("string"!=typeof e){for(i=0;i<this.length;i+=1)for(var n in e)this[i].style[n]=e[n];return this}if(this[0])return Z.getComputedStyle(this[0],null).getPropertyValue(e)}if(2!==arguments.length||"string"!=typeof e)return this;for(i=0;i<this.length;i+=1)this[i].style[e]=t;return this},each:function(e){if(!e)return this;for(var t=0;t<this.length;t+=1)if(!1===e.call(this[t],t,this[t]))return this;return this},html:function(e){if(void 0===e)return this[0]?this[0].innerHTML:void 0;for(var t=0;t<this.length;t+=1)this[t].innerHTML=e;return this},text:function(e){if(void 0===e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t+=1)this[t].textContent=e;return this},is:function(e){var t,i,n=this[0];if(!n||void 0===e)return!1;if("string"==typeof e){if(n.matches)return n.matches(e);if(n.webkitMatchesSelector)return n.webkitMatchesSelector(e);if(n.msMatchesSelector)return n.msMatchesSelector(e);for(t=$(e),i=0;i<t.length;i+=1)if(t[i]===n)return!0;return!1}if(e===v)return n===v;if(e===Z)return n===Z;if(e.nodeType||e instanceof l){for(t=e.nodeType?[e]:e,i=0;i<t.length;i+=1)if(t[i]===n)return!0;return!1}return!1},index:function(){var e,t=this[0];if(t){for(e=0;null!==(t=t.previousSibling);)1===t.nodeType&&(e+=1);return e}},eq:function(e){if(void 0===e)return this;var t,i=this.length;return new l(i-1<e?[]:e<0?(t=i+e)<0?[]:[this[t]]:[this[e]])},append:function(){for(var e,t=[],i=arguments.length;i--;)t[i]=arguments[i];for(var n=0;n<t.length;n+=1){e=t[n];for(var r=0;r<this.length;r+=1)if("string"==typeof e){var a=v.createElement("div");for(a.innerHTML=e;a.firstChild;)this[r].appendChild(a.firstChild)}else if(e instanceof l)for(var s=0;s<e.length;s+=1)this[r].appendChild(e[s]);else this[r].appendChild(e)}return this},prepend:function(e){var t,i;for(t=0;t<this.length;t+=1)if("string"==typeof e){var n=v.createElement("div");for(n.innerHTML=e,i=n.childNodes.length-1;0<=i;i-=1)this[t].insertBefore(n.childNodes[i],this[t].childNodes[0])}else if(e instanceof l)for(i=0;i<e.length;i+=1)this[t].insertBefore(e[i],this[t].childNodes[0]);else this[t].insertBefore(e,this[t].childNodes[0]);return this},next:function(e){return 0<this.length?e?this[0].nextElementSibling&&$(this[0].nextElementSibling).is(e)?new l([this[0].nextElementSibling]):new l([]):this[0].nextElementSibling?new l([this[0].nextElementSibling]):new l([]):new l([])},nextAll:function(e){var t=[],i=this[0];if(!i)return new l([]);for(;i.nextElementSibling;){var n=i.nextElementSibling;e?$(n).is(e)&&t.push(n):t.push(n),i=n}return new l(t)},prev:function(e){if(0<this.length){var t=this[0];return e?t.previousElementSibling&&$(t.previousElementSibling).is(e)?new l([t.previousElementSibling]):new l([]):t.previousElementSibling?new l([t.previousElementSibling]):new l([])}return new l([])},prevAll:function(e){var t=[],i=this[0];if(!i)return new l([]);for(;i.previousElementSibling;){var n=i.previousElementSibling;e?$(n).is(e)&&t.push(n):t.push(n),i=n}return new l(t)},parent:function(e){for(var t=[],i=0;i<this.length;i+=1)null!==this[i].parentNode&&(e?$(this[i].parentNode).is(e)&&t.push(this[i].parentNode):t.push(this[i].parentNode));return $(a(t))},parents:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var n=this[i].parentNode;n;)e?$(n).is(e)&&t.push(n):t.push(n),n=n.parentNode;return $(a(t))},closest:function(e){var t=this;return void 0===e?new l([]):(t.is(e)||(t=t.parents(e).eq(0)),t)},find:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var n=this[i].querySelectorAll(e),r=0;r<n.length;r+=1)t.push(n[r]);return new l(t)},children:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var n=this[i].childNodes,r=0;r<n.length;r+=1)e?1===n[r].nodeType&&$(n[r]).is(e)&&t.push(n[r]):1===n[r].nodeType&&t.push(n[r]);return new l(a(t))},remove:function(){for(var e=0;e<this.length;e+=1)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this},add:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,n;for(i=0;i<e.length;i+=1){var r=$(e[i]);for(n=0;n<r.length;n+=1)this[this.length]=r[n],this.length+=1}return this},styles:function(){return this[0]?Z.getComputedStyle(this[0],null):{}}};Object.keys(t).forEach(function(e){$.fn[e]=t[e]});function e(e){void 0===e&&(e={});var t=this;t.params=e,t.eventsListeners={},t.params&&t.params.on&&Object.keys(t.params.on).forEach(function(e){t.on(e,t.params.on[e])})}var i,n,r,s,ee={deleteProps:function(e){var t=e;Object.keys(t).forEach(function(e){try{t[e]=null}catch(e){}try{delete t[e]}catch(e){}})},nextTick:function(e,t){return void 0===t&&(t=0),setTimeout(e,t)},now:function(){return Date.now()},getTranslate:function(e,t){var i,n,r;void 0===t&&(t="x");var a=Z.getComputedStyle(e,null);return Z.WebKitCSSMatrix?(6<(n=a.transform||a.webkitTransform).split(",").length&&(n=n.split(", ").map(function(e){return e.replace(",",".")}).join(", ")),r=new Z.WebKitCSSMatrix("none"===n?"":n)):i=(r=a.MozTransform||a.OTransform||a.MsTransform||a.msTransform||a.transform||a.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,")).toString().split(","),"x"===t&&(n=Z.WebKitCSSMatrix?r.m41:16===i.length?parseFloat(i[12]):parseFloat(i[4])),"y"===t&&(n=Z.WebKitCSSMatrix?r.m42:16===i.length?parseFloat(i[13]):parseFloat(i[5])),n||0},parseUrlQuery:function(e){var t,i,n,r,a={},s=e||Z.location.href;if("string"==typeof s&&s.length)for(r=(i=(s=-1<s.indexOf("?")?s.replace(/\S*\?/,""):"").split("&").filter(function(e){return""!==e})).length,t=0;t<r;t+=1)n=i[t].replace(/#\S+/g,"").split("="),a[decodeURIComponent(n[0])]=void 0===n[1]?void 0:decodeURIComponent(n[1])||"";return a},isObject:function(e){return"object"==typeof e&&null!==e&&e.constructor&&e.constructor===Object},extend:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var i=Object(e[0]),n=1;n<e.length;n+=1){var r=e[n];if(null!=r)for(var a=Object.keys(Object(r)),s=0,o=a.length;s<o;s+=1){var l=a[s],d=Object.getOwnPropertyDescriptor(r,l);void 0!==d&&d.enumerable&&(ee.isObject(i[l])&&ee.isObject(r[l])?ee.extend(i[l],r[l]):!ee.isObject(i[l])&&ee.isObject(r[l])?(i[l]={},ee.extend(i[l],r[l])):i[l]=r[l])}}return i}},te=(r=v.createElement("div"),{touch:Z.Modernizr&&!0===Z.Modernizr.touch||!!(0<Z.navigator.maxTouchPoints||"ontouchstart"in Z||Z.DocumentTouch&&v instanceof Z.DocumentTouch),pointerEvents:!!(Z.navigator.pointerEnabled||Z.PointerEvent||"maxTouchPoints"in Z.navigator&&0<Z.navigator.maxTouchPoints),prefixedPointerEvents:!!Z.navigator.msPointerEnabled,transition:(n=r.style,"transition"in n||"webkitTransition"in n||"MozTransition"in n),transforms3d:Z.Modernizr&&!0===Z.Modernizr.csstransforms3d||(i=r.style,"webkitPerspective"in i||"MozPerspective"in i||"OPerspective"in i||"MsPerspective"in i||"perspective"in i),flexbox:function(){for(var e=r.style,t="alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient".split(" "),i=0;i<t.length;i+=1)if(t[i]in e)return!0;return!1}(),observer:"MutationObserver"in Z||"WebkitMutationObserver"in Z,passiveListener:function(){var e=!1;try{var t=Object.defineProperty({},"passive",{get:function(){e=!0}});Z.addEventListener("testPassiveListener",null,t)}catch(e){}return e}(),gestures:"ongesturestart"in Z}),z={isIE:!!Z.navigator.userAgent.match(/Trident/g)||!!Z.navigator.userAgent.match(/MSIE/g),isEdge:!!Z.navigator.userAgent.match(/Edge/g),isSafari:(s=Z.navigator.userAgent.toLowerCase(),0<=s.indexOf("safari")&&s.indexOf("chrome")<0&&s.indexOf("android")<0),isUiWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(Z.navigator.userAgent)},o={components:{configurable:!0}};e.prototype.on=function(e,t,i){var n=this;if("function"!=typeof t)return n;var r=i?"unshift":"push";return e.split(" ").forEach(function(e){n.eventsListeners[e]||(n.eventsListeners[e]=[]),n.eventsListeners[e][r](t)}),n},e.prototype.once=function(i,n,e){var r=this;if("function"!=typeof n)return r;function a(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];n.apply(r,e),r.off(i,a),a.f7proxy&&delete a.f7proxy}return a.f7proxy=n,r.on(i,a,e)},e.prototype.off=function(e,n){var r=this;return r.eventsListeners&&e.split(" ").forEach(function(i){void 0===n?r.eventsListeners[i]=[]:r.eventsListeners[i]&&r.eventsListeners[i].length&&r.eventsListeners[i].forEach(function(e,t){(e===n||e.f7proxy&&e.f7proxy===n)&&r.eventsListeners[i].splice(t,1)})}),r},e.prototype.emit=function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,n,r,a=this;return a.eventsListeners&&(r="string"==typeof e[0]||Array.isArray(e[0])?(i=e[0],n=e.slice(1,e.length),a):(i=e[0].events,n=e[0].data,e[0].context||a),(Array.isArray(i)?i:i.split(" ")).forEach(function(e){if(a.eventsListeners&&a.eventsListeners[e]){var t=[];a.eventsListeners[e].forEach(function(e){t.push(e)}),t.forEach(function(e){e.apply(r,n)})}})),a},e.prototype.useModulesParams=function(i){var n=this;n.modules&&Object.keys(n.modules).forEach(function(e){var t=n.modules[e];t.params&&ee.extend(i,t.params)})},e.prototype.useModules=function(n){void 0===n&&(n={});var r=this;r.modules&&Object.keys(r.modules).forEach(function(e){var i=r.modules[e],t=n[e]||{};i.instance&&Object.keys(i.instance).forEach(function(e){var t=i.instance[e];r[e]="function"==typeof t?t.bind(r):t}),i.on&&r.on&&Object.keys(i.on).forEach(function(e){r.on(e,i.on[e])}),i.create&&i.create.bind(r)(t)})},o.components.set=function(e){this.use&&this.use(e)},e.installModule=function(t){for(var e=[],i=arguments.length-1;0<i--;)e[i]=arguments[i+1];var n=this;n.prototype.modules||(n.prototype.modules={});var r=t.name||Object.keys(n.prototype.modules).length+"_"+ee.now();return(n.prototype.modules[r]=t).proto&&Object.keys(t.proto).forEach(function(e){n.prototype[e]=t.proto[e]}),t.static&&Object.keys(t.static).forEach(function(e){n[e]=t.static[e]}),t.install&&t.install.apply(n,e),n},e.use=function(e){for(var t=[],i=arguments.length-1;0<i--;)t[i]=arguments[i+1];var n=this;return Array.isArray(e)?(e.forEach(function(e){return n.installModule(e)}),n):n.installModule.apply(n,[e].concat(t))},Object.defineProperties(e,o);var d={updateSize:function(){var e,t,i=this,n=i.$el;e=void 0!==i.params.width?i.params.width:n[0].clientWidth,t=void 0!==i.params.height?i.params.height:n[0].clientHeight,0===e&&i.isHorizontal()||0===t&&i.isVertical()||(e=e-parseInt(n.css("padding-left"),10)-parseInt(n.css("padding-right"),10),t=t-parseInt(n.css("padding-top"),10)-parseInt(n.css("padding-bottom"),10),ee.extend(i,{width:e,height:t,size:i.isHorizontal()?e:t}))},updateSlides:function(){var e=this,t=e.params,i=e.$wrapperEl,n=e.size,r=e.rtlTranslate,a=e.wrongRTL,s=e.virtual&&t.virtual.enabled,o=s?e.virtual.slides.length:e.slides.length,l=i.children("."+e.params.slideClass),d=s?e.virtual.slides.length:l.length,u=[],c=[],p=[],h=t.slidesOffsetBefore;"function"==typeof h&&(h=t.slidesOffsetBefore.call(e));var f=t.slidesOffsetAfter;"function"==typeof f&&(f=t.slidesOffsetAfter.call(e));var v=e.snapGrid.length,m=e.snapGrid.length,g=t.spaceBetween,y=-h,b=0,x=0;if(void 0!==n){var w,T;"string"==typeof g&&0<=g.indexOf("%")&&(g=parseFloat(g.replace("%",""))/100*n),e.virtualSize=-g,r?l.css({marginLeft:"",marginTop:""}):l.css({marginRight:"",marginBottom:""}),1<t.slidesPerColumn&&(w=Math.floor(d/t.slidesPerColumn)===d/e.params.slidesPerColumn?d:Math.ceil(d/t.slidesPerColumn)*t.slidesPerColumn,"auto"!==t.slidesPerView&&"row"===t.slidesPerColumnFill&&(w=Math.max(w,t.slidesPerView*t.slidesPerColumn)));for(var E,C=t.slidesPerColumn,S=w/C,k=Math.floor(d/t.slidesPerColumn),M=0;M<d;M+=1){T=0;var P=l.eq(M);if(1<t.slidesPerColumn){var D=void 0,L=void 0,$=void 0;"column"===t.slidesPerColumnFill?($=M-(L=Math.floor(M/C))*C,(k<L||L===k&&$===C-1)&&C<=($+=1)&&($=0,L+=1),D=L+$*w/C,P.css({"-webkit-box-ordinal-group":D,"-moz-box-ordinal-group":D,"-ms-flex-order":D,"-webkit-order":D,order:D})):L=M-($=Math.floor(M/S))*S,P.css("margin-"+(e.isHorizontal()?"top":"left"),0!==$&&t.spaceBetween&&t.spaceBetween+"px").attr("data-swiper-column",L).attr("data-swiper-row",$)}if("none"!==P.css("display")){if("auto"===t.slidesPerView){var z=Z.getComputedStyle(P[0],null),A=P[0].style.transform,I=P[0].style.webkitTransform;if(A&&(P[0].style.transform="none"),I&&(P[0].style.webkitTransform="none"),t.roundLengths)T=e.isHorizontal()?P.outerWidth(!0):P.outerHeight(!0);else if(e.isHorizontal()){var N=parseFloat(z.getPropertyValue("width")),O=parseFloat(z.getPropertyValue("padding-left")),H=parseFloat(z.getPropertyValue("padding-right")),j=parseFloat(z.getPropertyValue("margin-left")),q=parseFloat(z.getPropertyValue("margin-right")),B=z.getPropertyValue("box-sizing");T=B&&"border-box"===B?N+j+q:N+O+H+j+q}else{var R=parseFloat(z.getPropertyValue("height")),X=parseFloat(z.getPropertyValue("padding-top")),F=parseFloat(z.getPropertyValue("padding-bottom")),V=parseFloat(z.getPropertyValue("margin-top")),G=parseFloat(z.getPropertyValue("margin-bottom")),W=z.getPropertyValue("box-sizing");T=W&&"border-box"===W?R+V+G:R+X+F+V+G}A&&(P[0].style.transform=A),I&&(P[0].style.webkitTransform=I),t.roundLengths&&(T=Math.floor(T))}else T=(n-(t.slidesPerView-1)*g)/t.slidesPerView,t.roundLengths&&(T=Math.floor(T)),l[M]&&(e.isHorizontal()?l[M].style.width=T+"px":l[M].style.height=T+"px");l[M]&&(l[M].swiperSlideSize=T),p.push(T),t.centeredSlides?(y=y+T/2+b/2+g,0===b&&0!==M&&(y=y-n/2-g),0===M&&(y=y-n/2-g),Math.abs(y)<.001&&(y=0),t.roundLengths&&(y=Math.floor(y)),x%t.slidesPerGroup==0&&u.push(y),c.push(y)):(t.roundLengths&&(y=Math.floor(y)),x%t.slidesPerGroup==0&&u.push(y),c.push(y),y=y+T+g),e.virtualSize+=T+g,b=T,x+=1}}if(e.virtualSize=Math.max(e.virtualSize,n)+f,r&&a&&("slide"===t.effect||"coverflow"===t.effect)&&i.css({width:e.virtualSize+t.spaceBetween+"px"}),te.flexbox&&!t.setWrapperSize||(e.isHorizontal()?i.css({width:e.virtualSize+t.spaceBetween+"px"}):i.css({height:e.virtualSize+t.spaceBetween+"px"})),1<t.slidesPerColumn&&(e.virtualSize=(T+t.spaceBetween)*w,e.virtualSize=Math.ceil(e.virtualSize/t.slidesPerColumn)-t.spaceBetween,e.isHorizontal()?i.css({width:e.virtualSize+t.spaceBetween+"px"}):i.css({height:e.virtualSize+t.spaceBetween+"px"}),t.centeredSlides)){E=[];for(var Y=0;Y<u.length;Y+=1){var _=u[Y];t.roundLengths&&(_=Math.floor(_)),u[Y]<e.virtualSize+u[0]&&E.push(_)}u=E}if(!t.centeredSlides){E=[];for(var U=0;U<u.length;U+=1){var K=u[U];t.roundLengths&&(K=Math.floor(K)),u[U]<=e.virtualSize-n&&E.push(K)}u=E,1<Math.floor(e.virtualSize-n)-Math.floor(u[u.length-1])&&u.push(e.virtualSize-n)}if(0===u.length&&(u=[0]),0!==t.spaceBetween&&(e.isHorizontal()?r?l.css({marginLeft:g+"px"}):l.css({marginRight:g+"px"}):l.css({marginBottom:g+"px"})),t.centerInsufficientSlides){var Q=0;if(p.forEach(function(e){Q+=e+(t.spaceBetween?t.spaceBetween:0)}),(Q-=t.spaceBetween)<n){var J=(n-Q)/2;u.forEach(function(e,t){u[t]=e-J}),c.forEach(function(e,t){c[t]=e+J})}}ee.extend(e,{slides:l,snapGrid:u,slidesGrid:c,slidesSizesGrid:p}),d!==o&&e.emit("slidesLengthChange"),u.length!==v&&(e.params.watchOverflow&&e.checkOverflow(),e.emit("snapGridLengthChange")),c.length!==m&&e.emit("slidesGridLengthChange"),(t.watchSlidesProgress||t.watchSlidesVisibility)&&e.updateSlidesOffset()}},updateAutoHeight:function(e){var t,i=this,n=[],r=0;if("number"==typeof e?i.setTransition(e):!0===e&&i.setTransition(i.params.speed),"auto"!==i.params.slidesPerView&&1<i.params.slidesPerView)for(t=0;t<Math.ceil(i.params.slidesPerView);t+=1){var a=i.activeIndex+t;if(a>i.slides.length)break;n.push(i.slides.eq(a)[0])}else n.push(i.slides.eq(i.activeIndex)[0]);for(t=0;t<n.length;t+=1)if(void 0!==n[t]){var s=n[t].offsetHeight;r=r<s?s:r}r&&i.$wrapperEl.css("height",r+"px")},updateSlidesOffset:function(){for(var e=this.slides,t=0;t<e.length;t+=1)e[t].swiperSlideOffset=this.isHorizontal()?e[t].offsetLeft:e[t].offsetTop},updateSlidesProgress:function(e){void 0===e&&(e=this&&this.translate||0);var t=this,i=t.params,n=t.slides,r=t.rtlTranslate;if(0!==n.length){void 0===n[0].swiperSlideOffset&&t.updateSlidesOffset();var a=-e;r&&(a=e),n.removeClass(i.slideVisibleClass),t.visibleSlidesIndexes=[],t.visibleSlides=[];for(var s=0;s<n.length;s+=1){var o=n[s],l=(a+(i.centeredSlides?t.minTranslate():0)-o.swiperSlideOffset)/(o.swiperSlideSize+i.spaceBetween);if(i.watchSlidesVisibility){var d=-(a-o.swiperSlideOffset),u=d+t.slidesSizesGrid[s];(0<=d&&d<t.size||0<u&&u<=t.size||d<=0&&u>=t.size)&&(t.visibleSlides.push(o),t.visibleSlidesIndexes.push(s),n.eq(s).addClass(i.slideVisibleClass))}o.progress=r?-l:l}t.visibleSlides=$(t.visibleSlides)}},updateProgress:function(e){void 0===e&&(e=this&&this.translate||0);var t=this,i=t.params,n=t.maxTranslate()-t.minTranslate(),r=t.progress,a=t.isBeginning,s=t.isEnd,o=a,l=s;s=0==n?a=!(r=0):(a=(r=(e-t.minTranslate())/n)<=0,1<=r),ee.extend(t,{progress:r,isBeginning:a,isEnd:s}),(i.watchSlidesProgress||i.watchSlidesVisibility)&&t.updateSlidesProgress(e),a&&!o&&t.emit("reachBeginning toEdge"),s&&!l&&t.emit("reachEnd toEdge"),(o&&!a||l&&!s)&&t.emit("fromEdge"),t.emit("progress",r)},updateSlidesClasses:function(){var e,t=this,i=t.slides,n=t.params,r=t.$wrapperEl,a=t.activeIndex,s=t.realIndex,o=t.virtual&&n.virtual.enabled;i.removeClass(n.slideActiveClass+" "+n.slideNextClass+" "+n.slidePrevClass+" "+n.slideDuplicateActiveClass+" "+n.slideDuplicateNextClass+" "+n.slideDuplicatePrevClass),(e=o?t.$wrapperEl.find("."+n.slideClass+'[data-swiper-slide-index="'+a+'"]'):i.eq(a)).addClass(n.slideActiveClass),n.loop&&(e.hasClass(n.slideDuplicateClass)?r.children("."+n.slideClass+":not(."+n.slideDuplicateClass+')[data-swiper-slide-index="'+s+'"]').addClass(n.slideDuplicateActiveClass):r.children("."+n.slideClass+"."+n.slideDuplicateClass+'[data-swiper-slide-index="'+s+'"]').addClass(n.slideDuplicateActiveClass));var l=e.nextAll("."+n.slideClass).eq(0).addClass(n.slideNextClass);n.loop&&0===l.length&&(l=i.eq(0)).addClass(n.slideNextClass);var d=e.prevAll("."+n.slideClass).eq(0).addClass(n.slidePrevClass);n.loop&&0===d.length&&(d=i.eq(-1)).addClass(n.slidePrevClass),n.loop&&(l.hasClass(n.slideDuplicateClass)?r.children("."+n.slideClass+":not(."+n.slideDuplicateClass+')[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(n.slideDuplicateNextClass):r.children("."+n.slideClass+"."+n.slideDuplicateClass+'[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(n.slideDuplicateNextClass),d.hasClass(n.slideDuplicateClass)?r.children("."+n.slideClass+":not(."+n.slideDuplicateClass+')[data-swiper-slide-index="'+d.attr("data-swiper-slide-index")+'"]').addClass(n.slideDuplicatePrevClass):r.children("."+n.slideClass+"."+n.slideDuplicateClass+'[data-swiper-slide-index="'+d.attr("data-swiper-slide-index")+'"]').addClass(n.slideDuplicatePrevClass))},updateActiveIndex:function(e){var t,i=this,n=i.rtlTranslate?i.translate:-i.translate,r=i.slidesGrid,a=i.snapGrid,s=i.params,o=i.activeIndex,l=i.realIndex,d=i.snapIndex,u=e;if(void 0===u){for(var c=0;c<r.length;c+=1)void 0!==r[c+1]?n>=r[c]&&n<r[c+1]-(r[c+1]-r[c])/2?u=c:n>=r[c]&&n<r[c+1]&&(u=c+1):n>=r[c]&&(u=c);s.normalizeSlideIndex&&(u<0||void 0===u)&&(u=0)}if((t=0<=a.indexOf(n)?a.indexOf(n):Math.floor(u/s.slidesPerGroup))>=a.length&&(t=a.length-1),u!==o){var p=parseInt(i.slides.eq(u).attr("data-swiper-slide-index")||u,10);ee.extend(i,{snapIndex:t,realIndex:p,previousIndex:o,activeIndex:u}),i.emit("activeIndexChange"),i.emit("snapIndexChange"),l!==p&&i.emit("realIndexChange"),i.emit("slideChange")}else t!==d&&(i.snapIndex=t,i.emit("snapIndexChange"))},updateClickedSlide:function(e){var t=this,i=t.params,n=$(e.target).closest("."+i.slideClass)[0],r=!1;if(n)for(var a=0;a<t.slides.length;a+=1)t.slides[a]===n&&(r=!0);if(!n||!r)return t.clickedSlide=void 0,void(t.clickedIndex=void 0);t.clickedSlide=n,t.virtual&&t.params.virtual.enabled?t.clickedIndex=parseInt($(n).attr("data-swiper-slide-index"),10):t.clickedIndex=$(n).index(),i.slideToClickedSlide&&void 0!==t.clickedIndex&&t.clickedIndex!==t.activeIndex&&t.slideToClickedSlide()}},u={getTranslate:function(e){void 0===e&&(e=this.isHorizontal()?"x":"y");var t=this.params,i=this.rtlTranslate,n=this.translate,r=this.$wrapperEl;if(t.virtualTranslate)return i?-n:n;var a=ee.getTranslate(r[0],e);return i&&(a=-a),a||0},setTranslate:function(e,t){var i=this,n=i.rtlTranslate,r=i.params,a=i.$wrapperEl,s=i.progress,o=0,l=0;i.isHorizontal()?o=n?-e:e:l=e,r.roundLengths&&(o=Math.floor(o),l=Math.floor(l)),r.virtualTranslate||(te.transforms3d?a.transform("translate3d("+o+"px, "+l+"px, 0px)"):a.transform("translate("+o+"px, "+l+"px)")),i.previousTranslate=i.translate,i.translate=i.isHorizontal()?o:l;var d=i.maxTranslate()-i.minTranslate();(0==d?0:(e-i.minTranslate())/d)!==s&&i.updateProgress(e),i.emit("setTranslate",i.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]}},c={slideTo:function(e,t,i,n){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var r=this,a=e;a<0&&(a=0);var s=r.params,o=r.snapGrid,l=r.slidesGrid,d=r.previousIndex,u=r.activeIndex,c=r.rtlTranslate;if(r.animating&&s.preventInteractionOnTransition)return!1;var p=Math.floor(a/s.slidesPerGroup);p>=o.length&&(p=o.length-1),(u||s.initialSlide||0)===(d||0)&&i&&r.emit("beforeSlideChangeStart");var h,f=-o[p];if(r.updateProgress(f),s.normalizeSlideIndex)for(var v=0;v<l.length;v+=1)-Math.floor(100*f)>=Math.floor(100*l[v])&&(a=v);if(r.initialized&&a!==u){if(!r.allowSlideNext&&f<r.translate&&f<r.minTranslate())return!1;if(!r.allowSlidePrev&&f>r.translate&&f>r.maxTranslate()&&(u||0)!==a)return!1}return h=u<a?"next":a<u?"prev":"reset",c&&-f===r.translate||!c&&f===r.translate?(r.updateActiveIndex(a),s.autoHeight&&r.updateAutoHeight(),r.updateSlidesClasses(),"slide"!==s.effect&&r.setTranslate(f),"reset"!=h&&(r.transitionStart(i,h),r.transitionEnd(i,h)),!1):(0!==t&&te.transition?(r.setTransition(t),r.setTranslate(f),r.updateActiveIndex(a),r.updateSlidesClasses(),r.emit("beforeTransitionStart",t,n),r.transitionStart(i,h),r.animating||(r.animating=!0,r.onSlideToWrapperTransitionEnd||(r.onSlideToWrapperTransitionEnd=function(e){r&&!r.destroyed&&e.target===this&&(r.$wrapperEl[0].removeEventListener("transitionend",r.onSlideToWrapperTransitionEnd),r.$wrapperEl[0].removeEventListener("webkitTransitionEnd",r.onSlideToWrapperTransitionEnd),r.onSlideToWrapperTransitionEnd=null,delete r.onSlideToWrapperTransitionEnd,r.transitionEnd(i,h))}),r.$wrapperEl[0].addEventListener("transitionend",r.onSlideToWrapperTransitionEnd),r.$wrapperEl[0].addEventListener("webkitTransitionEnd",r.onSlideToWrapperTransitionEnd))):(r.setTransition(0),r.setTranslate(f),r.updateActiveIndex(a),r.updateSlidesClasses(),r.emit("beforeTransitionStart",t,n),r.transitionStart(i,h),r.transitionEnd(i,h)),!0)},slideToLoop:function(e,t,i,n){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var r=e;return this.params.loop&&(r+=this.loopedSlides),this.slideTo(r,t,i,n)},slideNext:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var n=this,r=n.params,a=n.animating;return r.loop?!a&&(n.loopFix(),n._clientLeft=n.$wrapperEl[0].clientLeft,n.slideTo(n.activeIndex+r.slidesPerGroup,e,t,i)):n.slideTo(n.activeIndex+r.slidesPerGroup,e,t,i)},slidePrev:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var n=this,r=n.params,a=n.animating,s=n.snapGrid,o=n.slidesGrid,l=n.rtlTranslate;if(r.loop){if(a)return!1;n.loopFix(),n._clientLeft=n.$wrapperEl[0].clientLeft}function d(e){return e<0?-Math.floor(Math.abs(e)):Math.floor(e)}var u,c=d(l?n.translate:-n.translate),p=s.map(function(e){return d(e)}),h=(o.map(function(e){return d(e)}),s[p.indexOf(c)],s[p.indexOf(c)-1]);return void 0!==h&&(u=o.indexOf(h))<0&&(u=n.activeIndex-1),n.slideTo(u,e,t,i)},slideReset:function(e,t,i){return void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),this.slideTo(this.activeIndex,e,t,i)},slideToClosest:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var n=this,r=n.activeIndex,a=Math.floor(r/n.params.slidesPerGroup);if(a<n.snapGrid.length-1){var s=n.rtlTranslate?n.translate:-n.translate,o=n.snapGrid[a];(n.snapGrid[a+1]-o)/2<s-o&&(r=n.params.slidesPerGroup)}return n.slideTo(r,e,t,i)},slideToClickedSlide:function(){var e,t=this,i=t.params,n=t.$wrapperEl,r="auto"===i.slidesPerView?t.slidesPerViewDynamic():i.slidesPerView,a=t.clickedIndex;if(i.loop){if(t.animating)return;e=parseInt($(t.clickedSlide).attr("data-swiper-slide-index"),10),i.centeredSlides?a<t.loopedSlides-r/2||a>t.slides.length-t.loopedSlides+r/2?(t.loopFix(),a=n.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),ee.nextTick(function(){t.slideTo(a)})):t.slideTo(a):a>t.slides.length-r?(t.loopFix(),a=n.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),ee.nextTick(function(){t.slideTo(a)})):t.slideTo(a)}else t.slideTo(a)}},p={loopCreate:function(){var n=this,e=n.params,t=n.$wrapperEl;t.children("."+e.slideClass+"."+e.slideDuplicateClass).remove();var r=t.children("."+e.slideClass);if(e.loopFillGroupWithBlank){var i=e.slidesPerGroup-r.length%e.slidesPerGroup;if(i!==e.slidesPerGroup){for(var a=0;a<i;a+=1){var s=$(v.createElement("div")).addClass(e.slideClass+" "+e.slideBlankClass);t.append(s)}r=t.children("."+e.slideClass)}}"auto"!==e.slidesPerView||e.loopedSlides||(e.loopedSlides=r.length),n.loopedSlides=parseInt(e.loopedSlides||e.slidesPerView,10),n.loopedSlides+=e.loopAdditionalSlides,n.loopedSlides>r.length&&(n.loopedSlides=r.length);var o=[],l=[];r.each(function(e,t){var i=$(t);e<n.loopedSlides&&l.push(t),e<r.length&&e>=r.length-n.loopedSlides&&o.push(t),i.attr("data-swiper-slide-index",e)});for(var d=0;d<l.length;d+=1)t.append($(l[d].cloneNode(!0)).addClass(e.slideDuplicateClass));for(var u=o.length-1;0<=u;u-=1)t.prepend($(o[u].cloneNode(!0)).addClass(e.slideDuplicateClass))},loopFix:function(){var e,t=this,i=t.params,n=t.activeIndex,r=t.slides,a=t.loopedSlides,s=t.allowSlidePrev,o=t.allowSlideNext,l=t.snapGrid,d=t.rtlTranslate;t.allowSlidePrev=!0,t.allowSlideNext=!0;var u=-l[n]-t.getTranslate();n<a?(e=r.length-3*a+n,e+=a,t.slideTo(e,0,!1,!0)&&0!=u&&t.setTranslate((d?-t.translate:t.translate)-u)):("auto"===i.slidesPerView&&2*a<=n||n>=r.length-a)&&(e=-r.length+n+a,e+=a,t.slideTo(e,0,!1,!0)&&0!=u&&t.setTranslate((d?-t.translate:t.translate)-u)),t.allowSlidePrev=s,t.allowSlideNext=o},loopDestroy:function(){var e=this.$wrapperEl,t=this.params,i=this.slides;e.children("."+t.slideClass+"."+t.slideDuplicateClass+",."+t.slideClass+"."+t.slideBlankClass).remove(),i.removeAttr("data-swiper-slide-index")}},h={setGrabCursor:function(e){if(!(te.touch||!this.params.simulateTouch||this.params.watchOverflow&&this.isLocked)){var t=this.el;t.style.cursor="move",t.style.cursor=e?"-webkit-grabbing":"-webkit-grab",t.style.cursor=e?"-moz-grabbin":"-moz-grab",t.style.cursor=e?"grabbing":"grab"}},unsetGrabCursor:function(){te.touch||this.params.watchOverflow&&this.isLocked||(this.el.style.cursor="")}},f={appendSlide:function(e){var t=this,i=t.$wrapperEl,n=t.params;if(n.loop&&t.loopDestroy(),"object"==typeof e&&"length"in e)for(var r=0;r<e.length;r+=1)e[r]&&i.append(e[r]);else i.append(e);n.loop&&t.loopCreate(),n.observer&&te.observer||t.update()},prependSlide:function(e){var t=this,i=t.params,n=t.$wrapperEl,r=t.activeIndex;i.loop&&t.loopDestroy();var a=r+1;if("object"==typeof e&&"length"in e){for(var s=0;s<e.length;s+=1)e[s]&&n.prepend(e[s]);a=r+e.length}else n.prepend(e);i.loop&&t.loopCreate(),i.observer&&te.observer||t.update(),t.slideTo(a,0,!1)},addSlide:function(e,t){var i=this,n=i.$wrapperEl,r=i.params,a=i.activeIndex;r.loop&&(a-=i.loopedSlides,i.loopDestroy(),i.slides=n.children("."+r.slideClass));var s=i.slides.length;if(e<=0)i.prependSlide(t);else if(s<=e)i.appendSlide(t);else{for(var o=e<a?a+1:a,l=[],d=s-1;e<=d;d-=1){var u=i.slides.eq(d);u.remove(),l.unshift(u)}if("object"==typeof t&&"length"in t){for(var c=0;c<t.length;c+=1)t[c]&&n.append(t[c]);o=e<a?a+t.length:a}else n.append(t);for(var p=0;p<l.length;p+=1)n.append(l[p]);r.loop&&i.loopCreate(),r.observer&&te.observer||i.update(),r.loop?i.slideTo(o+i.loopedSlides,0,!1):i.slideTo(o,0,!1)}},removeSlide:function(e){var t=this,i=t.params,n=t.$wrapperEl,r=t.activeIndex;i.loop&&(r-=t.loopedSlides,t.loopDestroy(),t.slides=n.children("."+i.slideClass));var a,s=r;if("object"==typeof e&&"length"in e){for(var o=0;o<e.length;o+=1)a=e[o],t.slides[a]&&t.slides.eq(a).remove(),a<s&&(s-=1);s=Math.max(s,0)}else a=e,t.slides[a]&&t.slides.eq(a).remove(),a<s&&(s-=1),s=Math.max(s,0);i.loop&&t.loopCreate(),i.observer&&te.observer||t.update(),i.loop?t.slideTo(s+t.loopedSlides,0,!1):t.slideTo(s,0,!1)},removeAllSlides:function(){for(var e=[],t=0;t<this.slides.length;t+=1)e.push(t);this.removeSlide(e)}},m=function(){var e=Z.navigator.userAgent,t={ios:!1,android:!1,androidChrome:!1,desktop:!1,windows:!1,iphone:!1,ipod:!1,ipad:!1,cordova:Z.cordova||Z.phonegap,phonegap:Z.cordova||Z.phonegap},i=e.match(/(Windows Phone);?[\s\/]+([\d.]+)?/),n=e.match(/(Android);?[\s\/]+([\d.]+)?/),r=e.match(/(iPad).*OS\s([\d_]+)/),a=e.match(/(iPod)(.*OS\s([\d_]+))?/),s=!r&&e.match(/(iPhone\sOS|iOS)\s([\d_]+)/);if(i&&(t.os="windows",t.osVersion=i[2],t.windows=!0),n&&!i&&(t.os="android",t.osVersion=n[2],t.android=!0,t.androidChrome=0<=e.toLowerCase().indexOf("chrome")),(r||s||a)&&(t.os="ios",t.ios=!0),s&&!a&&(t.osVersion=s[2].replace(/_/g,"."),t.iphone=!0),r&&(t.osVersion=r[2].replace(/_/g,"."),t.ipad=!0),a&&(t.osVersion=a[3]?a[3].replace(/_/g,"."):null,t.iphone=!0),t.ios&&t.osVersion&&0<=e.indexOf("Version/")&&"10"===t.osVersion.split(".")[0]&&(t.osVersion=e.toLowerCase().split("version/")[1].split(" ")[0]),t.desktop=!(t.os||t.android||t.webView),t.webView=(s||r||a)&&e.match(/.*AppleWebKit(?!.*Safari)/i),t.os&&"ios"===t.os){var o=t.osVersion.split("."),l=v.querySelector('meta[name="viewport"]');t.minimalUi=!t.webView&&(a||s)&&(1*o[0]==7?1<=1*o[1]:7<1*o[0])&&l&&0<=l.getAttribute("content").indexOf("minimal-ui")}return t.pixelRatio=Z.devicePixelRatio||1,t}();function g(){var e=this,t=e.params,i=e.el;if(!i||0!==i.offsetWidth){t.breakpoints&&e.setBreakpoint();var n=e.allowSlideNext,r=e.allowSlidePrev,a=e.snapGrid;if(e.allowSlideNext=!0,e.allowSlidePrev=!0,e.updateSize(),e.updateSlides(),t.freeMode){var s=Math.min(Math.max(e.translate,e.maxTranslate()),e.minTranslate());e.setTranslate(s),e.updateActiveIndex(),e.updateSlidesClasses(),t.autoHeight&&e.updateAutoHeight()}else e.updateSlidesClasses(),("auto"===t.slidesPerView||1<t.slidesPerView)&&e.isEnd&&!e.params.centeredSlides?e.slideTo(e.slides.length-1,0,!1,!0):e.slideTo(e.activeIndex,0,!1,!0);e.allowSlidePrev=r,e.allowSlideNext=n,e.params.watchOverflow&&a!==e.snapGrid&&e.checkOverflow()}}var y={init:!0,direction:"horizontal",touchEventsTarget:"container",initialSlide:0,speed:300,preventInteractionOnTransition:!1,edgeSwipeDetection:!1,edgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeMomentumVelocityRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,breakpointsInverse:!1,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:"column",slidesPerGroup:1,centeredSlides:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,centerInsufficientSlides:!1,watchOverflow:!1,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:0,touchMoveStopPropagation:!0,touchStartPreventDefault:!0,touchStartForcePreventDefault:!1,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,loopFillGroupWithBlank:!1,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",noSwipingSelector:null,passiveListeners:!0,containerModifierClass:"swiper-container-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-invisible-blank",slideActiveClass:"swiper-slide-active",slideDuplicateActiveClass:"swiper-slide-duplicate-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slideDuplicateNextClass:"swiper-slide-duplicate-next",slidePrevClass:"swiper-slide-prev",slideDuplicatePrevClass:"swiper-slide-duplicate-prev",wrapperClass:"swiper-wrapper",runCallbacksOnInit:!0},b={update:d,translate:u,transition:{setTransition:function(e,t){this.$wrapperEl.transition(e),this.emit("setTransition",e,t)},transitionStart:function(e,t){void 0===e&&(e=!0);var i=this,n=i.activeIndex,r=i.params,a=i.previousIndex;r.autoHeight&&i.updateAutoHeight();var s=t;if(s=s||(a<n?"next":n<a?"prev":"reset"),i.emit("transitionStart"),e&&n!==a){if("reset"===s)return void i.emit("slideResetTransitionStart");i.emit("slideChangeTransitionStart"),"next"===s?i.emit("slideNextTransitionStart"):i.emit("slidePrevTransitionStart")}},transitionEnd:function(e,t){void 0===e&&(e=!0);var i=this,n=i.activeIndex,r=i.previousIndex;i.animating=!1,i.setTransition(0);var a=t;if(a=a||(r<n?"next":n<r?"prev":"reset"),i.emit("transitionEnd"),e&&n!==r){if("reset"===a)return void i.emit("slideResetTransitionEnd");i.emit("slideChangeTransitionEnd"),"next"===a?i.emit("slideNextTransitionEnd"):i.emit("slidePrevTransitionEnd")}}},slide:c,loop:p,grabCursor:h,manipulation:f,events:{attachEvents:function(){var e=this,t=e.params,i=e.touchEvents,n=e.el,r=e.wrapperEl;e.onTouchStart=function(e){var t=this,i=t.touchEventsData,n=t.params,r=t.touches;if(!t.animating||!n.preventInteractionOnTransition){var a=e;if(a.originalEvent&&(a=a.originalEvent),i.isTouchEvent="touchstart"===a.type,(i.isTouchEvent||!("which"in a)||3!==a.which)&&!(!i.isTouchEvent&&"button"in a&&0<a.button||i.isTouched&&i.isMoved))if(n.noSwiping&&$(a.target).closest(n.noSwipingSelector?n.noSwipingSelector:"."+n.noSwipingClass)[0])t.allowClick=!0;else if(!n.swipeHandler||$(a).closest(n.swipeHandler)[0]){r.currentX="touchstart"===a.type?a.targetTouches[0].pageX:a.pageX,r.currentY="touchstart"===a.type?a.targetTouches[0].pageY:a.pageY;var s=r.currentX,o=r.currentY,l=n.edgeSwipeDetection||n.iOSEdgeSwipeDetection,d=n.edgeSwipeThreshold||n.iOSEdgeSwipeThreshold;if(!l||!(s<=d||s>=Z.screen.width-d)){if(ee.extend(i,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),r.startX=s,r.startY=o,i.touchStartTime=ee.now(),t.allowClick=!0,t.updateSize(),t.swipeDirection=void 0,0<n.threshold&&(i.allowThresholdMove=!1),"touchstart"!==a.type){var u=!0;$(a.target).is(i.formElements)&&(u=!1),v.activeElement&&$(v.activeElement).is(i.formElements)&&v.activeElement!==a.target&&v.activeElement.blur();var c=u&&t.allowTouchMove&&n.touchStartPreventDefault;(n.touchStartForcePreventDefault||c)&&a.preventDefault()}t.emit("touchStart",a)}}}}.bind(e),e.onTouchMove=function(e){var t=this,i=t.touchEventsData,n=t.params,r=t.touches,a=t.rtlTranslate,s=e;if(s.originalEvent&&(s=s.originalEvent),i.isTouched){if(!i.isTouchEvent||"mousemove"!==s.type){var o="touchmove"===s.type?s.targetTouches[0].pageX:s.pageX,l="touchmove"===s.type?s.targetTouches[0].pageY:s.pageY;if(s.preventedByNestedSwiper)return r.startX=o,void(r.startY=l);if(!t.allowTouchMove)return t.allowClick=!1,void(i.isTouched&&(ee.extend(r,{startX:o,startY:l,currentX:o,currentY:l}),i.touchStartTime=ee.now()));if(i.isTouchEvent&&n.touchReleaseOnEdges&&!n.loop)if(t.isVertical()){if(l<r.startY&&t.translate<=t.maxTranslate()||l>r.startY&&t.translate>=t.minTranslate())return i.isTouched=!1,void(i.isMoved=!1)}else if(o<r.startX&&t.translate<=t.maxTranslate()||o>r.startX&&t.translate>=t.minTranslate())return;if(i.isTouchEvent&&v.activeElement&&s.target===v.activeElement&&$(s.target).is(i.formElements))return i.isMoved=!0,void(t.allowClick=!1);if(i.allowTouchCallbacks&&t.emit("touchMove",s),!(s.targetTouches&&1<s.targetTouches.length)){r.currentX=o,r.currentY=l;var d,u=r.currentX-r.startX,c=r.currentY-r.startY;if(!(t.params.threshold&&Math.sqrt(Math.pow(u,2)+Math.pow(c,2))<t.params.threshold))if(void 0===i.isScrolling&&(t.isHorizontal()&&r.currentY===r.startY||t.isVertical()&&r.currentX===r.startX?i.isScrolling=!1:25<=u*u+c*c&&(d=180*Math.atan2(Math.abs(c),Math.abs(u))/Math.PI,i.isScrolling=t.isHorizontal()?d>n.touchAngle:90-d>n.touchAngle)),i.isScrolling&&t.emit("touchMoveOpposite",s),void 0===i.startMoving&&(r.currentX===r.startX&&r.currentY===r.startY||(i.startMoving=!0)),i.isScrolling)i.isTouched=!1;else if(i.startMoving){t.allowClick=!1,s.preventDefault(),n.touchMoveStopPropagation&&!n.nested&&s.stopPropagation(),i.isMoved||(n.loop&&t.loopFix(),i.startTranslate=t.getTranslate(),t.setTransition(0),t.animating&&t.$wrapperEl.trigger("webkitTransitionEnd transitionend"),i.allowMomentumBounce=!1,!n.grabCursor||!0!==t.allowSlideNext&&!0!==t.allowSlidePrev||t.setGrabCursor(!0),t.emit("sliderFirstMove",s)),t.emit("sliderMove",s),i.isMoved=!0;var p=t.isHorizontal()?u:c;r.diff=p,p*=n.touchRatio,a&&(p=-p),t.swipeDirection=0<p?"prev":"next",i.currentTranslate=p+i.startTranslate;var h=!0,f=n.resistanceRatio;if(n.touchReleaseOnEdges&&(f=0),0<p&&i.currentTranslate>t.minTranslate()?(h=!1,n.resistance&&(i.currentTranslate=t.minTranslate()-1+Math.pow(-t.minTranslate()+i.startTranslate+p,f))):p<0&&i.currentTranslate<t.maxTranslate()&&(h=!1,n.resistance&&(i.currentTranslate=t.maxTranslate()+1-Math.pow(t.maxTranslate()-i.startTranslate-p,f))),h&&(s.preventedByNestedSwiper=!0),!t.allowSlideNext&&"next"===t.swipeDirection&&i.currentTranslate<i.startTranslate&&(i.currentTranslate=i.startTranslate),!t.allowSlidePrev&&"prev"===t.swipeDirection&&i.currentTranslate>i.startTranslate&&(i.currentTranslate=i.startTranslate),0<n.threshold){if(!(Math.abs(p)>n.threshold||i.allowThresholdMove))return void(i.currentTranslate=i.startTranslate);if(!i.allowThresholdMove)return i.allowThresholdMove=!0,r.startX=r.currentX,r.startY=r.currentY,i.currentTranslate=i.startTranslate,void(r.diff=t.isHorizontal()?r.currentX-r.startX:r.currentY-r.startY)}n.followFinger&&((n.freeMode||n.watchSlidesProgress||n.watchSlidesVisibility)&&(t.updateActiveIndex(),t.updateSlidesClasses()),n.freeMode&&(0===i.velocities.length&&i.velocities.push({position:r[t.isHorizontal()?"startX":"startY"],time:i.touchStartTime}),i.velocities.push({position:r[t.isHorizontal()?"currentX":"currentY"],time:ee.now()})),t.updateProgress(i.currentTranslate),t.setTranslate(i.currentTranslate))}}}}else i.startMoving&&i.isScrolling&&t.emit("touchMoveOpposite",s)}.bind(e),e.onTouchEnd=function(e){var t=this,i=t.touchEventsData,n=t.params,r=t.touches,a=t.rtlTranslate,s=t.$wrapperEl,o=t.slidesGrid,l=t.snapGrid,d=e;if(d.originalEvent&&(d=d.originalEvent),i.allowTouchCallbacks&&t.emit("touchEnd",d),i.allowTouchCallbacks=!1,!i.isTouched)return i.isMoved&&n.grabCursor&&t.setGrabCursor(!1),i.isMoved=!1,void(i.startMoving=!1);n.grabCursor&&i.isMoved&&i.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);var u,c=ee.now(),p=c-i.touchStartTime;if(t.allowClick&&(t.updateClickedSlide(d),t.emit("tap",d),p<300&&300<c-i.lastClickTime&&(i.clickTimeout&&clearTimeout(i.clickTimeout),i.clickTimeout=ee.nextTick(function(){t&&!t.destroyed&&t.emit("click",d)},300)),p<300&&c-i.lastClickTime<300&&(i.clickTimeout&&clearTimeout(i.clickTimeout),t.emit("doubleTap",d))),i.lastClickTime=ee.now(),ee.nextTick(function(){t.destroyed||(t.allowClick=!0)}),!i.isTouched||!i.isMoved||!t.swipeDirection||0===r.diff||i.currentTranslate===i.startTranslate)return i.isTouched=!1,i.isMoved=!1,void(i.startMoving=!1);if(i.isTouched=!1,i.isMoved=!1,i.startMoving=!1,u=n.followFinger?a?t.translate:-t.translate:-i.currentTranslate,n.freeMode){if(u<-t.minTranslate())return void t.slideTo(t.activeIndex);if(u>-t.maxTranslate())return void(t.slides.length<l.length?t.slideTo(l.length-1):t.slideTo(t.slides.length-1));if(n.freeModeMomentum){if(1<i.velocities.length){var h=i.velocities.pop(),f=i.velocities.pop(),v=h.position-f.position,m=h.time-f.time;t.velocity=v/m,t.velocity/=2,Math.abs(t.velocity)<n.freeModeMinimumVelocity&&(t.velocity=0),(150<m||300<ee.now()-h.time)&&(t.velocity=0)}else t.velocity=0;t.velocity*=n.freeModeMomentumVelocityRatio,i.velocities.length=0;var g=1e3*n.freeModeMomentumRatio,y=t.velocity*g,b=t.translate+y;a&&(b=-b);var x,w,T=!1,E=20*Math.abs(t.velocity)*n.freeModeMomentumBounceRatio;if(b<t.maxTranslate())n.freeModeMomentumBounce?(b+t.maxTranslate()<-E&&(b=t.maxTranslate()-E),x=t.maxTranslate(),T=!0,i.allowMomentumBounce=!0):b=t.maxTranslate(),n.loop&&n.centeredSlides&&(w=!0);else if(b>t.minTranslate())n.freeModeMomentumBounce?(b-t.minTranslate()>E&&(b=t.minTranslate()+E),x=t.minTranslate(),T=!0,i.allowMomentumBounce=!0):b=t.minTranslate(),n.loop&&n.centeredSlides&&(w=!0);else if(n.freeModeSticky){for(var C,S=0;S<l.length;S+=1)if(l[S]>-b){C=S;break}b=-(b=Math.abs(l[C]-b)<Math.abs(l[C-1]-b)||"next"===t.swipeDirection?l[C]:l[C-1])}if(w&&t.once("transitionEnd",function(){t.loopFix()}),0!==t.velocity)g=a?Math.abs((-b-t.translate)/t.velocity):Math.abs((b-t.translate)/t.velocity);else if(n.freeModeSticky)return void t.slideToClosest();n.freeModeMomentumBounce&&T?(t.updateProgress(x),t.setTransition(g),t.setTranslate(b),t.transitionStart(!0,t.swipeDirection),t.animating=!0,s.transitionEnd(function(){t&&!t.destroyed&&i.allowMomentumBounce&&(t.emit("momentumBounce"),t.setTransition(n.speed),t.setTranslate(x),s.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))})):t.velocity?(t.updateProgress(b),t.setTransition(g),t.setTranslate(b),t.transitionStart(!0,t.swipeDirection),t.animating||(t.animating=!0,s.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))):t.updateProgress(b),t.updateActiveIndex(),t.updateSlidesClasses()}else if(n.freeModeSticky)return void t.slideToClosest();(!n.freeModeMomentum||p>=n.longSwipesMs)&&(t.updateProgress(),t.updateActiveIndex(),t.updateSlidesClasses())}else{for(var k=0,M=t.slidesSizesGrid[0],P=0;P<o.length;P+=n.slidesPerGroup)void 0!==o[P+n.slidesPerGroup]?u>=o[P]&&u<o[P+n.slidesPerGroup]&&(M=o[(k=P)+n.slidesPerGroup]-o[P]):u>=o[P]&&(k=P,M=o[o.length-1]-o[o.length-2]);var D=(u-o[k])/M;if(p>n.longSwipesMs){if(!n.longSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&(D>=n.longSwipesRatio?t.slideTo(k+n.slidesPerGroup):t.slideTo(k)),"prev"===t.swipeDirection&&(D>1-n.longSwipesRatio?t.slideTo(k+n.slidesPerGroup):t.slideTo(k))}else{if(!n.shortSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&t.slideTo(k+n.slidesPerGroup),"prev"===t.swipeDirection&&t.slideTo(k)}}}.bind(e),e.onClick=function(e){this.allowClick||(this.params.preventClicks&&e.preventDefault(),this.params.preventClicksPropagation&&this.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))}.bind(e);var a="container"===t.touchEventsTarget?n:r,s=!!t.nested;if(te.touch||!te.pointerEvents&&!te.prefixedPointerEvents){if(te.touch){var o=!("touchstart"!==i.start||!te.passiveListener||!t.passiveListeners)&&{passive:!0,capture:!1};a.addEventListener(i.start,e.onTouchStart,o),a.addEventListener(i.move,e.onTouchMove,te.passiveListener?{passive:!1,capture:s}:s),a.addEventListener(i.end,e.onTouchEnd,o)}(t.simulateTouch&&!m.ios&&!m.android||t.simulateTouch&&!te.touch&&m.ios)&&(a.addEventListener("mousedown",e.onTouchStart,!1),v.addEventListener("mousemove",e.onTouchMove,s),v.addEventListener("mouseup",e.onTouchEnd,!1))}else a.addEventListener(i.start,e.onTouchStart,!1),v.addEventListener(i.move,e.onTouchMove,s),v.addEventListener(i.end,e.onTouchEnd,!1);(t.preventClicks||t.preventClicksPropagation)&&a.addEventListener("click",e.onClick,!0),e.on(m.ios||m.android?"resize orientationchange observerUpdate":"resize observerUpdate",g,!0)},detachEvents:function(){var e=this,t=e.params,i=e.touchEvents,n=e.el,r=e.wrapperEl,a="container"===t.touchEventsTarget?n:r,s=!!t.nested;if(te.touch||!te.pointerEvents&&!te.prefixedPointerEvents){if(te.touch){var o=!("onTouchStart"!==i.start||!te.passiveListener||!t.passiveListeners)&&{passive:!0,capture:!1};a.removeEventListener(i.start,e.onTouchStart,o),a.removeEventListener(i.move,e.onTouchMove,s),a.removeEventListener(i.end,e.onTouchEnd,o)}(t.simulateTouch&&!m.ios&&!m.android||t.simulateTouch&&!te.touch&&m.ios)&&(a.removeEventListener("mousedown",e.onTouchStart,!1),v.removeEventListener("mousemove",e.onTouchMove,s),v.removeEventListener("mouseup",e.onTouchEnd,!1))}else a.removeEventListener(i.start,e.onTouchStart,!1),v.removeEventListener(i.move,e.onTouchMove,s),v.removeEventListener(i.end,e.onTouchEnd,!1);(t.preventClicks||t.preventClicksPropagation)&&a.removeEventListener("click",e.onClick,!0),e.off(m.ios||m.android?"resize orientationchange observerUpdate":"resize observerUpdate",g)}},breakpoints:{setBreakpoint:function(){var e=this,t=e.activeIndex,i=e.initialized,n=e.loopedSlides;void 0===n&&(n=0);var r=e.params,a=r.breakpoints;if(a&&(!a||0!==Object.keys(a).length)){var s=e.getBreakpoint(a);if(s&&e.currentBreakpoint!==s){var o=s in a?a[s]:void 0;o&&["slidesPerView","spaceBetween","slidesPerGroup"].forEach(function(e){var t=o[e];void 0!==t&&(o[e]="slidesPerView"!==e||"AUTO"!==t&&"auto"!==t?"slidesPerView"===e?parseFloat(t):parseInt(t,10):"auto")});var l=o||e.originalParams,d=l.direction&&l.direction!==r.direction,u=r.loop&&(l.slidesPerView!==r.slidesPerView||d);d&&i&&e.changeDirection(),ee.extend(e.params,l),ee.extend(e,{allowTouchMove:e.params.allowTouchMove,allowSlideNext:e.params.allowSlideNext,allowSlidePrev:e.params.allowSlidePrev}),e.currentBreakpoint=s,u&&i&&(e.loopDestroy(),e.loopCreate(),e.updateSlides(),e.slideTo(t-n+e.loopedSlides,0,!1)),e.emit("breakpoint",l)}}},getBreakpoint:function(e){if(e){var t=!1,i=[];Object.keys(e).forEach(function(e){i.push(e)}),i.sort(function(e,t){return parseInt(e,10)-parseInt(t,10)});for(var n=0;n<i.length;n+=1){var r=i[n];this.params.breakpointsInverse?r<=Z.innerWidth&&(t=r):r>=Z.innerWidth&&!t&&(t=r)}return t||"max"}}},checkOverflow:{checkOverflow:function(){var e=this,t=e.isLocked;e.isLocked=1===e.snapGrid.length,e.allowSlideNext=!e.isLocked,e.allowSlidePrev=!e.isLocked,t!==e.isLocked&&e.emit(e.isLocked?"lock":"unlock"),t&&t!==e.isLocked&&(e.isEnd=!1,e.navigation.update())}},classes:{addClasses:function(){var t=this.classNames,i=this.params,e=this.rtl,n=this.$el,r=[];r.push("initialized"),r.push(i.direction),i.freeMode&&r.push("free-mode"),te.flexbox||r.push("no-flexbox"),i.autoHeight&&r.push("autoheight"),e&&r.push("rtl"),1<i.slidesPerColumn&&r.push("multirow"),m.android&&r.push("android"),m.ios&&r.push("ios"),(z.isIE||z.isEdge)&&(te.pointerEvents||te.prefixedPointerEvents)&&r.push("wp8-"+i.direction),r.forEach(function(e){t.push(i.containerModifierClass+e)}),n.addClass(t.join(" "))},removeClasses:function(){var e=this.$el,t=this.classNames;e.removeClass(t.join(" "))}},images:{loadImage:function(e,t,i,n,r,a){var s;function o(){a&&a()}e.complete&&r?o():t?((s=new Z.Image).onload=o,s.onerror=o,n&&(s.sizes=n),i&&(s.srcset=i),t&&(s.src=t)):o()},preloadImages:function(){var e=this;function t(){null!=e&&e&&!e.destroyed&&(void 0!==e.imagesLoaded&&(e.imagesLoaded+=1),e.imagesLoaded===e.imagesToLoad.length&&(e.params.updateOnImagesReady&&e.update(),e.emit("imagesReady")))}e.imagesToLoad=e.$el.find("img");for(var i=0;i<e.imagesToLoad.length;i+=1){var n=e.imagesToLoad[i];e.loadImage(n,n.currentSrc||n.getAttribute("src"),n.srcset||n.getAttribute("srcset"),n.sizes||n.getAttribute("sizes"),!0,t)}}}},x={},w=function(p){function h(){for(var e,t,r,i=[],n=arguments.length;n--;)i[n]=arguments[n];r=(r=1===i.length&&i[0].constructor&&i[0].constructor===Object?i[0]:(t=(e=i)[0],e[1]))||{},r=ee.extend({},r),t&&!r.el&&(r.el=t),p.call(this,r),Object.keys(b).forEach(function(t){Object.keys(b[t]).forEach(function(e){h.prototype[e]||(h.prototype[e]=b[t][e])})});var a=this;void 0===a.modules&&(a.modules={}),Object.keys(a.modules).forEach(function(e){var t=a.modules[e];if(t.params){var i=Object.keys(t.params)[0],n=t.params[i];if("object"!=typeof n||null===n)return;if(!(i in r&&"enabled"in n))return;!0===r[i]&&(r[i]={enabled:!0}),"object"!=typeof r[i]||"enabled"in r[i]||(r[i].enabled=!0),r[i]||(r[i]={enabled:!1})}});var s=ee.extend({},y);a.useModulesParams(s),a.params=ee.extend({},s,x,r),a.originalParams=ee.extend({},a.params),a.passedParams=ee.extend({},r);var o=(a.$=$)(a.params.el);if(t=o[0]){if(1<o.length){var l=[];return o.each(function(e,t){var i=ee.extend({},r,{el:t});l.push(new h(i))}),l}t.swiper=a,o.data("swiper",a);var d,u,c=o.children("."+a.params.wrapperClass);return ee.extend(a,{$el:o,el:t,$wrapperEl:c,wrapperEl:c[0],classNames:[],slides:$(),slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:function(){return"horizontal"===a.params.direction},isVertical:function(){return"vertical"===a.params.direction},rtl:"rtl"===t.dir.toLowerCase()||"rtl"===o.css("direction"),rtlTranslate:"horizontal"===a.params.direction&&("rtl"===t.dir.toLowerCase()||"rtl"===o.css("direction")),wrongRTL:"-webkit-box"===c.css("display"),activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,previousTranslate:0,progress:0,velocity:0,animating:!1,allowSlideNext:a.params.allowSlideNext,allowSlidePrev:a.params.allowSlidePrev,touchEvents:(d=["touchstart","touchmove","touchend"],u=["mousedown","mousemove","mouseup"],te.pointerEvents?u=["pointerdown","pointermove","pointerup"]:te.prefixedPointerEvents&&(u=["MSPointerDown","MSPointerMove","MSPointerUp"]),a.touchEventsTouch={start:d[0],move:d[1],end:d[2]},a.touchEventsDesktop={start:u[0],move:u[1],end:u[2]},te.touch||!a.params.simulateTouch?a.touchEventsTouch:a.touchEventsDesktop),touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,formElements:"input, select, option, textarea, button, video",lastClickTime:ee.now(),clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,isTouchEvent:void 0,startMoving:void 0},allowClick:!0,allowTouchMove:a.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),a.useModules(),a.params.init&&a.init(),a}}p&&(h.__proto__=p);var e={extendedDefaults:{configurable:!0},defaults:{configurable:!0},Class:{configurable:!0},$:{configurable:!0}};return((h.prototype=Object.create(p&&p.prototype)).constructor=h).prototype.slidesPerViewDynamic=function(){var e=this,t=e.params,i=e.slides,n=e.slidesGrid,r=e.size,a=e.activeIndex,s=1;if(t.centeredSlides){for(var o,l=i[a].swiperSlideSize,d=a+1;d<i.length;d+=1)i[d]&&!o&&(s+=1,r<(l+=i[d].swiperSlideSize)&&(o=!0));for(var u=a-1;0<=u;u-=1)i[u]&&!o&&(s+=1,r<(l+=i[u].swiperSlideSize)&&(o=!0))}else for(var c=a+1;c<i.length;c+=1)n[c]-n[a]<r&&(s+=1);return s},h.prototype.update=function(){var i=this;if(i&&!i.destroyed){var e=i.snapGrid,t=i.params;t.breakpoints&&i.setBreakpoint(),i.updateSize(),i.updateSlides(),i.updateProgress(),i.updateSlidesClasses(),i.params.freeMode?(n(),i.params.autoHeight&&i.updateAutoHeight()):(("auto"===i.params.slidesPerView||1<i.params.slidesPerView)&&i.isEnd&&!i.params.centeredSlides?i.slideTo(i.slides.length-1,0,!1,!0):i.slideTo(i.activeIndex,0,!1,!0))||n(),t.watchOverflow&&e!==i.snapGrid&&i.checkOverflow(),i.emit("update")}function n(){var e=i.rtlTranslate?-1*i.translate:i.translate,t=Math.min(Math.max(e,i.maxTranslate()),i.minTranslate());i.setTranslate(t),i.updateActiveIndex(),i.updateSlidesClasses()}},h.prototype.changeDirection=function(i,e){void 0===e&&(e=!0);var t=this,n=t.params.direction;return(i=i||("horizontal"===n?"vertical":"horizontal"))===n||"horizontal"!==i&&"vertical"!==i||("vertical"===n&&(t.$el.removeClass(t.params.containerModifierClass+"vertical wp8-vertical").addClass(""+t.params.containerModifierClass+i),(z.isIE||z.isEdge)&&(te.pointerEvents||te.prefixedPointerEvents)&&t.$el.addClass(t.params.containerModifierClass+"wp8-"+i)),"horizontal"===n&&(t.$el.removeClass(t.params.containerModifierClass+"horizontal wp8-horizontal").addClass(""+t.params.containerModifierClass+i),(z.isIE||z.isEdge)&&(te.pointerEvents||te.prefixedPointerEvents)&&t.$el.addClass(t.params.containerModifierClass+"wp8-"+i)),t.params.direction=i,t.slides.each(function(e,t){"vertical"===i?t.style.width="":t.style.height=""}),t.emit("changeDirection"),e&&t.update()),t},h.prototype.init=function(){var e=this;e.initialized||(e.emit("beforeInit"),e.params.breakpoints&&e.setBreakpoint(),e.addClasses(),e.params.loop&&e.loopCreate(),e.updateSize(),e.updateSlides(),e.params.watchOverflow&&e.checkOverflow(),e.params.grabCursor&&e.setGrabCursor(),e.params.preloadImages&&e.preloadImages(),e.params.loop?e.slideTo(e.params.initialSlide+e.loopedSlides,0,e.params.runCallbacksOnInit):e.slideTo(e.params.initialSlide,0,e.params.runCallbacksOnInit),e.attachEvents(),e.initialized=!0,e.emit("init"))},h.prototype.destroy=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);var i=this,n=i.params,r=i.$el,a=i.$wrapperEl,s=i.slides;return void 0===i.params||i.destroyed||(i.emit("beforeDestroy"),i.initialized=!1,i.detachEvents(),n.loop&&i.loopDestroy(),t&&(i.removeClasses(),r.removeAttr("style"),a.removeAttr("style"),s&&s.length&&s.removeClass([n.slideVisibleClass,n.slideActiveClass,n.slideNextClass,n.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index").removeAttr("data-swiper-column").removeAttr("data-swiper-row")),i.emit("destroy"),Object.keys(i.eventsListeners).forEach(function(e){i.off(e)}),!1!==e&&(i.$el[0].swiper=null,i.$el.data("swiper",null),ee.deleteProps(i)),i.destroyed=!0),null},h.extendDefaults=function(e){ee.extend(x,e)},e.extendedDefaults.get=function(){return x},e.defaults.get=function(){return y},e.Class.get=function(){return p},e.$.get=function(){return $},Object.defineProperties(h,e),h}(e),T={name:"device",proto:{device:m},static:{device:m}},E={name:"support",proto:{support:te},static:{support:te}},C={name:"browser",proto:{browser:z},static:{browser:z}},S={name:"resize",create:function(){var e=this;ee.extend(e,{resize:{resizeHandler:function(){e&&!e.destroyed&&e.initialized&&(e.emit("beforeResize"),e.emit("resize"))},orientationChangeHandler:function(){e&&!e.destroyed&&e.initialized&&e.emit("orientationchange")}}})},on:{init:function(){Z.addEventListener("resize",this.resize.resizeHandler),Z.addEventListener("orientationchange",this.resize.orientationChangeHandler)},destroy:function(){Z.removeEventListener("resize",this.resize.resizeHandler),Z.removeEventListener("orientationchange",this.resize.orientationChangeHandler)}}},k={func:Z.MutationObserver||Z.WebkitMutationObserver,attach:function(e,t){void 0===t&&(t={});var i=this,n=new k.func(function(e){if(1!==e.length){var t=function(){i.emit("observerUpdate",e[0])};Z.requestAnimationFrame?Z.requestAnimationFrame(t):Z.setTimeout(t,0)}else i.emit("observerUpdate",e[0])});n.observe(e,{attributes:void 0===t.attributes||t.attributes,childList:void 0===t.childList||t.childList,characterData:void 0===t.characterData||t.characterData}),i.observer.observers.push(n)},init:function(){var e=this;if(te.observer&&e.params.observer){if(e.params.observeParents)for(var t=e.$el.parents(),i=0;i<t.length;i+=1)e.observer.attach(t[i]);e.observer.attach(e.$el[0],{childList:e.params.observeSlideChildren}),e.observer.attach(e.$wrapperEl[0],{attributes:!1})}},destroy:function(){this.observer.observers.forEach(function(e){e.disconnect()}),this.observer.observers=[]}},M={name:"observer",params:{observer:!1,observeParents:!1,observeSlideChildren:!1},create:function(){ee.extend(this,{observer:{init:k.init.bind(this),attach:k.attach.bind(this),destroy:k.destroy.bind(this),observers:[]}})},on:{init:function(){this.observer.init()},destroy:function(){this.observer.destroy()}}},P={update:function(e){var t=this,i=t.params,n=i.slidesPerView,r=i.slidesPerGroup,a=i.centeredSlides,s=t.params.virtual,o=s.addSlidesBefore,l=s.addSlidesAfter,d=t.virtual,u=d.from,c=d.to,p=d.slides,h=d.slidesGrid,f=d.renderSlide,v=d.offset;t.updateActiveIndex();var m,g,y,b=t.activeIndex||0;m=t.rtlTranslate?"right":t.isHorizontal()?"left":"top",y=a?(g=Math.floor(n/2)+r+o,Math.floor(n/2)+r+l):(g=n+(r-1)+o,r+l);var x=Math.max((b||0)-y,0),w=Math.min((b||0)+g,p.length-1),T=(t.slidesGrid[x]||0)-(t.slidesGrid[0]||0);function E(){t.updateSlides(),t.updateProgress(),t.updateSlidesClasses(),t.lazy&&t.params.lazy.enabled&&t.lazy.load()}if(ee.extend(t.virtual,{from:x,to:w,offset:T,slidesGrid:t.slidesGrid}),u===x&&c===w&&!e)return t.slidesGrid!==h&&T!==v&&t.slides.css(m,T+"px"),void t.updateProgress();if(t.params.virtual.renderExternal)return t.params.virtual.renderExternal.call(t,{offset:T,from:x,to:w,slides:function(){for(var e=[],t=x;t<=w;t+=1)e.push(p[t]);return e}()}),void E();var C=[],S=[];if(e)t.$wrapperEl.find("."+t.params.slideClass).remove();else for(var k=u;k<=c;k+=1)(k<x||w<k)&&t.$wrapperEl.find("."+t.params.slideClass+'[data-swiper-slide-index="'+k+'"]').remove();for(var M=0;M<p.length;M+=1)x<=M&&M<=w&&(void 0===c||e?S.push(M):(c<M&&S.push(M),M<u&&C.push(M)));S.forEach(function(e){t.$wrapperEl.append(f(p[e],e))}),C.sort(function(e,t){return t-e}).forEach(function(e){t.$wrapperEl.prepend(f(p[e],e))}),t.$wrapperEl.children(".swiper-slide").css(m,T+"px"),E()},renderSlide:function(e,t){var i=this,n=i.params.virtual;if(n.cache&&i.virtual.cache[t])return i.virtual.cache[t];var r=n.renderSlide?$(n.renderSlide.call(i,e,t)):$('<div class="'+i.params.slideClass+'" data-swiper-slide-index="'+t+'">'+e+"</div>");return r.attr("data-swiper-slide-index")||r.attr("data-swiper-slide-index",t),n.cache&&(i.virtual.cache[t]=r),r},appendSlide:function(e){if("object"==typeof e&&"length"in e)for(var t=0;t<e.length;t+=1)e[t]&&this.virtual.slides.push(e[t]);else this.virtual.slides.push(e);this.virtual.update(!0)},prependSlide:function(e){var t=this,i=t.activeIndex,n=i+1,r=1;if(Array.isArray(e)){for(var a=0;a<e.length;a+=1)e[a]&&t.virtual.slides.unshift(e[a]);n=i+e.length,r=e.length}else t.virtual.slides.unshift(e);if(t.params.virtual.cache){var s=t.virtual.cache,o={};Object.keys(s).forEach(function(e){o[parseInt(e,10)+r]=s[e]}),t.virtual.cache=o}t.virtual.update(!0),t.slideTo(n,0)},removeSlide:function(e){var t=this;if(null!=e){var i=t.activeIndex;if(Array.isArray(e))for(var n=e.length-1;0<=n;n-=1)t.virtual.slides.splice(e[n],1),t.params.virtual.cache&&delete t.virtual.cache[e[n]],e[n]<i&&(i-=1),i=Math.max(i,0);else t.virtual.slides.splice(e,1),t.params.virtual.cache&&delete t.virtual.cache[e],e<i&&(i-=1),i=Math.max(i,0);t.virtual.update(!0),t.slideTo(i,0)}},removeAllSlides:function(){var e=this;e.virtual.slides=[],e.params.virtual.cache&&(e.virtual.cache={}),e.virtual.update(!0),e.slideTo(0,0)}},D={name:"virtual",params:{virtual:{enabled:!1,slides:[],cache:!0,renderSlide:null,renderExternal:null,addSlidesBefore:0,addSlidesAfter:0}},create:function(){var e=this;ee.extend(e,{virtual:{update:P.update.bind(e),appendSlide:P.appendSlide.bind(e),prependSlide:P.prependSlide.bind(e),removeSlide:P.removeSlide.bind(e),removeAllSlides:P.removeAllSlides.bind(e),renderSlide:P.renderSlide.bind(e),slides:e.params.virtual.slides,cache:{}}})},on:{beforeInit:function(){var e=this;if(e.params.virtual.enabled){e.classNames.push(e.params.containerModifierClass+"virtual");var t={watchSlidesProgress:!0};ee.extend(e.params,t),ee.extend(e.originalParams,t),e.params.initialSlide||e.virtual.update()}},setTranslate:function(){this.params.virtual.enabled&&this.virtual.update()}}},L={handle:function(e){var t=this,i=t.rtlTranslate,n=e;n.originalEvent&&(n=n.originalEvent);var r=n.keyCode||n.charCode;if(!t.allowSlideNext&&(t.isHorizontal()&&39===r||t.isVertical()&&40===r))return!1;if(!t.allowSlidePrev&&(t.isHorizontal()&&37===r||t.isVertical()&&38===r))return!1;if(!(n.shiftKey||n.altKey||n.ctrlKey||n.metaKey||v.activeElement&&v.activeElement.nodeName&&("input"===v.activeElement.nodeName.toLowerCase()||"textarea"===v.activeElement.nodeName.toLowerCase()))){if(t.params.keyboard.onlyInViewport&&(37===r||39===r||38===r||40===r)){var a=!1;if(0<t.$el.parents("."+t.params.slideClass).length&&0===t.$el.parents("."+t.params.slideActiveClass).length)return;var s=Z.innerWidth,o=Z.innerHeight,l=t.$el.offset();i&&(l.left-=t.$el[0].scrollLeft);for(var d=[[l.left,l.top],[l.left+t.width,l.top],[l.left,l.top+t.height],[l.left+t.width,l.top+t.height]],u=0;u<d.length;u+=1){var c=d[u];0<=c[0]&&c[0]<=s&&0<=c[1]&&c[1]<=o&&(a=!0)}if(!a)return}t.isHorizontal()?(37!==r&&39!==r||(n.preventDefault?n.preventDefault():n.returnValue=!1),(39===r&&!i||37===r&&i)&&t.slideNext(),(37===r&&!i||39===r&&i)&&t.slidePrev()):(38!==r&&40!==r||(n.preventDefault?n.preventDefault():n.returnValue=!1),40===r&&t.slideNext(),38===r&&t.slidePrev()),t.emit("keyPress",r)}},enable:function(){this.keyboard.enabled||($(v).on("keydown",this.keyboard.handle),this.keyboard.enabled=!0)},disable:function(){this.keyboard.enabled&&($(v).off("keydown",this.keyboard.handle),this.keyboard.enabled=!1)}},A={name:"keyboard",params:{keyboard:{enabled:!1,onlyInViewport:!0}},create:function(){ee.extend(this,{keyboard:{enabled:!1,enable:L.enable.bind(this),disable:L.disable.bind(this),handle:L.handle.bind(this)}})},on:{init:function(){this.params.keyboard.enabled&&this.keyboard.enable()},destroy:function(){this.keyboard.enabled&&this.keyboard.disable()}}},I={lastScrollTime:ee.now(),event:-1<Z.navigator.userAgent.indexOf("firefox")?"DOMMouseScroll":function(){var e="onwheel",t=e in v;if(!t){var i=v.createElement("div");i.setAttribute(e,"return;"),t="function"==typeof i[e]}return!t&&v.implementation&&v.implementation.hasFeature&&!0!==v.implementation.hasFeature("","")&&(t=v.implementation.hasFeature("Events.wheel","3.0")),t}()?"wheel":"mousewheel",normalize:function(e){var t=0,i=0,n=0,r=0;return"detail"in e&&(i=e.detail),"wheelDelta"in e&&(i=-e.wheelDelta/120),"wheelDeltaY"in e&&(i=-e.wheelDeltaY/120),"wheelDeltaX"in e&&(t=-e.wheelDeltaX/120),"axis"in e&&e.axis===e.HORIZONTAL_AXIS&&(t=i,i=0),n=10*t,r=10*i,"deltaY"in e&&(r=e.deltaY),"deltaX"in e&&(n=e.deltaX),(n||r)&&e.deltaMode&&(1===e.deltaMode?(n*=40,r*=40):(n*=800,r*=800)),n&&!t&&(t=n<1?-1:1),r&&!i&&(i=r<1?-1:1),{spinX:t,spinY:i,pixelX:n,pixelY:r}},handleMouseEnter:function(){this.mouseEntered=!0},handleMouseLeave:function(){this.mouseEntered=!1},handle:function(e){var t=e,i=this,n=i.params.mousewheel;if(!i.mouseEntered&&!n.releaseOnEdges)return!0;t.originalEvent&&(t=t.originalEvent);var r=0,a=i.rtlTranslate?-1:1,s=I.normalize(t);if(n.forceToAxis)if(i.isHorizontal()){if(!(Math.abs(s.pixelX)>Math.abs(s.pixelY)))return!0;r=s.pixelX*a}else{if(!(Math.abs(s.pixelY)>Math.abs(s.pixelX)))return!0;r=s.pixelY}else r=Math.abs(s.pixelX)>Math.abs(s.pixelY)?-s.pixelX*a:-s.pixelY;if(0===r)return!0;if(n.invert&&(r=-r),i.params.freeMode){i.params.loop&&i.loopFix();var o=i.getTranslate()+r*n.sensitivity,l=i.isBeginning,d=i.isEnd;if(o>=i.minTranslate()&&(o=i.minTranslate()),o<=i.maxTranslate()&&(o=i.maxTranslate()),i.setTransition(0),i.setTranslate(o),i.updateProgress(),i.updateActiveIndex(),i.updateSlidesClasses(),(!l&&i.isBeginning||!d&&i.isEnd)&&i.updateSlidesClasses(),i.params.freeModeSticky&&(clearTimeout(i.mousewheel.timeout),i.mousewheel.timeout=ee.nextTick(function(){i.slideToClosest()},300)),i.emit("scroll",t),i.params.autoplay&&i.params.autoplayDisableOnInteraction&&i.autoplay.stop(),o===i.minTranslate()||o===i.maxTranslate())return!0}else{if(60<ee.now()-i.mousewheel.lastScrollTime)if(r<0)if(i.isEnd&&!i.params.loop||i.animating){if(n.releaseOnEdges)return!0}else i.slideNext(),i.emit("scroll",t);else if(i.isBeginning&&!i.params.loop||i.animating){if(n.releaseOnEdges)return!0}else i.slidePrev(),i.emit("scroll",t);i.mousewheel.lastScrollTime=(new Z.Date).getTime()}return t.preventDefault?t.preventDefault():t.returnValue=!1,!1},enable:function(){var e=this;if(!I.event)return!1;if(e.mousewheel.enabled)return!1;var t=e.$el;return"container"!==e.params.mousewheel.eventsTarged&&(t=$(e.params.mousewheel.eventsTarged)),t.on("mouseenter",e.mousewheel.handleMouseEnter),t.on("mouseleave",e.mousewheel.handleMouseLeave),t.on(I.event,e.mousewheel.handle),e.mousewheel.enabled=!0},disable:function(){var e=this;if(!I.event)return!1;if(!e.mousewheel.enabled)return!1;var t=e.$el;return"container"!==e.params.mousewheel.eventsTarged&&(t=$(e.params.mousewheel.eventsTarged)),t.off(I.event,e.mousewheel.handle),!(e.mousewheel.enabled=!1)}},N={update:function(){var e=this,t=e.params.navigation;if(!e.params.loop){var i=e.navigation,n=i.$nextEl,r=i.$prevEl;r&&0<r.length&&(e.isBeginning?r.addClass(t.disabledClass):r.removeClass(t.disabledClass),r[e.params.watchOverflow&&e.isLocked?"addClass":"removeClass"](t.lockClass)),n&&0<n.length&&(e.isEnd?n.addClass(t.disabledClass):n.removeClass(t.disabledClass),n[e.params.watchOverflow&&e.isLocked?"addClass":"removeClass"](t.lockClass))}},onPrevClick:function(e){e.preventDefault(),this.isBeginning&&!this.params.loop||this.slidePrev()},onNextClick:function(e){e.preventDefault(),this.isEnd&&!this.params.loop||this.slideNext()},init:function(){var e,t,i=this,n=i.params.navigation;(n.nextEl||n.prevEl)&&(n.nextEl&&(e=$(n.nextEl),i.params.uniqueNavElements&&"string"==typeof n.nextEl&&1<e.length&&1===i.$el.find(n.nextEl).length&&(e=i.$el.find(n.nextEl))),n.prevEl&&(t=$(n.prevEl),i.params.uniqueNavElements&&"string"==typeof n.prevEl&&1<t.length&&1===i.$el.find(n.prevEl).length&&(t=i.$el.find(n.prevEl))),e&&0<e.length&&e.on("click",i.navigation.onNextClick),t&&0<t.length&&t.on("click",i.navigation.onPrevClick),ee.extend(i.navigation,{$nextEl:e,nextEl:e&&e[0],$prevEl:t,prevEl:t&&t[0]}))},destroy:function(){var e=this,t=e.navigation,i=t.$nextEl,n=t.$prevEl;i&&i.length&&(i.off("click",e.navigation.onNextClick),i.removeClass(e.params.navigation.disabledClass)),n&&n.length&&(n.off("click",e.navigation.onPrevClick),n.removeClass(e.params.navigation.disabledClass))}},O={update:function(){var e=this,t=e.rtl,r=e.params.pagination;if(r.el&&e.pagination.el&&e.pagination.$el&&0!==e.pagination.$el.length){var a,i=e.virtual&&e.params.virtual.enabled?e.virtual.slides.length:e.slides.length,n=e.pagination.$el,s=e.params.loop?Math.ceil((i-2*e.loopedSlides)/e.params.slidesPerGroup):e.snapGrid.length;if(e.params.loop?((a=Math.ceil((e.activeIndex-e.loopedSlides)/e.params.slidesPerGroup))>i-1-2*e.loopedSlides&&(a-=i-2*e.loopedSlides),s-1<a&&(a-=s),a<0&&"bullets"!==e.params.paginationType&&(a=s+a)):a=void 0!==e.snapIndex?e.snapIndex:e.activeIndex||0,"bullets"===r.type&&e.pagination.bullets&&0<e.pagination.bullets.length){var o,l,d,u=e.pagination.bullets;if(r.dynamicBullets&&(e.pagination.bulletSize=u.eq(0)[e.isHorizontal()?"outerWidth":"outerHeight"](!0),n.css(e.isHorizontal()?"width":"height",e.pagination.bulletSize*(r.dynamicMainBullets+4)+"px"),1<r.dynamicMainBullets&&void 0!==e.previousIndex&&(e.pagination.dynamicBulletIndex+=a-e.previousIndex,e.pagination.dynamicBulletIndex>r.dynamicMainBullets-1?e.pagination.dynamicBulletIndex=r.dynamicMainBullets-1:e.pagination.dynamicBulletIndex<0&&(e.pagination.dynamicBulletIndex=0)),o=a-e.pagination.dynamicBulletIndex,d=((l=o+(Math.min(u.length,r.dynamicMainBullets)-1))+o)/2),u.removeClass(r.bulletActiveClass+" "+r.bulletActiveClass+"-next "+r.bulletActiveClass+"-next-next "+r.bulletActiveClass+"-prev "+r.bulletActiveClass+"-prev-prev "+r.bulletActiveClass+"-main"),1<n.length)u.each(function(e,t){var i=$(t),n=i.index();n===a&&i.addClass(r.bulletActiveClass),r.dynamicBullets&&(o<=n&&n<=l&&i.addClass(r.bulletActiveClass+"-main"),n===o&&i.prev().addClass(r.bulletActiveClass+"-prev").prev().addClass(r.bulletActiveClass+"-prev-prev"),n===l&&i.next().addClass(r.bulletActiveClass+"-next").next().addClass(r.bulletActiveClass+"-next-next"))});else if(u.eq(a).addClass(r.bulletActiveClass),r.dynamicBullets){for(var c=u.eq(o),p=u.eq(l),h=o;h<=l;h+=1)u.eq(h).addClass(r.bulletActiveClass+"-main");c.prev().addClass(r.bulletActiveClass+"-prev").prev().addClass(r.bulletActiveClass+"-prev-prev"),p.next().addClass(r.bulletActiveClass+"-next").next().addClass(r.bulletActiveClass+"-next-next")}if(r.dynamicBullets){var f=Math.min(u.length,r.dynamicMainBullets+4),v=(e.pagination.bulletSize*f-e.pagination.bulletSize)/2-d*e.pagination.bulletSize,m=t?"right":"left";u.css(e.isHorizontal()?m:"top",v+"px")}}if("fraction"===r.type&&(n.find("."+r.currentClass).text(r.formatFractionCurrent(a+1)),n.find("."+r.totalClass).text(r.formatFractionTotal(s))),"progressbar"===r.type){var g;g=r.progressbarOpposite?e.isHorizontal()?"vertical":"horizontal":e.isHorizontal()?"horizontal":"vertical";var y=(a+1)/s,b=1,x=1;"horizontal"==g?b=y:x=y,n.find("."+r.progressbarFillClass).transform("translate3d(0,0,0) scaleX("+b+") scaleY("+x+")").transition(e.params.speed)}"custom"===r.type&&r.renderCustom?(n.html(r.renderCustom(e,a+1,s)),e.emit("paginationRender",e,n[0])):e.emit("paginationUpdate",e,n[0]),n[e.params.watchOverflow&&e.isLocked?"addClass":"removeClass"](r.lockClass)}},render:function(){var e=this,t=e.params.pagination;if(t.el&&e.pagination.el&&e.pagination.$el&&0!==e.pagination.$el.length){var i=e.virtual&&e.params.virtual.enabled?e.virtual.slides.length:e.slides.length,n=e.pagination.$el,r="";if("bullets"===t.type){for(var a=e.params.loop?Math.ceil((i-2*e.loopedSlides)/e.params.slidesPerGroup):e.snapGrid.length,s=0;s<a;s+=1)t.renderBullet?r+=t.renderBullet.call(e,s,t.bulletClass):r+="<"+t.bulletElement+' class="'+t.bulletClass+'"></'+t.bulletElement+">";n.html(r),e.pagination.bullets=n.find("."+t.bulletClass)}"fraction"===t.type&&(r=t.renderFraction?t.renderFraction.call(e,t.currentClass,t.totalClass):'<span class="'+t.currentClass+'"></span> / <span class="'+t.totalClass+'"></span>',n.html(r)),"progressbar"===t.type&&(r=t.renderProgressbar?t.renderProgressbar.call(e,t.progressbarFillClass):'<span class="'+t.progressbarFillClass+'"></span>',n.html(r)),"custom"!==t.type&&e.emit("paginationRender",e.pagination.$el[0])}},init:function(){var i=this,e=i.params.pagination;if(e.el){var t=$(e.el);0!==t.length&&(i.params.uniqueNavElements&&"string"==typeof e.el&&1<t.length&&1===i.$el.find(e.el).length&&(t=i.$el.find(e.el)),"bullets"===e.type&&e.clickable&&t.addClass(e.clickableClass),t.addClass(e.modifierClass+e.type),"bullets"===e.type&&e.dynamicBullets&&(t.addClass(""+e.modifierClass+e.type+"-dynamic"),i.pagination.dynamicBulletIndex=0,e.dynamicMainBullets<1&&(e.dynamicMainBullets=1)),"progressbar"===e.type&&e.progressbarOpposite&&t.addClass(e.progressbarOppositeClass),e.clickable&&t.on("click","."+e.bulletClass,function(e){e.preventDefault();var t=$(this).index()*i.params.slidesPerGroup;i.params.loop&&(t+=i.loopedSlides),i.slideTo(t)}),ee.extend(i.pagination,{$el:t,el:t[0]}))}},destroy:function(){var e=this,t=e.params.pagination;if(t.el&&e.pagination.el&&e.pagination.$el&&0!==e.pagination.$el.length){var i=e.pagination.$el;i.removeClass(t.hiddenClass),i.removeClass(t.modifierClass+t.type),e.pagination.bullets&&e.pagination.bullets.removeClass(t.bulletActiveClass),t.clickable&&i.off("click","."+t.bulletClass)}}},H={setTranslate:function(){var e=this;if(e.params.scrollbar.el&&e.scrollbar.el){var t=e.scrollbar,i=e.rtlTranslate,n=e.progress,r=t.dragSize,a=t.trackSize,s=t.$dragEl,o=t.$el,l=e.params.scrollbar,d=r,u=(a-r)*n;i?0<(u=-u)?(d=r-u,u=0):a<-u+r&&(d=a+u):u<0?(d=r+u,u=0):a<u+r&&(d=a-u),e.isHorizontal()?(te.transforms3d?s.transform("translate3d("+u+"px, 0, 0)"):s.transform("translateX("+u+"px)"),s[0].style.width=d+"px"):(te.transforms3d?s.transform("translate3d(0px, "+u+"px, 0)"):s.transform("translateY("+u+"px)"),s[0].style.height=d+"px"),l.hide&&(clearTimeout(e.scrollbar.timeout),o[0].style.opacity=1,e.scrollbar.timeout=setTimeout(function(){o[0].style.opacity=0,o.transition(400)},1e3))}},setTransition:function(e){this.params.scrollbar.el&&this.scrollbar.el&&this.scrollbar.$dragEl.transition(e)},updateSize:function(){var e=this;if(e.params.scrollbar.el&&e.scrollbar.el){var t=e.scrollbar,i=t.$dragEl,n=t.$el;i[0].style.width="",i[0].style.height="";var r,a=e.isHorizontal()?n[0].offsetWidth:n[0].offsetHeight,s=e.size/e.virtualSize,o=s*(a/e.size);r="auto"===e.params.scrollbar.dragSize?a*s:parseInt(e.params.scrollbar.dragSize,10),e.isHorizontal()?i[0].style.width=r+"px":i[0].style.height=r+"px",n[0].style.display=1<=s?"none":"",e.params.scrollbar.hide&&(n[0].style.opacity=0),ee.extend(t,{trackSize:a,divider:s,moveDivider:o,dragSize:r}),t.$el[e.params.watchOverflow&&e.isLocked?"addClass":"removeClass"](e.params.scrollbar.lockClass)}},setDragPosition:function(e){var t,i=this,n=i.scrollbar,r=i.rtlTranslate,a=n.$el,s=n.dragSize,o=n.trackSize;t=((i.isHorizontal()?"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageX:e.pageX||e.clientX:"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageY:e.pageY||e.clientY)-a.offset()[i.isHorizontal()?"left":"top"]-s/2)/(o-s),t=Math.max(Math.min(t,1),0),r&&(t=1-t);var l=i.minTranslate()+(i.maxTranslate()-i.minTranslate())*t;i.updateProgress(l),i.setTranslate(l),i.updateActiveIndex(),i.updateSlidesClasses()},onDragStart:function(e){var t=this,i=t.params.scrollbar,n=t.scrollbar,r=t.$wrapperEl,a=n.$el,s=n.$dragEl;t.scrollbar.isTouched=!0,e.preventDefault(),e.stopPropagation(),r.transition(100),s.transition(100),n.setDragPosition(e),clearTimeout(t.scrollbar.dragTimeout),a.transition(0),i.hide&&a.css("opacity",1),t.emit("scrollbarDragStart",e)},onDragMove:function(e){var t=this.scrollbar,i=this.$wrapperEl,n=t.$el,r=t.$dragEl;this.scrollbar.isTouched&&(e.preventDefault?e.preventDefault():e.returnValue=!1,t.setDragPosition(e),i.transition(0),n.transition(0),r.transition(0),this.emit("scrollbarDragMove",e))},onDragEnd:function(e){var t=this,i=t.params.scrollbar,n=t.scrollbar.$el;t.scrollbar.isTouched&&(t.scrollbar.isTouched=!1,i.hide&&(clearTimeout(t.scrollbar.dragTimeout),t.scrollbar.dragTimeout=ee.nextTick(function(){n.css("opacity",0),n.transition(400)},1e3)),t.emit("scrollbarDragEnd",e),i.snapOnRelease&&t.slideToClosest())},enableDraggable:function(){var e=this;if(e.params.scrollbar.el){var t=e.scrollbar,i=e.touchEventsTouch,n=e.touchEventsDesktop,r=e.params,a=t.$el[0],s=!(!te.passiveListener||!r.passiveListeners)&&{passive:!1,capture:!1},o=!(!te.passiveListener||!r.passiveListeners)&&{passive:!0,capture:!1};te.touch?(a.addEventListener(i.start,e.scrollbar.onDragStart,s),a.addEventListener(i.move,e.scrollbar.onDragMove,s),a.addEventListener(i.end,e.scrollbar.onDragEnd,o)):(a.addEventListener(n.start,e.scrollbar.onDragStart,s),v.addEventListener(n.move,e.scrollbar.onDragMove,s),v.addEventListener(n.end,e.scrollbar.onDragEnd,o))}},disableDraggable:function(){var e=this;if(e.params.scrollbar.el){var t=e.scrollbar,i=e.touchEventsTouch,n=e.touchEventsDesktop,r=e.params,a=t.$el[0],s=!(!te.passiveListener||!r.passiveListeners)&&{passive:!1,capture:!1},o=!(!te.passiveListener||!r.passiveListeners)&&{passive:!0,capture:!1};te.touch?(a.removeEventListener(i.start,e.scrollbar.onDragStart,s),a.removeEventListener(i.move,e.scrollbar.onDragMove,s),a.removeEventListener(i.end,e.scrollbar.onDragEnd,o)):(a.removeEventListener(n.start,e.scrollbar.onDragStart,s),v.removeEventListener(n.move,e.scrollbar.onDragMove,s),v.removeEventListener(n.end,e.scrollbar.onDragEnd,o))}},init:function(){var e=this;if(e.params.scrollbar.el){var t=e.scrollbar,i=e.$el,n=e.params.scrollbar,r=$(n.el);e.params.uniqueNavElements&&"string"==typeof n.el&&1<r.length&&1===i.find(n.el).length&&(r=i.find(n.el));var a=r.find("."+e.params.scrollbar.dragClass);0===a.length&&(a=$('<div class="'+e.params.scrollbar.dragClass+'"></div>'),r.append(a)),ee.extend(t,{$el:r,el:r[0],$dragEl:a,dragEl:a[0]}),n.draggable&&t.enableDraggable()}},destroy:function(){this.scrollbar.disableDraggable()}},j={setTransform:function(e,t){var i=this.rtl,n=$(e),r=i?-1:1,a=n.attr("data-swiper-parallax")||"0",s=n.attr("data-swiper-parallax-x"),o=n.attr("data-swiper-parallax-y"),l=n.attr("data-swiper-parallax-scale"),d=n.attr("data-swiper-parallax-opacity");if(s||o?(s=s||"0",o=o||"0"):this.isHorizontal()?(s=a,o="0"):(o=a,s="0"),s=0<=s.indexOf("%")?parseInt(s,10)*t*r+"%":s*t*r+"px",o=0<=o.indexOf("%")?parseInt(o,10)*t+"%":o*t+"px",null!=d){var u=d-(d-1)*(1-Math.abs(t));n[0].style.opacity=u}if(null==l)n.transform("translate3d("+s+", "+o+", 0px)");else{var c=l-(l-1)*(1-Math.abs(t));n.transform("translate3d("+s+", "+o+", 0px) scale("+c+")")}},setTranslate:function(){var n=this,e=n.$el,t=n.slides,r=n.progress,a=n.snapGrid;e.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(e,t){n.parallax.setTransform(t,r)}),t.each(function(e,t){var i=t.progress;1<n.params.slidesPerGroup&&"auto"!==n.params.slidesPerView&&(i+=Math.ceil(e/2)-r*(a.length-1)),i=Math.min(Math.max(i,-1),1),$(t).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(e,t){n.parallax.setTransform(t,i)})})},setTransition:function(r){void 0===r&&(r=this.params.speed),this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(e,t){var i=$(t),n=parseInt(i.attr("data-swiper-parallax-duration"),10)||r;0===r&&(n=0),i.transition(n)})}},q={getDistanceBetweenTouches:function(e){if(e.targetTouches.length<2)return 1;var t=e.targetTouches[0].pageX,i=e.targetTouches[0].pageY,n=e.targetTouches[1].pageX,r=e.targetTouches[1].pageY;return Math.sqrt(Math.pow(n-t,2)+Math.pow(r-i,2))},onGestureStart:function(e){var t=this,i=t.params.zoom,n=t.zoom,r=n.gesture;if(n.fakeGestureTouched=!1,n.fakeGestureMoved=!1,!te.gestures){if("touchstart"!==e.type||"touchstart"===e.type&&e.targetTouches.length<2)return;n.fakeGestureTouched=!0,r.scaleStart=q.getDistanceBetweenTouches(e)}r.$slideEl&&r.$slideEl.length||(r.$slideEl=$(e.target).closest(".swiper-slide"),0===r.$slideEl.length&&(r.$slideEl=t.slides.eq(t.activeIndex)),r.$imageEl=r.$slideEl.find("img, svg, canvas"),r.$imageWrapEl=r.$imageEl.parent("."+i.containerClass),r.maxRatio=r.$imageWrapEl.attr("data-swiper-zoom")||i.maxRatio,0!==r.$imageWrapEl.length)?(r.$imageEl.transition(0),t.zoom.isScaling=!0):r.$imageEl=void 0},onGestureChange:function(e){var t=this.params.zoom,i=this.zoom,n=i.gesture;if(!te.gestures){if("touchmove"!==e.type||"touchmove"===e.type&&e.targetTouches.length<2)return;i.fakeGestureMoved=!0,n.scaleMove=q.getDistanceBetweenTouches(e)}n.$imageEl&&0!==n.$imageEl.length&&(i.scale=te.gestures?e.scale*i.currentScale:n.scaleMove/n.scaleStart*i.currentScale,i.scale>n.maxRatio&&(i.scale=n.maxRatio-1+Math.pow(i.scale-n.maxRatio+1,.5)),i.scale<t.minRatio&&(i.scale=t.minRatio+1-Math.pow(t.minRatio-i.scale+1,.5)),n.$imageEl.transform("translate3d(0,0,0) scale("+i.scale+")"))},onGestureEnd:function(e){var t=this.params.zoom,i=this.zoom,n=i.gesture;if(!te.gestures){if(!i.fakeGestureTouched||!i.fakeGestureMoved)return;if("touchend"!==e.type||"touchend"===e.type&&e.changedTouches.length<2&&!m.android)return;i.fakeGestureTouched=!1,i.fakeGestureMoved=!1}n.$imageEl&&0!==n.$imageEl.length&&(i.scale=Math.max(Math.min(i.scale,n.maxRatio),t.minRatio),n.$imageEl.transition(this.params.speed).transform("translate3d(0,0,0) scale("+i.scale+")"),i.currentScale=i.scale,i.isScaling=!1,1===i.scale&&(n.$slideEl=void 0))},onTouchStart:function(e){var t=this.zoom,i=t.gesture,n=t.image;i.$imageEl&&0!==i.$imageEl.length&&(n.isTouched||(m.android&&e.preventDefault(),n.isTouched=!0,n.touchesStart.x="touchstart"===e.type?e.targetTouches[0].pageX:e.pageX,n.touchesStart.y="touchstart"===e.type?e.targetTouches[0].pageY:e.pageY))},onTouchMove:function(e){var t=this,i=t.zoom,n=i.gesture,r=i.image,a=i.velocity;if(n.$imageEl&&0!==n.$imageEl.length&&(t.allowClick=!1,r.isTouched&&n.$slideEl)){r.isMoved||(r.width=n.$imageEl[0].offsetWidth,r.height=n.$imageEl[0].offsetHeight,r.startX=ee.getTranslate(n.$imageWrapEl[0],"x")||0,r.startY=ee.getTranslate(n.$imageWrapEl[0],"y")||0,n.slideWidth=n.$slideEl[0].offsetWidth,n.slideHeight=n.$slideEl[0].offsetHeight,n.$imageWrapEl.transition(0),t.rtl&&(r.startX=-r.startX,r.startY=-r.startY));var s=r.width*i.scale,o=r.height*i.scale;if(!(s<n.slideWidth&&o<n.slideHeight)){if(r.minX=Math.min(n.slideWidth/2-s/2,0),r.maxX=-r.minX,r.minY=Math.min(n.slideHeight/2-o/2,0),r.maxY=-r.minY,r.touchesCurrent.x="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,r.touchesCurrent.y="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,!r.isMoved&&!i.isScaling){if(t.isHorizontal()&&(Math.floor(r.minX)===Math.floor(r.startX)&&r.touchesCurrent.x<r.touchesStart.x||Math.floor(r.maxX)===Math.floor(r.startX)&&r.touchesCurrent.x>r.touchesStart.x))return void(r.isTouched=!1);if(!t.isHorizontal()&&(Math.floor(r.minY)===Math.floor(r.startY)&&r.touchesCurrent.y<r.touchesStart.y||Math.floor(r.maxY)===Math.floor(r.startY)&&r.touchesCurrent.y>r.touchesStart.y))return void(r.isTouched=!1)}e.preventDefault(),e.stopPropagation(),r.isMoved=!0,r.currentX=r.touchesCurrent.x-r.touchesStart.x+r.startX,r.currentY=r.touchesCurrent.y-r.touchesStart.y+r.startY,r.currentX<r.minX&&(r.currentX=r.minX+1-Math.pow(r.minX-r.currentX+1,.8)),r.currentX>r.maxX&&(r.currentX=r.maxX-1+Math.pow(r.currentX-r.maxX+1,.8)),r.currentY<r.minY&&(r.currentY=r.minY+1-Math.pow(r.minY-r.currentY+1,.8)),r.currentY>r.maxY&&(r.currentY=r.maxY-1+Math.pow(r.currentY-r.maxY+1,.8)),a.prevPositionX||(a.prevPositionX=r.touchesCurrent.x),a.prevPositionY||(a.prevPositionY=r.touchesCurrent.y),a.prevTime||(a.prevTime=Date.now()),a.x=(r.touchesCurrent.x-a.prevPositionX)/(Date.now()-a.prevTime)/2,a.y=(r.touchesCurrent.y-a.prevPositionY)/(Date.now()-a.prevTime)/2,Math.abs(r.touchesCurrent.x-a.prevPositionX)<2&&(a.x=0),Math.abs(r.touchesCurrent.y-a.prevPositionY)<2&&(a.y=0),a.prevPositionX=r.touchesCurrent.x,a.prevPositionY=r.touchesCurrent.y,a.prevTime=Date.now(),n.$imageWrapEl.transform("translate3d("+r.currentX+"px, "+r.currentY+"px,0)")}}},onTouchEnd:function(){var e=this.zoom,t=e.gesture,i=e.image,n=e.velocity;if(t.$imageEl&&0!==t.$imageEl.length){if(!i.isTouched||!i.isMoved)return i.isTouched=!1,void(i.isMoved=!1);i.isTouched=!1,i.isMoved=!1;var r=300,a=300,s=n.x*r,o=i.currentX+s,l=n.y*a,d=i.currentY+l;0!==n.x&&(r=Math.abs((o-i.currentX)/n.x)),0!==n.y&&(a=Math.abs((d-i.currentY)/n.y));var u=Math.max(r,a);i.currentX=o,i.currentY=d;var c=i.width*e.scale,p=i.height*e.scale;i.minX=Math.min(t.slideWidth/2-c/2,0),i.maxX=-i.minX,i.minY=Math.min(t.slideHeight/2-p/2,0),i.maxY=-i.minY,i.currentX=Math.max(Math.min(i.currentX,i.maxX),i.minX),i.currentY=Math.max(Math.min(i.currentY,i.maxY),i.minY),t.$imageWrapEl.transition(u).transform("translate3d("+i.currentX+"px, "+i.currentY+"px,0)")}},onTransitionEnd:function(){var e=this.zoom,t=e.gesture;t.$slideEl&&this.previousIndex!==this.activeIndex&&(t.$imageEl.transform("translate3d(0,0,0) scale(1)"),t.$imageWrapEl.transform("translate3d(0,0,0)"),e.scale=1,e.currentScale=1,t.$slideEl=void 0,t.$imageEl=void 0,t.$imageWrapEl=void 0)},toggle:function(e){var t=this.zoom;t.scale&&1!==t.scale?t.out():t.in(e)},in:function(e){var t,i,n,r,a,s,o,l,d,u,c,p,h,f,v,m,g=this,y=g.zoom,b=g.params.zoom,x=y.gesture,w=y.image;x.$slideEl||(x.$slideEl=g.clickedSlide?$(g.clickedSlide):g.slides.eq(g.activeIndex),x.$imageEl=x.$slideEl.find("img, svg, canvas"),x.$imageWrapEl=x.$imageEl.parent("."+b.containerClass)),x.$imageEl&&0!==x.$imageEl.length&&(x.$slideEl.addClass(""+b.zoomedSlideClass),i=void 0===w.touchesStart.x&&e?(t="touchend"===e.type?e.changedTouches[0].pageX:e.pageX,"touchend"===e.type?e.changedTouches[0].pageY:e.pageY):(t=w.touchesStart.x,w.touchesStart.y),y.scale=x.$imageWrapEl.attr("data-swiper-zoom")||b.maxRatio,y.currentScale=x.$imageWrapEl.attr("data-swiper-zoom")||b.maxRatio,e?(v=x.$slideEl[0].offsetWidth,m=x.$slideEl[0].offsetHeight,n=x.$slideEl.offset().left+v/2-t,r=x.$slideEl.offset().top+m/2-i,o=x.$imageEl[0].offsetWidth,l=x.$imageEl[0].offsetHeight,d=o*y.scale,u=l*y.scale,h=-(c=Math.min(v/2-d/2,0)),f=-(p=Math.min(m/2-u/2,0)),(a=n*y.scale)<c&&(a=c),h<a&&(a=h),(s=r*y.scale)<p&&(s=p),f<s&&(s=f)):s=a=0,x.$imageWrapEl.transition(300).transform("translate3d("+a+"px, "+s+"px,0)"),x.$imageEl.transition(300).transform("translate3d(0,0,0) scale("+y.scale+")"))},out:function(){var e=this,t=e.zoom,i=e.params.zoom,n=t.gesture;n.$slideEl||(n.$slideEl=e.clickedSlide?$(e.clickedSlide):e.slides.eq(e.activeIndex),n.$imageEl=n.$slideEl.find("img, svg, canvas"),n.$imageWrapEl=n.$imageEl.parent("."+i.containerClass)),n.$imageEl&&0!==n.$imageEl.length&&(t.scale=1,t.currentScale=1,n.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"),n.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"),n.$slideEl.removeClass(""+i.zoomedSlideClass),n.$slideEl=void 0)},enable:function(){var e=this,t=e.zoom;if(!t.enabled){t.enabled=!0;var i=!("touchstart"!==e.touchEvents.start||!te.passiveListener||!e.params.passiveListeners)&&{passive:!0,capture:!1};te.gestures?(e.$wrapperEl.on("gesturestart",".swiper-slide",t.onGestureStart,i),e.$wrapperEl.on("gesturechange",".swiper-slide",t.onGestureChange,i),e.$wrapperEl.on("gestureend",".swiper-slide",t.onGestureEnd,i)):"touchstart"===e.touchEvents.start&&(e.$wrapperEl.on(e.touchEvents.start,".swiper-slide",t.onGestureStart,i),e.$wrapperEl.on(e.touchEvents.move,".swiper-slide",t.onGestureChange,i),e.$wrapperEl.on(e.touchEvents.end,".swiper-slide",t.onGestureEnd,i)),e.$wrapperEl.on(e.touchEvents.move,"."+e.params.zoom.containerClass,t.onTouchMove)}},disable:function(){var e=this,t=e.zoom;if(t.enabled){e.zoom.enabled=!1;var i=!("touchstart"!==e.touchEvents.start||!te.passiveListener||!e.params.passiveListeners)&&{passive:!0,capture:!1};te.gestures?(e.$wrapperEl.off("gesturestart",".swiper-slide",t.onGestureStart,i),e.$wrapperEl.off("gesturechange",".swiper-slide",t.onGestureChange,i),e.$wrapperEl.off("gestureend",".swiper-slide",t.onGestureEnd,i)):"touchstart"===e.touchEvents.start&&(e.$wrapperEl.off(e.touchEvents.start,".swiper-slide",t.onGestureStart,i),e.$wrapperEl.off(e.touchEvents.move,".swiper-slide",t.onGestureChange,i),e.$wrapperEl.off(e.touchEvents.end,".swiper-slide",t.onGestureEnd,i)),e.$wrapperEl.off(e.touchEvents.move,"."+e.params.zoom.containerClass,t.onTouchMove)}}},B={loadInSlide:function(e,l){void 0===l&&(l=!0);var d=this,u=d.params.lazy;if(void 0!==e&&0!==d.slides.length){var c=d.virtual&&d.params.virtual.enabled?d.$wrapperEl.children("."+d.params.slideClass+'[data-swiper-slide-index="'+e+'"]'):d.slides.eq(e),t=c.find("."+u.elementClass+":not(."+u.loadedClass+"):not(."+u.loadingClass+")");!c.hasClass(u.elementClass)||c.hasClass(u.loadedClass)||c.hasClass(u.loadingClass)||(t=t.add(c[0])),0!==t.length&&t.each(function(e,t){var n=$(t);n.addClass(u.loadingClass);var r=n.attr("data-background"),a=n.attr("data-src"),s=n.attr("data-srcset"),o=n.attr("data-sizes");d.loadImage(n[0],a||r,s,o,!1,function(){if(null!=d&&d&&(!d||d.params)&&!d.destroyed){if(r?(n.css("background-image",'url("'+r+'")'),n.removeAttr("data-background")):(s&&(n.attr("srcset",s),n.removeAttr("data-srcset")),o&&(n.attr("sizes",o),n.removeAttr("data-sizes")),a&&(n.attr("src",a),n.removeAttr("data-src"))),n.addClass(u.loadedClass).removeClass(u.loadingClass),c.find("."+u.preloaderClass).remove(),d.params.loop&&l){var e=c.attr("data-swiper-slide-index");if(c.hasClass(d.params.slideDuplicateClass)){var t=d.$wrapperEl.children('[data-swiper-slide-index="'+e+'"]:not(.'+d.params.slideDuplicateClass+")");d.lazy.loadInSlide(t.index(),!1)}else{var i=d.$wrapperEl.children("."+d.params.slideDuplicateClass+'[data-swiper-slide-index="'+e+'"]');d.lazy.loadInSlide(i.index(),!1)}}d.emit("lazyImageReady",c[0],n[0])}}),d.emit("lazyImageLoad",c[0],n[0])})}},load:function(){var n=this,t=n.$wrapperEl,i=n.params,r=n.slides,e=n.activeIndex,a=n.virtual&&i.virtual.enabled,s=i.lazy,o=i.slidesPerView;function l(e){if(a){if(t.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]').length)return!0}else if(r[e])return!0;return!1}function d(e){return a?$(e).attr("data-swiper-slide-index"):$(e).index()}if("auto"===o&&(o=0),n.lazy.initialImageLoaded||(n.lazy.initialImageLoaded=!0),n.params.watchSlidesVisibility)t.children("."+i.slideVisibleClass).each(function(e,t){var i=a?$(t).attr("data-swiper-slide-index"):$(t).index();n.lazy.loadInSlide(i)});else if(1<o)for(var u=e;u<e+o;u+=1)l(u)&&n.lazy.loadInSlide(u);else n.lazy.loadInSlide(e);if(s.loadPrevNext)if(1<o||s.loadPrevNextAmount&&1<s.loadPrevNextAmount){for(var c=s.loadPrevNextAmount,p=o,h=Math.min(e+p+Math.max(c,p),r.length),f=Math.max(e-Math.max(p,c),0),v=e+o;v<h;v+=1)l(v)&&n.lazy.loadInSlide(v);for(var m=f;m<e;m+=1)l(m)&&n.lazy.loadInSlide(m)}else{var g=t.children("."+i.slideNextClass);0<g.length&&n.lazy.loadInSlide(d(g));var y=t.children("."+i.slidePrevClass);0<y.length&&n.lazy.loadInSlide(d(y))}}},R={LinearSpline:function(e,t){var i,n,r,a,s;return this.x=e,this.y=t,this.lastIndex=e.length-1,this.interpolate=function(e){return e?(s=function(e,t){for(n=-1,i=e.length;1<i-n;)e[r=i+n>>1]<=t?n=r:i=r;return i}(this.x,e),a=s-1,(e-this.x[a])*(this.y[s]-this.y[a])/(this.x[s]-this.x[a])+this.y[a]):0},this},getInterpolateFunction:function(e){var t=this;t.controller.spline||(t.controller.spline=t.params.loop?new R.LinearSpline(t.slidesGrid,e.slidesGrid):new R.LinearSpline(t.snapGrid,e.snapGrid))},setTranslate:function(e,t){var i,n,r=this,a=r.controller.control;function s(e){var t=r.rtlTranslate?-r.translate:r.translate;"slide"===r.params.controller.by&&(r.controller.getInterpolateFunction(e),n=-r.controller.spline.interpolate(-t)),n&&"container"!==r.params.controller.by||(i=(e.maxTranslate()-e.minTranslate())/(r.maxTranslate()-r.minTranslate()),n=(t-r.minTranslate())*i+e.minTranslate()),r.params.controller.inverse&&(n=e.maxTranslate()-n),e.updateProgress(n),e.setTranslate(n,r),e.updateActiveIndex(),e.updateSlidesClasses()}if(Array.isArray(a))for(var o=0;o<a.length;o+=1)a[o]!==t&&a[o]instanceof w&&s(a[o]);else a instanceof w&&t!==a&&s(a)},setTransition:function(t,e){var i,n=this,r=n.controller.control;function a(e){e.setTransition(t,n),0!==t&&(e.transitionStart(),e.params.autoHeight&&ee.nextTick(function(){e.updateAutoHeight()}),e.$wrapperEl.transitionEnd(function(){r&&(e.params.loop&&"slide"===n.params.controller.by&&e.loopFix(),e.transitionEnd())}))}if(Array.isArray(r))for(i=0;i<r.length;i+=1)r[i]!==e&&r[i]instanceof w&&a(r[i]);else r instanceof w&&e!==r&&a(r)}},X={makeElFocusable:function(e){return e.attr("tabIndex","0"),e},addElRole:function(e,t){return e.attr("role",t),e},addElLabel:function(e,t){return e.attr("aria-label",t),e},disableEl:function(e){return e.attr("aria-disabled",!0),e},enableEl:function(e){return e.attr("aria-disabled",!1),e},onEnterKey:function(e){var t=this,i=t.params.a11y;if(13===e.keyCode){var n=$(e.target);t.navigation&&t.navigation.$nextEl&&n.is(t.navigation.$nextEl)&&(t.isEnd&&!t.params.loop||t.slideNext(),t.isEnd?t.a11y.notify(i.lastSlideMessage):t.a11y.notify(i.nextSlideMessage)),t.navigation&&t.navigation.$prevEl&&n.is(t.navigation.$prevEl)&&(t.isBeginning&&!t.params.loop||t.slidePrev(),t.isBeginning?t.a11y.notify(i.firstSlideMessage):t.a11y.notify(i.prevSlideMessage)),t.pagination&&n.is("."+t.params.pagination.bulletClass)&&n[0].click()}},notify:function(e){var t=this.a11y.liveRegion;0!==t.length&&(t.html(""),t.html(e))},updateNavigation:function(){var e=this;if(!e.params.loop){var t=e.navigation,i=t.$nextEl,n=t.$prevEl;n&&0<n.length&&(e.isBeginning?e.a11y.disableEl(n):e.a11y.enableEl(n)),i&&0<i.length&&(e.isEnd?e.a11y.disableEl(i):e.a11y.enableEl(i))}},updatePagination:function(){var n=this,r=n.params.a11y;n.pagination&&n.params.pagination.clickable&&n.pagination.bullets&&n.pagination.bullets.length&&n.pagination.bullets.each(function(e,t){var i=$(t);n.a11y.makeElFocusable(i),n.a11y.addElRole(i,"button"),n.a11y.addElLabel(i,r.paginationBulletMessage.replace(/{{index}}/,i.index()+1))})},init:function(){var e=this;e.$el.append(e.a11y.liveRegion);var t,i,n=e.params.a11y;e.navigation&&e.navigation.$nextEl&&(t=e.navigation.$nextEl),e.navigation&&e.navigation.$prevEl&&(i=e.navigation.$prevEl),t&&(e.a11y.makeElFocusable(t),e.a11y.addElRole(t,"button"),e.a11y.addElLabel(t,n.nextSlideMessage),t.on("keydown",e.a11y.onEnterKey)),i&&(e.a11y.makeElFocusable(i),e.a11y.addElRole(i,"button"),e.a11y.addElLabel(i,n.prevSlideMessage),i.on("keydown",e.a11y.onEnterKey)),e.pagination&&e.params.pagination.clickable&&e.pagination.bullets&&e.pagination.bullets.length&&e.pagination.$el.on("keydown","."+e.params.pagination.bulletClass,e.a11y.onEnterKey)},destroy:function(){var e,t,i=this;i.a11y.liveRegion&&0<i.a11y.liveRegion.length&&i.a11y.liveRegion.remove(),i.navigation&&i.navigation.$nextEl&&(e=i.navigation.$nextEl),i.navigation&&i.navigation.$prevEl&&(t=i.navigation.$prevEl),e&&e.off("keydown",i.a11y.onEnterKey),t&&t.off("keydown",i.a11y.onEnterKey),i.pagination&&i.params.pagination.clickable&&i.pagination.bullets&&i.pagination.bullets.length&&i.pagination.$el.off("keydown","."+i.params.pagination.bulletClass,i.a11y.onEnterKey)}},F={init:function(){var e=this;if(e.params.history){if(!Z.history||!Z.history.pushState)return e.params.history.enabled=!1,void(e.params.hashNavigation.enabled=!0);var t=e.history;t.initialized=!0,t.paths=F.getPathValues(),(t.paths.key||t.paths.value)&&(t.scrollToSlide(0,t.paths.value,e.params.runCallbacksOnInit),e.params.history.replaceState||Z.addEventListener("popstate",e.history.setHistoryPopState))}},destroy:function(){this.params.history.replaceState||Z.removeEventListener("popstate",this.history.setHistoryPopState)},setHistoryPopState:function(){this.history.paths=F.getPathValues(),this.history.scrollToSlide(this.params.speed,this.history.paths.value,!1)},getPathValues:function(){var e=Z.location.pathname.slice(1).split("/").filter(function(e){return""!==e}),t=e.length;return{key:e[t-2],value:e[t-1]}},setHistory:function(e,t){if(this.history.initialized&&this.params.history.enabled){var i=this.slides.eq(t),n=F.slugify(i.attr("data-history"));Z.location.pathname.includes(e)||(n=e+"/"+n);var r=Z.history.state;r&&r.value===n||(this.params.history.replaceState?Z.history.replaceState({value:n},null,n):Z.history.pushState({value:n},null,n))}},slugify:function(e){return e.toString().replace(/\s+/g,"-").replace(/[^\w-]+/g,"").replace(/--+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},scrollToSlide:function(e,t,i){var n=this;if(t)for(var r=0,a=n.slides.length;r<a;r+=1){var s=n.slides.eq(r);if(F.slugify(s.attr("data-history"))===t&&!s.hasClass(n.params.slideDuplicateClass)){var o=s.index();n.slideTo(o,e,i)}}else n.slideTo(0,e,i)}},V={onHashCange:function(){var e=this,t=v.location.hash.replace("#","");if(t!==e.slides.eq(e.activeIndex).attr("data-hash")){var i=e.$wrapperEl.children("."+e.params.slideClass+'[data-hash="'+t+'"]').index();if(void 0===i)return;e.slideTo(i)}},setHash:function(){var e=this;if(e.hashNavigation.initialized&&e.params.hashNavigation.enabled)if(e.params.hashNavigation.replaceState&&Z.history&&Z.history.replaceState)Z.history.replaceState(null,null,"#"+e.slides.eq(e.activeIndex).attr("data-hash")||"");else{var t=e.slides.eq(e.activeIndex),i=t.attr("data-hash")||t.attr("data-history");v.location.hash=i||""}},init:function(){var e=this;if(!(!e.params.hashNavigation.enabled||e.params.history&&e.params.history.enabled)){e.hashNavigation.initialized=!0;var t=v.location.hash.replace("#","");if(t)for(var i=0,n=e.slides.length;i<n;i+=1){var r=e.slides.eq(i);if((r.attr("data-hash")||r.attr("data-history"))===t&&!r.hasClass(e.params.slideDuplicateClass)){var a=r.index();e.slideTo(a,0,e.params.runCallbacksOnInit,!0)}}e.params.hashNavigation.watchState&&$(Z).on("hashchange",e.hashNavigation.onHashCange)}},destroy:function(){this.params.hashNavigation.watchState&&$(Z).off("hashchange",this.hashNavigation.onHashCange)}},G={run:function(){var e=this,t=e.slides.eq(e.activeIndex),i=e.params.autoplay.delay;t.attr("data-swiper-autoplay")&&(i=t.attr("data-swiper-autoplay")||e.params.autoplay.delay),e.autoplay.timeout=ee.nextTick(function(){e.params.autoplay.reverseDirection?e.params.loop?(e.loopFix(),e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.isBeginning?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(e.slides.length-1,e.params.speed,!0,!0),e.emit("autoplay")):(e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.params.loop?(e.loopFix(),e.slideNext(e.params.speed,!0,!0),e.emit("autoplay")):e.isEnd?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(0,e.params.speed,!0,!0),e.emit("autoplay")):(e.slideNext(e.params.speed,!0,!0),e.emit("autoplay"))},i)},start:function(){var e=this;return void 0===e.autoplay.timeout&&!e.autoplay.running&&(e.autoplay.running=!0,e.emit("autoplayStart"),e.autoplay.run(),!0)},stop:function(){var e=this;return!!e.autoplay.running&&void 0!==e.autoplay.timeout&&(e.autoplay.timeout&&(clearTimeout(e.autoplay.timeout),e.autoplay.timeout=void 0),e.autoplay.running=!1,e.emit("autoplayStop"),!0)},pause:function(e){var t=this;t.autoplay.running&&(t.autoplay.paused||(t.autoplay.timeout&&clearTimeout(t.autoplay.timeout),t.autoplay.paused=!0,0!==e&&t.params.autoplay.waitForTransition?(t.$wrapperEl[0].addEventListener("transitionend",t.autoplay.onTransitionEnd),t.$wrapperEl[0].addEventListener("webkitTransitionEnd",t.autoplay.onTransitionEnd)):(t.autoplay.paused=!1,t.autoplay.run())))}},W={setTranslate:function(){for(var e=this,t=e.slides,i=0;i<t.length;i+=1){var n=e.slides.eq(i),r=-n[0].swiperSlideOffset;e.params.virtualTranslate||(r-=e.translate);var a=0;e.isHorizontal()||(a=r,r=0);var s=e.params.fadeEffect.crossFade?Math.max(1-Math.abs(n[0].progress),0):1+Math.min(Math.max(n[0].progress,-1),0);n.css({opacity:s}).transform("translate3d("+r+"px, "+a+"px, 0px)")}},setTransition:function(e){var i=this,t=i.slides,n=i.$wrapperEl;if(t.transition(e),i.params.virtualTranslate&&0!==e){var r=!1;t.transitionEnd(function(){if(!r&&i&&!i.destroyed){r=!0,i.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)n.trigger(e[t])}})}}},Y={setTranslate:function(){var e,t=this,i=t.$el,n=t.$wrapperEl,r=t.slides,a=t.width,s=t.height,o=t.rtlTranslate,l=t.size,d=t.params.cubeEffect,u=t.isHorizontal(),c=t.virtual&&t.params.virtual.enabled,p=0;d.shadow&&(u?(0===(e=n.find(".swiper-cube-shadow")).length&&(e=$('<div class="swiper-cube-shadow"></div>'),n.append(e)),e.css({height:a+"px"})):0===(e=i.find(".swiper-cube-shadow")).length&&(e=$('<div class="swiper-cube-shadow"></div>'),i.append(e)));for(var h=0;h<r.length;h+=1){var f=r.eq(h),v=h;c&&(v=parseInt(f.attr("data-swiper-slide-index"),10));var m=90*v,g=Math.floor(m/360);o&&(m=-m,g=Math.floor(-m/360));var y=Math.max(Math.min(f[0].progress,1),-1),b=0,x=0,w=0;v%4==0?(b=4*-g*l,w=0):(v-1)%4==0?(b=0,w=4*-g*l):(v-2)%4==0?(b=l+4*g*l,w=l):(v-3)%4==0&&(b=-l,w=3*l+4*l*g),o&&(b=-b),u||(x=b,b=0);var T="rotateX("+(u?0:-m)+"deg) rotateY("+(u?m:0)+"deg) translate3d("+b+"px, "+x+"px, "+w+"px)";if(y<=1&&-1<y&&(p=90*v+90*y,o&&(p=90*-v-90*y)),f.transform(T),d.slideShadows){var E=u?f.find(".swiper-slide-shadow-left"):f.find(".swiper-slide-shadow-top"),C=u?f.find(".swiper-slide-shadow-right"):f.find(".swiper-slide-shadow-bottom");0===E.length&&(E=$('<div class="swiper-slide-shadow-'+(u?"left":"top")+'"></div>'),f.append(E)),0===C.length&&(C=$('<div class="swiper-slide-shadow-'+(u?"right":"bottom")+'"></div>'),f.append(C)),E.length&&(E[0].style.opacity=Math.max(-y,0)),C.length&&(C[0].style.opacity=Math.max(y,0))}}if(n.css({"-webkit-transform-origin":"50% 50% -"+l/2+"px","-moz-transform-origin":"50% 50% -"+l/2+"px","-ms-transform-origin":"50% 50% -"+l/2+"px","transform-origin":"50% 50% -"+l/2+"px"}),d.shadow)if(u)e.transform("translate3d(0px, "+(a/2+d.shadowOffset)+"px, "+-a/2+"px) rotateX(90deg) rotateZ(0deg) scale("+d.shadowScale+")");else{var S=Math.abs(p)-90*Math.floor(Math.abs(p)/90),k=1.5-(Math.sin(2*S*Math.PI/360)/2+Math.cos(2*S*Math.PI/360)/2),M=d.shadowScale,P=d.shadowScale/k,D=d.shadowOffset;e.transform("scale3d("+M+", 1, "+P+") translate3d(0px, "+(s/2+D)+"px, "+-s/2/P+"px) rotateX(-90deg)")}var L=z.isSafari||z.isUiWebView?-l/2:0;n.transform("translate3d(0px,0,"+L+"px) rotateX("+(t.isHorizontal()?0:p)+"deg) rotateY("+(t.isHorizontal()?-p:0)+"deg)")},setTransition:function(e){var t=this.$el;this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),this.params.cubeEffect.shadow&&!this.isHorizontal()&&t.find(".swiper-cube-shadow").transition(e)}},_={setTranslate:function(){for(var e=this,t=e.slides,i=e.rtlTranslate,n=0;n<t.length;n+=1){var r=t.eq(n),a=r[0].progress;e.params.flipEffect.limitRotation&&(a=Math.max(Math.min(r[0].progress,1),-1));var s=-180*a,o=0,l=-r[0].swiperSlideOffset,d=0;if(e.isHorizontal()?i&&(s=-s):(d=l,o=-s,s=l=0),r[0].style.zIndex=-Math.abs(Math.round(a))+t.length,e.params.flipEffect.slideShadows){var u=e.isHorizontal()?r.find(".swiper-slide-shadow-left"):r.find(".swiper-slide-shadow-top"),c=e.isHorizontal()?r.find(".swiper-slide-shadow-right"):r.find(".swiper-slide-shadow-bottom");0===u.length&&(u=$('<div class="swiper-slide-shadow-'+(e.isHorizontal()?"left":"top")+'"></div>'),r.append(u)),0===c.length&&(c=$('<div class="swiper-slide-shadow-'+(e.isHorizontal()?"right":"bottom")+'"></div>'),r.append(c)),u.length&&(u[0].style.opacity=Math.max(-a,0)),c.length&&(c[0].style.opacity=Math.max(a,0))}r.transform("translate3d("+l+"px, "+d+"px, 0px) rotateX("+o+"deg) rotateY("+s+"deg)")}},setTransition:function(e){var i=this,t=i.slides,n=i.activeIndex,r=i.$wrapperEl;if(t.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),i.params.virtualTranslate&&0!==e){var a=!1;t.eq(n).transitionEnd(function(){if(!a&&i&&!i.destroyed){a=!0,i.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)r.trigger(e[t])}})}}},U={setTranslate:function(){for(var e=this,t=e.width,i=e.height,n=e.slides,r=e.$wrapperEl,a=e.slidesSizesGrid,s=e.params.coverflowEffect,o=e.isHorizontal(),l=e.translate,d=o?t/2-l:i/2-l,u=o?s.rotate:-s.rotate,c=s.depth,p=0,h=n.length;p<h;p+=1){var f=n.eq(p),v=a[p],m=(d-f[0].swiperSlideOffset-v/2)/v*s.modifier,g=o?u*m:0,y=o?0:u*m,b=-c*Math.abs(m),x=o?0:s.stretch*m,w=o?s.stretch*m:0;Math.abs(w)<.001&&(w=0),Math.abs(x)<.001&&(x=0),Math.abs(b)<.001&&(b=0),Math.abs(g)<.001&&(g=0),Math.abs(y)<.001&&(y=0);var T="translate3d("+w+"px,"+x+"px,"+b+"px)  rotateX("+y+"deg) rotateY("+g+"deg)";if(f.transform(T),f[0].style.zIndex=1-Math.abs(Math.round(m)),s.slideShadows){var E=o?f.find(".swiper-slide-shadow-left"):f.find(".swiper-slide-shadow-top"),C=o?f.find(".swiper-slide-shadow-right"):f.find(".swiper-slide-shadow-bottom");0===E.length&&(E=$('<div class="swiper-slide-shadow-'+(o?"left":"top")+'"></div>'),f.append(E)),0===C.length&&(C=$('<div class="swiper-slide-shadow-'+(o?"right":"bottom")+'"></div>'),f.append(C)),E.length&&(E[0].style.opacity=0<m?m:0),C.length&&(C[0].style.opacity=0<-m?-m:0)}}(te.pointerEvents||te.prefixedPointerEvents)&&(r[0].style.perspectiveOrigin=d+"px 50%")},setTransition:function(e){this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)}},K={init:function(){var e=this,t=e.params.thumbs,i=e.constructor;t.swiper instanceof i?(e.thumbs.swiper=t.swiper,ee.extend(e.thumbs.swiper.originalParams,{watchSlidesProgress:!0,slideToClickedSlide:!1}),ee.extend(e.thumbs.swiper.params,{watchSlidesProgress:!0,slideToClickedSlide:!1})):ee.isObject(t.swiper)&&(e.thumbs.swiper=new i(ee.extend({},t.swiper,{watchSlidesVisibility:!0,watchSlidesProgress:!0,slideToClickedSlide:!1})),e.thumbs.swiperCreated=!0),e.thumbs.swiper.$el.addClass(e.params.thumbs.thumbsContainerClass),e.thumbs.swiper.on("tap",e.thumbs.onThumbClick)},onThumbClick:function(){var e=this,t=e.thumbs.swiper;if(t){var i=t.clickedIndex,n=t.clickedSlide;if(!(n&&$(n).hasClass(e.params.thumbs.slideThumbActiveClass)||null==i)){var r;if(r=t.params.loop?parseInt($(t.clickedSlide).attr("data-swiper-slide-index"),10):i,e.params.loop){var a=e.activeIndex;e.slides.eq(a).hasClass(e.params.slideDuplicateClass)&&(e.loopFix(),e._clientLeft=e.$wrapperEl[0].clientLeft,a=e.activeIndex);var s=e.slides.eq(a).prevAll('[data-swiper-slide-index="'+r+'"]').eq(0).index(),o=e.slides.eq(a).nextAll('[data-swiper-slide-index="'+r+'"]').eq(0).index();r=void 0===s?o:void 0===o?s:o-a<a-s?o:s}e.slideTo(r)}}},update:function(e){var t=this,i=t.thumbs.swiper;if(i){var n="auto"===i.params.slidesPerView?i.slidesPerViewDynamic():i.params.slidesPerView;if(t.realIndex!==i.realIndex){var r,a=i.activeIndex;if(i.params.loop){i.slides.eq(a).hasClass(i.params.slideDuplicateClass)&&(i.loopFix(),i._clientLeft=i.$wrapperEl[0].clientLeft,a=i.activeIndex);var s=i.slides.eq(a).prevAll('[data-swiper-slide-index="'+t.realIndex+'"]').eq(0).index(),o=i.slides.eq(a).nextAll('[data-swiper-slide-index="'+t.realIndex+'"]').eq(0).index();r=void 0===s?o:void 0===o?s:o-a==a-s?a:o-a<a-s?o:s}else r=t.realIndex;i.visibleSlidesIndexes.indexOf(r)<0&&(i.params.centeredSlides?r=a<r?r-Math.floor(n/2)+1:r+Math.floor(n/2)-1:a<r&&(r=r-n+1),i.slideTo(r,e?0:void 0))}var l=1,d=t.params.thumbs.slideThumbActiveClass;if(1<t.params.slidesPerView&&!t.params.centeredSlides&&(l=t.params.slidesPerView),i.slides.removeClass(d),i.params.loop)for(var u=0;u<l;u+=1)i.$wrapperEl.children('[data-swiper-slide-index="'+(t.realIndex+u)+'"]').addClass(d);else for(var c=0;c<l;c+=1)i.slides.eq(t.realIndex+c).addClass(d)}}},Q=[T,E,C,S,M,D,A,{name:"mousewheel",params:{mousewheel:{enabled:!1,releaseOnEdges:!1,invert:!1,forceToAxis:!1,sensitivity:1,eventsTarged:"container"}},create:function(){var e=this;ee.extend(e,{mousewheel:{enabled:!1,enable:I.enable.bind(e),disable:I.disable.bind(e),handle:I.handle.bind(e),handleMouseEnter:I.handleMouseEnter.bind(e),handleMouseLeave:I.handleMouseLeave.bind(e),lastScrollTime:ee.now()}})},on:{init:function(){this.params.mousewheel.enabled&&this.mousewheel.enable()},destroy:function(){this.mousewheel.enabled&&this.mousewheel.disable()}}},{name:"navigation",params:{navigation:{nextEl:null,prevEl:null,hideOnClick:!1,disabledClass:"swiper-button-disabled",hiddenClass:"swiper-button-hidden",lockClass:"swiper-button-lock"}},create:function(){var e=this;ee.extend(e,{navigation:{init:N.init.bind(e),update:N.update.bind(e),destroy:N.destroy.bind(e),onNextClick:N.onNextClick.bind(e),onPrevClick:N.onPrevClick.bind(e)}})},on:{init:function(){this.navigation.init(),this.navigation.update()},toEdge:function(){this.navigation.update()},fromEdge:function(){this.navigation.update()},destroy:function(){this.navigation.destroy()},click:function(e){var t,i=this,n=i.navigation,r=n.$nextEl,a=n.$prevEl;!i.params.navigation.hideOnClick||$(e.target).is(a)||$(e.target).is(r)||(r?t=r.hasClass(i.params.navigation.hiddenClass):a&&(t=a.hasClass(i.params.navigation.hiddenClass)),!0===t?i.emit("navigationShow",i):i.emit("navigationHide",i),r&&r.toggleClass(i.params.navigation.hiddenClass),a&&a.toggleClass(i.params.navigation.hiddenClass))}}},{name:"pagination",params:{pagination:{el:null,bulletElement:"span",clickable:!1,hideOnClick:!1,renderBullet:null,renderProgressbar:null,renderFraction:null,renderCustom:null,progressbarOpposite:!1,type:"bullets",dynamicBullets:!1,dynamicMainBullets:1,formatFractionCurrent:function(e){return e},formatFractionTotal:function(e){return e},bulletClass:"swiper-pagination-bullet",bulletActiveClass:"swiper-pagination-bullet-active",modifierClass:"swiper-pagination-",currentClass:"swiper-pagination-current",totalClass:"swiper-pagination-total",hiddenClass:"swiper-pagination-hidden",progressbarFillClass:"swiper-pagination-progressbar-fill",progressbarOppositeClass:"swiper-pagination-progressbar-opposite",clickableClass:"swiper-pagination-clickable",lockClass:"swiper-pagination-lock"}},create:function(){var e=this;ee.extend(e,{pagination:{init:O.init.bind(e),render:O.render.bind(e),update:O.update.bind(e),destroy:O.destroy.bind(e),dynamicBulletIndex:0}})},on:{init:function(){this.pagination.init(),this.pagination.render(),this.pagination.update()},activeIndexChange:function(){this.params.loop?this.pagination.update():void 0===this.snapIndex&&this.pagination.update()},snapIndexChange:function(){this.params.loop||this.pagination.update()},slidesLengthChange:function(){this.params.loop&&(this.pagination.render(),this.pagination.update())},snapGridLengthChange:function(){this.params.loop||(this.pagination.render(),this.pagination.update())},destroy:function(){this.pagination.destroy()},click:function(e){var t=this;t.params.pagination.el&&t.params.pagination.hideOnClick&&0<t.pagination.$el.length&&!$(e.target).hasClass(t.params.pagination.bulletClass)&&(!0===t.pagination.$el.hasClass(t.params.pagination.hiddenClass)?t.emit("paginationShow",t):t.emit("paginationHide",t),t.pagination.$el.toggleClass(t.params.pagination.hiddenClass))}}},{name:"scrollbar",params:{scrollbar:{el:null,dragSize:"auto",hide:!1,draggable:!1,snapOnRelease:!0,lockClass:"swiper-scrollbar-lock",dragClass:"swiper-scrollbar-drag"}},create:function(){var e=this;ee.extend(e,{scrollbar:{init:H.init.bind(e),destroy:H.destroy.bind(e),updateSize:H.updateSize.bind(e),setTranslate:H.setTranslate.bind(e),setTransition:H.setTransition.bind(e),enableDraggable:H.enableDraggable.bind(e),disableDraggable:H.disableDraggable.bind(e),setDragPosition:H.setDragPosition.bind(e),onDragStart:H.onDragStart.bind(e),onDragMove:H.onDragMove.bind(e),onDragEnd:H.onDragEnd.bind(e),isTouched:!1,timeout:null,dragTimeout:null}})},on:{init:function(){this.scrollbar.init(),this.scrollbar.updateSize(),this.scrollbar.setTranslate()},update:function(){this.scrollbar.updateSize()},resize:function(){this.scrollbar.updateSize()},observerUpdate:function(){this.scrollbar.updateSize()},setTranslate:function(){this.scrollbar.setTranslate()},setTransition:function(e){this.scrollbar.setTransition(e)},destroy:function(){this.scrollbar.destroy()}}},{name:"parallax",params:{parallax:{enabled:!1}},create:function(){ee.extend(this,{parallax:{setTransform:j.setTransform.bind(this),setTranslate:j.setTranslate.bind(this),setTransition:j.setTransition.bind(this)}})},on:{beforeInit:function(){this.params.parallax.enabled&&(this.params.watchSlidesProgress=!0,this.originalParams.watchSlidesProgress=!0)},init:function(){this.params.parallax.enabled&&this.parallax.setTranslate()},setTranslate:function(){this.params.parallax.enabled&&this.parallax.setTranslate()},setTransition:function(e){this.params.parallax.enabled&&this.parallax.setTransition(e)}}},{name:"zoom",params:{zoom:{enabled:!1,maxRatio:3,minRatio:1,toggle:!0,containerClass:"swiper-zoom-container",zoomedSlideClass:"swiper-slide-zoomed"}},create:function(){var n=this,t={enabled:!1,scale:1,currentScale:1,isScaling:!1,gesture:{$slideEl:void 0,slideWidth:void 0,slideHeight:void 0,$imageEl:void 0,$imageWrapEl:void 0,maxRatio:3},image:{isTouched:void 0,isMoved:void 0,currentX:void 0,currentY:void 0,minX:void 0,minY:void 0,maxX:void 0,maxY:void 0,width:void 0,height:void 0,startX:void 0,startY:void 0,touchesStart:{},touchesCurrent:{}},velocity:{x:void 0,y:void 0,prevPositionX:void 0,prevPositionY:void 0,prevTime:void 0}};"onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out".split(" ").forEach(function(e){t[e]=q[e].bind(n)}),ee.extend(n,{zoom:t});var r=1;Object.defineProperty(n.zoom,"scale",{get:function(){return r},set:function(e){if(r!==e){var t=n.zoom.gesture.$imageEl?n.zoom.gesture.$imageEl[0]:void 0,i=n.zoom.gesture.$slideEl?n.zoom.gesture.$slideEl[0]:void 0;n.emit("zoomChange",e,t,i)}r=e}})},on:{init:function(){this.params.zoom.enabled&&this.zoom.enable()},destroy:function(){this.zoom.disable()},touchStart:function(e){this.zoom.enabled&&this.zoom.onTouchStart(e)},touchEnd:function(e){this.zoom.enabled&&this.zoom.onTouchEnd(e)},doubleTap:function(e){this.params.zoom.enabled&&this.zoom.enabled&&this.params.zoom.toggle&&this.zoom.toggle(e)},transitionEnd:function(){this.zoom.enabled&&this.params.zoom.enabled&&this.zoom.onTransitionEnd()}}},{name:"lazy",params:{lazy:{enabled:!1,loadPrevNext:!1,loadPrevNextAmount:1,loadOnTransitionStart:!1,elementClass:"swiper-lazy",loadingClass:"swiper-lazy-loading",loadedClass:"swiper-lazy-loaded",preloaderClass:"swiper-lazy-preloader"}},create:function(){ee.extend(this,{lazy:{initialImageLoaded:!1,load:B.load.bind(this),loadInSlide:B.loadInSlide.bind(this)}})},on:{beforeInit:function(){this.params.lazy.enabled&&this.params.preloadImages&&(this.params.preloadImages=!1)},init:function(){this.params.lazy.enabled&&!this.params.loop&&0===this.params.initialSlide&&this.lazy.load()},scroll:function(){this.params.freeMode&&!this.params.freeModeSticky&&this.lazy.load()},resize:function(){this.params.lazy.enabled&&this.lazy.load()},scrollbarDragMove:function(){this.params.lazy.enabled&&this.lazy.load()},transitionStart:function(){var e=this;e.params.lazy.enabled&&(e.params.lazy.loadOnTransitionStart||!e.params.lazy.loadOnTransitionStart&&!e.lazy.initialImageLoaded)&&e.lazy.load()},transitionEnd:function(){this.params.lazy.enabled&&!this.params.lazy.loadOnTransitionStart&&this.lazy.load()}}},{name:"controller",params:{controller:{control:void 0,inverse:!1,by:"slide"}},create:function(){var e=this;ee.extend(e,{controller:{control:e.params.controller.control,getInterpolateFunction:R.getInterpolateFunction.bind(e),setTranslate:R.setTranslate.bind(e),setTransition:R.setTransition.bind(e)}})},on:{update:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},resize:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},observerUpdate:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},setTranslate:function(e,t){this.controller.control&&this.controller.setTranslate(e,t)},setTransition:function(e,t){this.controller.control&&this.controller.setTransition(e,t)}}},{name:"a11y",params:{a11y:{enabled:!0,notificationClass:"swiper-notification",prevSlideMessage:"Previous slide",nextSlideMessage:"Next slide",firstSlideMessage:"This is the first slide",lastSlideMessage:"This is the last slide",paginationBulletMessage:"Go to slide {{index}}"}},create:function(){var t=this;ee.extend(t,{a11y:{liveRegion:$('<span class="'+t.params.a11y.notificationClass+'" aria-live="assertive" aria-atomic="true"></span>')}}),Object.keys(X).forEach(function(e){t.a11y[e]=X[e].bind(t)})},on:{init:function(){this.params.a11y.enabled&&(this.a11y.init(),this.a11y.updateNavigation())},toEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},fromEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},paginationUpdate:function(){this.params.a11y.enabled&&this.a11y.updatePagination()},destroy:function(){this.params.a11y.enabled&&this.a11y.destroy()}}},{name:"history",params:{history:{enabled:!1,replaceState:!1,key:"slides"}},create:function(){var e=this;ee.extend(e,{history:{init:F.init.bind(e),setHistory:F.setHistory.bind(e),setHistoryPopState:F.setHistoryPopState.bind(e),scrollToSlide:F.scrollToSlide.bind(e),destroy:F.destroy.bind(e)}})},on:{init:function(){this.params.history.enabled&&this.history.init()},destroy:function(){this.params.history.enabled&&this.history.destroy()},transitionEnd:function(){this.history.initialized&&this.history.setHistory(this.params.history.key,this.activeIndex)}}},{name:"hash-navigation",params:{hashNavigation:{enabled:!1,replaceState:!1,watchState:!1}},create:function(){var e=this;ee.extend(e,{hashNavigation:{initialized:!1,init:V.init.bind(e),destroy:V.destroy.bind(e),setHash:V.setHash.bind(e),onHashCange:V.onHashCange.bind(e)}})},on:{init:function(){this.params.hashNavigation.enabled&&this.hashNavigation.init()},destroy:function(){this.params.hashNavigation.enabled&&this.hashNavigation.destroy()},transitionEnd:function(){this.hashNavigation.initialized&&this.hashNavigation.setHash()}}},{name:"autoplay",params:{autoplay:{enabled:!1,delay:3e3,waitForTransition:!0,disableOnInteraction:!0,stopOnLastSlide:!1,reverseDirection:!1}},create:function(){var t=this;ee.extend(t,{autoplay:{running:!1,paused:!1,run:G.run.bind(t),start:G.start.bind(t),stop:G.stop.bind(t),pause:G.pause.bind(t),onTransitionEnd:function(e){t&&!t.destroyed&&t.$wrapperEl&&e.target===this&&(t.$wrapperEl[0].removeEventListener("transitionend",t.autoplay.onTransitionEnd),t.$wrapperEl[0].removeEventListener("webkitTransitionEnd",t.autoplay.onTransitionEnd),t.autoplay.paused=!1,t.autoplay.running?t.autoplay.run():t.autoplay.stop())}}})},on:{init:function(){this.params.autoplay.enabled&&this.autoplay.start()},beforeTransitionStart:function(e,t){this.autoplay.running&&(t||!this.params.autoplay.disableOnInteraction?this.autoplay.pause(e):this.autoplay.stop())},sliderFirstMove:function(){this.autoplay.running&&(this.params.autoplay.disableOnInteraction?this.autoplay.stop():this.autoplay.pause())},destroy:function(){this.autoplay.running&&this.autoplay.stop()}}},{name:"effect-fade",params:{fadeEffect:{crossFade:!1}},create:function(){ee.extend(this,{fadeEffect:{setTranslate:W.setTranslate.bind(this),setTransition:W.setTransition.bind(this)}})},on:{beforeInit:function(){var e=this;if("fade"===e.params.effect){e.classNames.push(e.params.containerModifierClass+"fade");var t={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};ee.extend(e.params,t),ee.extend(e.originalParams,t)}},setTranslate:function(){"fade"===this.params.effect&&this.fadeEffect.setTranslate()},setTransition:function(e){"fade"===this.params.effect&&this.fadeEffect.setTransition(e)}}},{name:"effect-cube",params:{cubeEffect:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94}},create:function(){ee.extend(this,{cubeEffect:{setTranslate:Y.setTranslate.bind(this),setTransition:Y.setTransition.bind(this)}})},on:{beforeInit:function(){var e=this;if("cube"===e.params.effect){e.classNames.push(e.params.containerModifierClass+"cube"),e.classNames.push(e.params.containerModifierClass+"3d");var t={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,resistanceRatio:0,spaceBetween:0,centeredSlides:!1,virtualTranslate:!0};ee.extend(e.params,t),ee.extend(e.originalParams,t)}},setTranslate:function(){"cube"===this.params.effect&&this.cubeEffect.setTranslate()},setTransition:function(e){"cube"===this.params.effect&&this.cubeEffect.setTransition(e)}}},{name:"effect-flip",params:{flipEffect:{slideShadows:!0,limitRotation:!0}},create:function(){ee.extend(this,{flipEffect:{setTranslate:_.setTranslate.bind(this),setTransition:_.setTransition.bind(this)}})},on:{beforeInit:function(){var e=this;if("flip"===e.params.effect){e.classNames.push(e.params.containerModifierClass+"flip"),e.classNames.push(e.params.containerModifierClass+"3d");var t={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};ee.extend(e.params,t),ee.extend(e.originalParams,t)}},setTranslate:function(){"flip"===this.params.effect&&this.flipEffect.setTranslate()},setTransition:function(e){"flip"===this.params.effect&&this.flipEffect.setTransition(e)}}},{name:"effect-coverflow",params:{coverflowEffect:{rotate:50,stretch:0,depth:100,modifier:1,slideShadows:!0}},create:function(){ee.extend(this,{coverflowEffect:{setTranslate:U.setTranslate.bind(this),setTransition:U.setTransition.bind(this)}})},on:{beforeInit:function(){var e=this;"coverflow"===e.params.effect&&(e.classNames.push(e.params.containerModifierClass+"coverflow"),e.classNames.push(e.params.containerModifierClass+"3d"),e.params.watchSlidesProgress=!0,e.originalParams.watchSlidesProgress=!0)},setTranslate:function(){"coverflow"===this.params.effect&&this.coverflowEffect.setTranslate()},setTransition:function(e){"coverflow"===this.params.effect&&this.coverflowEffect.setTransition(e)}}},{name:"thumbs",params:{thumbs:{swiper:null,slideThumbActiveClass:"swiper-slide-thumb-active",thumbsContainerClass:"swiper-container-thumbs"}},create:function(){ee.extend(this,{thumbs:{swiper:null,init:K.init.bind(this),update:K.update.bind(this),onThumbClick:K.onThumbClick.bind(this)}})},on:{beforeInit:function(){var e=this.params.thumbs;e&&e.swiper&&(this.thumbs.init(),this.thumbs.update(!0))},slideChange:function(){this.thumbs.swiper&&this.thumbs.update()},update:function(){this.thumbs.swiper&&this.thumbs.update()},resize:function(){this.thumbs.swiper&&this.thumbs.update()},observerUpdate:function(){this.thumbs.swiper&&this.thumbs.update()},setTransition:function(e){var t=this.thumbs.swiper;t&&t.setTransition(e)},beforeDestroy:function(){var e=this.thumbs.swiper;e&&this.thumbs.swiperCreated&&e&&e.destroy()}}}];return void 0===w.use&&(w.use=w.Class.use,w.installModule=w.Class.installModule),w.use(Q),w});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
